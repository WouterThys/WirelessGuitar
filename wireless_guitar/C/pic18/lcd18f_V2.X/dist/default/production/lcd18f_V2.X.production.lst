

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Sun Mar 15 14:35:53 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F2550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     8                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    44                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    45                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    46                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    47  0000                     
    48                           	psect	idataCOMRAM
    49  001BF8                     __pidataCOMRAM:
    50                           	opt stack 0
    51                           
    52                           ;initializer for _tempo
    53  001BF8  0078               	dw	120
    54                           
    55                           ;initializer for _m1
    56  001BFA  04                 	db	4
    57                           
    58                           ;initializer for _sub_menu_metronoom
    59  001BFB  01                 	db	1
    60                           
    61                           ;initializer for _t1
    62  001BFC  01                 	db	1
    63                           
    64                           ;initializer for _t2
    65  001BFD  02                 	db	2
    66                           
    67                           	psect	idataBANK0
    68  001BD6                     __pidataBANK0:
    69                           	opt stack 0
    70                           
    71                           ;initializer for ___HexVal
    72  001BD6  30                 	db	48
    73  001BD7  31                 	db	49
    74  001BD8  32                 	db	50
    75  001BD9  33                 	db	51
    76  001BDA  34                 	db	52
    77  001BDB  35                 	db	53
    78  001BDC  36                 	db	54
    79  001BDD  37                 	db	55
    80  001BDE  38                 	db	56
    81  001BDF  39                 	db	57
    82  001BE0  41                 	db	65
    83  001BE1  42                 	db	66
    84  001BE2  43                 	db	67
    85  001BE3  44                 	db	68
    86  001BE4  45                 	db	69
    87  001BE5  46                 	db	70
    88                           
    89                           ;initializer for lcd_start_up@F5048
    90  001BE6  57                 	db	87
    91  001BE7  61                 	db	97
    92  001BE8  6C                 	db	108
    93  001BE9  64                 	db	100
    94  001BEA  6F                 	db	111
    95  001BEB  00                 	db	0
    96                           
    97                           	psect	mediumconst
    98  007D5A                     __pmediumconst:
    99                           	opt stack 0
   100  007D5A  00                 	db	0
   101  007D5B                     ___costum0:
   102                           	opt stack 0
   103  007D5B  00                 	db	0
   104  007D5C  02                 	db	2
   105  007D5D  04                 	db	4
   106  007D5E  04                 	db	4
   107  007D5F  04                 	db	4
   108  007D60  08                 	db	8
   109  007D61  08                 	db	8
   110  007D62  08                 	db	8
   111  007D63  00                 	db	0
   112  007D64  00                 	db	0
   113  007D65  00                 	db	0
   114  007D66  00                 	db	0
   115  007D67  00                 	db	0
   116  007D68  00                 	db	0
   117  007D69  00                 	db	0
   118  007D6A  00                 	db	0
   119  007D6B  00                 	db	0
   120  007D6C  08                 	db	8
   121  007D6D  04                 	db	4
   122  007D6E  04                 	db	4
   123  007D6F  00                 	db	0
   124  007D70  02                 	db	2
   125  007D71  02                 	db	2
   126  007D72  02                 	db	2
   127  007D73  08                 	db	8
   128  007D74  08                 	db	8
   129  007D75  08                 	db	8
   130  007D76  04                 	db	4
   131  007D77  04                 	db	4
   132  007D78  02                 	db	2
   133  007D79  01                 	db	1
   134  007D7A  00                 	db	0
   135  007D7B  0E                 	db	14
   136  007D7C  0A                 	db	10
   137  007D7D  0E                 	db	14
   138  007D7E  00                 	db	0
   139  007D7F  00                 	db	0
   140  007D80  00                 	db	0
   141  007D81  00                 	db	0
   142  007D82  1F                 	db	31
   143  007D83  02                 	db	2
   144  007D84  02                 	db	2
   145  007D85  04                 	db	4
   146  007D86  04                 	db	4
   147  007D87  04                 	db	4
   148  007D88  08                 	db	8
   149  007D89  10                 	db	16
   150  007D8A  00                 	db	0
   151  007D8B  00                 	db	0
   152  007D8C  00                 	db	0
   153  007D8D  00                 	db	0
   154  007D8E  00                 	db	0
   155  007D8F  00                 	db	0
   156  007D90  00                 	db	0
   157  007D91  00                 	db	0
   158  007D92  00                 	db	0
   159  007D93  00                 	db	0
   160  007D94  00                 	db	0
   161  007D95  00                 	db	0
   162  007D96  00                 	db	0
   163  007D97  00                 	db	0
   164  007D98  00                 	db	0
   165  007D99  00                 	db	0
   166  007D9A  00                 	db	0
   167  007D9B                     __end_of___costum0:
   168                           	opt stack 0
   169  007D9B                     ___costum1:
   170                           	opt stack 0
   171  007D9B  00                 	db	0
   172  007D9C  02                 	db	2
   173  007D9D  04                 	db	4
   174  007D9E  08                 	db	8
   175  007D9F  08                 	db	8
   176  007DA0  10                 	db	16
   177  007DA1  10                 	db	16
   178  007DA2  10                 	db	16
   179  007DA3  00                 	db	0
   180  007DA4  00                 	db	0
   181  007DA5  00                 	db	0
   182  007DA6  00                 	db	0
   183  007DA7  00                 	db	0
   184  007DA8  00                 	db	0
   185  007DA9  00                 	db	0
   186  007DAA  0E                 	db	14
   187  007DAB  00                 	db	0
   188  007DAC  08                 	db	8
   189  007DAD  04                 	db	4
   190  007DAE  02                 	db	2
   191  007DAF  02                 	db	2
   192  007DB0  01                 	db	1
   193  007DB1  01                 	db	1
   194  007DB2  01                 	db	1
   195  007DB3  10                 	db	16
   196  007DB4  08                 	db	8
   197  007DB5  08                 	db	8
   198  007DB6  04                 	db	4
   199  007DB7  02                 	db	2
   200  007DB8  01                 	db	1
   201  007DB9  00                 	db	0
   202  007DBA  00                 	db	0
   203  007DBB  0A                 	db	10
   204  007DBC  0E                 	db	14
   205  007DBD  00                 	db	0
   206  007DBE  00                 	db	0
   207  007DBF  00                 	db	0
   208  007DC0  00                 	db	0
   209  007DC1  1F                 	db	31
   210  007DC2  00                 	db	0
   211  007DC3  01                 	db	1
   212  007DC4  02                 	db	2
   213  007DC5  02                 	db	2
   214  007DC6  04                 	db	4
   215  007DC7  08                 	db	8
   216  007DC8  10                 	db	16
   217  007DC9  00                 	db	0
   218  007DCA  00                 	db	0
   219  007DCB  00                 	db	0
   220  007DCC  00                 	db	0
   221  007DCD  00                 	db	0
   222  007DCE  00                 	db	0
   223  007DCF  00                 	db	0
   224  007DD0  00                 	db	0
   225  007DD1  00                 	db	0
   226  007DD2  00                 	db	0
   227  007DD3  00                 	db	0
   228  007DD4  00                 	db	0
   229  007DD5  00                 	db	0
   230  007DD6  00                 	db	0
   231  007DD7  00                 	db	0
   232  007DD8  00                 	db	0
   233  007DD9  00                 	db	0
   234  007DDA  00                 	db	0
   235  007DDB                     __end_of___costum1:
   236                           	opt stack 0
   237  007DDB                     ___costum2:
   238                           	opt stack 0
   239  007DDB  00                 	db	0
   240  007DDC  02                 	db	2
   241  007DDD  04                 	db	4
   242  007DDE  04                 	db	4
   243  007DDF  08                 	db	8
   244  007DE0  10                 	db	16
   245  007DE1  10                 	db	16
   246  007DE2  10                 	db	16
   247  007DE3  00                 	db	0
   248  007DE4  00                 	db	0
   249  007DE5  00                 	db	0
   250  007DE6  00                 	db	0
   251  007DE7  00                 	db	0
   252  007DE8  00                 	db	0
   253  007DE9  0E                 	db	14
   254  007DEA  0A                 	db	10
   255  007DEB  00                 	db	0
   256  007DEC  08                 	db	8
   257  007DED  04                 	db	4
   258  007DEE  04                 	db	4
   259  007DEF  02                 	db	2
   260  007DF0  01                 	db	1
   261  007DF1  01                 	db	1
   262  007DF2  01                 	db	1
   263  007DF3  08                 	db	8
   264  007DF4  08                 	db	8
   265  007DF5  04                 	db	4
   266  007DF6  02                 	db	2
   267  007DF7  01                 	db	1
   268  007DF8  00                 	db	0
   269  007DF9  00                 	db	0
   270  007DFA  00                 	db	0
   271  007DFB  0E                 	db	14
   272  007DFC  00                 	db	0
   273  007DFD  00                 	db	0
   274  007DFE  00                 	db	0
   275  007DFF  00                 	db	0
   276  007E00  1F                 	db	31
   277  007E01  00                 	db	0
   278  007E02  00                 	db	0
   279  007E03  02                 	db	2
   280  007E04  02                 	db	2
   281  007E05  04                 	db	4
   282  007E06  08                 	db	8
   283  007E07  10                 	db	16
   284  007E08  00                 	db	0
   285  007E09  00                 	db	0
   286  007E0A  00                 	db	0
   287  007E0B  00                 	db	0
   288  007E0C  00                 	db	0
   289  007E0D  00                 	db	0
   290  007E0E  00                 	db	0
   291  007E0F  00                 	db	0
   292  007E10  00                 	db	0
   293  007E11  00                 	db	0
   294  007E12  00                 	db	0
   295  007E13  00                 	db	0
   296  007E14  00                 	db	0
   297  007E15  00                 	db	0
   298  007E16  00                 	db	0
   299  007E17  00                 	db	0
   300  007E18  00                 	db	0
   301  007E19  00                 	db	0
   302  007E1A  00                 	db	0
   303  007E1B                     __end_of___costum2:
   304                           	opt stack 0
   305  007E1B                     ___costum3:
   306                           	opt stack 0
   307  007E1B  00                 	db	0
   308  007E1C  07                 	db	7
   309  007E1D  0F                 	db	15
   310  007E1E  0C                 	db	12
   311  007E1F  0C                 	db	12
   312  007E20  0C                 	db	12
   313  007E21  0F                 	db	15
   314  007E22  0F                 	db	15
   315  007E23  00                 	db	0
   316  007E24  10                 	db	16
   317  007E25  18                 	db	24
   318  007E26  08                 	db	8
   319  007E27  08                 	db	8
   320  007E28  08                 	db	8
   321  007E29  18                 	db	24
   322  007E2A  10                 	db	16
   323  007E2B  00                 	db	0
   324  007E2C  03                 	db	3
   325  007E2D  07                 	db	7
   326  007E2E  0E                 	db	14
   327  007E2F  0C                 	db	12
   328  007E30  0C                 	db	12
   329  007E31  0C                 	db	12
   330  007E32  0F                 	db	15
   331  007E33  00                 	db	0
   332  007E34  10                 	db	16
   333  007E35  18                 	db	24
   334  007E36  1C                 	db	28
   335  007E37  0C                 	db	12
   336  007E38  0C                 	db	12
   337  007E39  1C                 	db	28
   338  007E3A  0C                 	db	12
   339  007E3B  0C                 	db	12
   340  007E3C  0C                 	db	12
   341  007E3D  0C                 	db	12
   342  007E3E  0C                 	db	12
   343  007E3F  0C                 	db	12
   344  007E40  0C                 	db	12
   345  007E41  1E                 	db	30
   346  007E42  00                 	db	0
   347  007E43  0A                 	db	10
   348  007E44  04                 	db	4
   349  007E45  04                 	db	4
   350  007E46  0E                 	db	14
   351  007E47  0E                 	db	14
   352  007E48  0E                 	db	14
   353  007E49  0E                 	db	14
   354  007E4A  00                 	db	0
   355  007E4B  0C                 	db	12
   356  007E4C  0C                 	db	12
   357  007E4D  0C                 	db	12
   358  007E4E  0C                 	db	12
   359  007E4F  0C                 	db	12
   360  007E50  0C                 	db	12
   361  007E51  1E                 	db	30
   362  007E52  00                 	db	0
   363  007E53  0C                 	db	12
   364  007E54  0C                 	db	12
   365  007E55  0C                 	db	12
   366  007E56  0C                 	db	12
   367  007E57  0C                 	db	12
   368  007E58  0C                 	db	12
   369  007E59  1E                 	db	30
   370  007E5A  00                 	db	0
   371  007E5B                     __end_of___costum3:
   372                           	opt stack 0
   373  007E5B                     ___costum4:
   374                           	opt stack 0
   375  007E5B  00                 	db	0
   376  007E5C  0A                 	db	10
   377  007E5D  04                 	db	4
   378  007E5E  04                 	db	4
   379  007E5F  07                 	db	7
   380  007E60  01                 	db	1
   381  007E61  01                 	db	1
   382  007E62  01                 	db	1
   383  007E63  00                 	db	0
   384  007E64  00                 	db	0
   385  007E65  00                 	db	0
   386  007E66  00                 	db	0
   387  007E67  1E                 	db	30
   388  007E68  1E                 	db	30
   389  007E69  1E                 	db	30
   390  007E6A  1E                 	db	30
   391  007E6B  00                 	db	0
   392  007E6C  03                 	db	3
   393  007E6D  07                 	db	7
   394  007E6E  0E                 	db	14
   395  007E6F  0C                 	db	12
   396  007E70  0C                 	db	12
   397  007E71  0C                 	db	12
   398  007E72  0F                 	db	15
   399  007E73  00                 	db	0
   400  007E74  10                 	db	16
   401  007E75  18                 	db	24
   402  007E76  1C                 	db	28
   403  007E77  0C                 	db	12
   404  007E78  0C                 	db	12
   405  007E79  1C                 	db	28
   406  007E7A  0C                 	db	12
   407  007E7B  01                 	db	1
   408  007E7C  01                 	db	1
   409  007E7D  01                 	db	1
   410  007E7E  01                 	db	1
   411  007E7F  00                 	db	0
   412  007E80  00                 	db	0
   413  007E81  00                 	db	0
   414  007E82  00                 	db	0
   415  007E83  1E                 	db	30
   416  007E84  1E                 	db	30
   417  007E85  1E                 	db	30
   418  007E86  1E                 	db	30
   419  007E87  00                 	db	0
   420  007E88  00                 	db	0
   421  007E89  00                 	db	0
   422  007E8A  00                 	db	0
   423  007E8B  0C                 	db	12
   424  007E8C  0C                 	db	12
   425  007E8D  0C                 	db	12
   426  007E8E  0C                 	db	12
   427  007E8F  0C                 	db	12
   428  007E90  0C                 	db	12
   429  007E91  1E                 	db	30
   430  007E92  00                 	db	0
   431  007E93  0C                 	db	12
   432  007E94  0C                 	db	12
   433  007E95  0C                 	db	12
   434  007E96  0C                 	db	12
   435  007E97  0C                 	db	12
   436  007E98  0C                 	db	12
   437  007E99  1E                 	db	30
   438  007E9A  00                 	db	0
   439  007E9B                     __end_of___costum4:
   440                           	opt stack 0
   441  007E9B                     ___brght:
   442                           	opt stack 0
   443  007E9B  03                 	db	3
   444  007E9C  06                 	db	6
   445  007E9D  07                 	db	7
   446  007E9E  0F                 	db	15
   447  007E9F                     __end_of___brght:
   448                           	opt stack 0
   449  007E9F                     STR_21:
   450  007E9F  20                 	db	32
   451  007EA0  20                 	db	32
   452  007EA1  20                 	db	32
   453  007EA2  20                 	db	32
   454  007EA3  20                 	db	32
   455  007EA4  20                 	db	32
   456  007EA5  20                 	db	32
   457  007EA6  20                 	db	32
   458  007EA7  20                 	db	32
   459  007EA8  20                 	db	32
   460  007EA9  20                 	db	32
   461  007EAA  20                 	db	32
   462  007EAB  20                 	db	32
   463  007EAC  20                 	db	32
   464  007EAD  20                 	db	32
   465  007EAE  20                 	db	32
   466  007EAF  00                 	db	0
   467  007EB0                     STR_66:
   468  007EB0  20                 	db	32
   469  007EB1  4B                 	db	75	;'K'
   470  007EB2  61                 	db	97	;'a'
   471  007EB3  6E                 	db	110	;'n'
   472  007EB4  20                 	db	32
   473  007EB5  20                 	db	32
   474  007EB6  20                 	db	32
   475  007EB7  20                 	db	32
   476  007EB8  20                 	db	32
   477  007EB9  20                 	db	32
   478  007EBA  20                 	db	32
   479  007EBB  20                 	db	32
   480  007EBC  20                 	db	32
   481  007EBD  20                 	db	32
   482  007EBE  20                 	db	32
   483  007EBF  20                 	db	32
   484  007EC0  00                 	db	0
   485  007EC1                     STR_22:
   486  007EC1  4D                 	db	77	;'M'
   487  007EC2  65                 	db	101	;'e'
   488  007EC3  6E                 	db	110	;'n'
   489  007EC4  75                 	db	117	;'u'
   490  007EC5  3A                 	db	58	;':'
   491  007EC6  20                 	db	32
   492  007EC7  20                 	db	32
   493  007EC8  3E                 	db	62	;'>'
   494  007EC9  20                 	db	32
   495  007ECA  20                 	db	32
   496  007ECB  20                 	db	32
   497  007ECC  20                 	db	32
   498  007ECD  20                 	db	32
   499  007ECE  20                 	db	32
   500  007ECF  20                 	db	32
   501  007ED0  20                 	db	32
   502  007ED1  00                 	db	0
   503  007ED2                     STR_19:
   504  007ED2  62                 	db	98	;'b'
   505  007ED3  65                 	db	101	;'e'
   506  007ED4  67                 	db	103	;'g'
   507  007ED5  69                 	db	105	;'i'
   508  007ED6  6E                 	db	110	;'n'
   509  007ED7  6E                 	db	110	;'n'
   510  007ED8  65                 	db	101	;'e'
   511  007ED9  6E                 	db	110	;'n'
   512  007EDA  20                 	db	32
   513  007EDB  20                 	db	32
   514  007EDC  20                 	db	32
   515  007EDD  20                 	db	32
   516  007EDE  20                 	db	32
   517  007EDF  20                 	db	32
   518  007EE0  20                 	db	32
   519  007EE1  20                 	db	32
   520  007EE2  00                 	db	0
   521  007EE3                     STR_20:
   522  007EE3  54                 	db	84	;'T'
   523  007EE4  72                 	db	114	;'r'
   524  007EE5  61                 	db	97	;'a'
   525  007EE6  6E                 	db	110	;'n'
   526  007EE7  73                 	db	115	;'s'
   527  007EE8  6D                 	db	109	;'m'
   528  007EE9  69                 	db	105	;'i'
   529  007EEA  74                 	db	116	;'t'
   530  007EEB  20                 	db	32
   531  007EEC  20                 	db	32
   532  007EED  20                 	db	32
   533  007EEE  20                 	db	32
   534  007EEF  20                 	db	32
   535  007EF0  20                 	db	32
   536  007EF1  20                 	db	32
   537  007EF2  20                 	db	32
   538  007EF3  00                 	db	0
   539  007EF4                     STR_71:
   540  007EF4  74                 	db	116	;'t'
   541  007EF5  65                 	db	101	;'e'
   542  007EF6  20                 	db	32
   543  007EF7  7A                 	db	122	;'z'
   544  007EF8  6F                 	db	111	;'o'
   545  007EF9  65                 	db	101	;'e'
   546  007EFA  6B                 	db	107	;'k'
   547  007EFB  65                 	db	101	;'e'
   548  007EFC  6E                 	db	110	;'n'
   549  007EFD  2E                 	db	46
   550  007EFE  2E                 	db	46
   551  007EFF  2E                 	db	46
   552  007F00  20                 	db	32
   553  007F01  20                 	db	32
   554  007F02  20                 	db	32
   555  007F03  20                 	db	32
   556  007F04  00                 	db	0
   557  007F05                     STR_67:
   558  007F05  20                 	db	32
   559  007F06  6E                 	db	110	;'n'
   560  007F07  69                 	db	105	;'i'
   561  007F08  65                 	db	101	;'e'
   562  007F09  74                 	db	116	;'t'
   563  007F0A  20                 	db	32
   564  007F0B  76                 	db	118	;'v'
   565  007F0C  69                 	db	105	;'i'
   566  007F0D  6E                 	db	110	;'n'
   567  007F0E  64                 	db	100	;'d'
   568  007F0F  65                 	db	101	;'e'
   569  007F10  6E                 	db	110	;'n'
   570  007F11  20                 	db	32
   571  007F12  20                 	db	32
   572  007F13  20                 	db	32
   573  007F14  20                 	db	32
   574  007F15  00                 	db	0
   575  007F16                     STR_39:
   576  007F16  48                 	db	72	;'H'
   577  007F17  6C                 	db	108	;'l'
   578  007F18  64                 	db	100	;'d'
   579  007F19  72                 	db	114	;'r'
   580  007F1A  68                 	db	104	;'h'
   581  007F1B  20                 	db	32
   582  007F1C  20                 	db	32
   583  007F1D  53                 	db	83	;'S'
   584  007F1E  70                 	db	112	;'p'
   585  007F1F  64                 	db	100	;'d'
   586  007F20  20                 	db	32
   587  007F21  20                 	db	32
   588  007F22  4C                 	db	76	;'L'
   589  007F23  65                 	db	101	;'e'
   590  007F24  64                 	db	100	;'d'
   591  007F25  20                 	db	32
   592  007F26  00                 	db	0
   593  007F27                     STR_18:
   594  007F27  44                 	db	68	;'D'
   595  007F28  72                 	db	114	;'r'
   596  007F29  75                 	db	117	;'u'
   597  007F2A  6B                 	db	107	;'k'
   598  007F2B  20                 	db	32
   599  007F2C  27                 	db	39
   600  007F2D  4F                 	db	79	;'O'
   601  007F2E  4B                 	db	75	;'K'
   602  007F2F  27                 	db	39
   603  007F30  20                 	db	32
   604  007F31  6F                 	db	111	;'o'
   605  007F32  6D                 	db	109	;'m'
   606  007F33  20                 	db	32
   607  007F34  74                 	db	116	;'t'
   608  007F35  65                 	db	101	;'e'
   609  007F36  20                 	db	32
   610  007F37  00                 	db	0
   611  007F38                     STR_70:
   612  007F38  44                 	db	68	;'D'
   613  007F39  72                 	db	114	;'r'
   614  007F3A  75                 	db	117	;'u'
   615  007F3B  6B                 	db	107	;'k'
   616  007F3C  20                 	db	32
   617  007F3D  4F                 	db	79	;'O'
   618  007F3E  4B                 	db	75	;'K'
   619  007F3F  20                 	db	32
   620  007F40  6F                 	db	111	;'o'
   621  007F41  6D                 	db	109	;'m'
   622  007F42  20                 	db	32
   623  007F43  77                 	db	119	;'w'
   624  007F44  65                 	db	101	;'e'
   625  007F45  65                 	db	101	;'e'
   626  007F46  72                 	db	114	;'r'
   627  007F47  20                 	db	32
   628  007F48  00                 	db	0
   629  007F49                     STR_69:
   630  007F49  50                 	db	80	;'P'
   631  007F4A  65                 	db	101	;'e'
   632  007F4B  6E                 	db	110	;'n'
   633  007F4C  6E                 	db	110	;'n'
   634  007F4D  79                 	db	121	;'y'
   635  007F4E  20                 	db	32
   636  007F4F  20                 	db	32
   637  007F50  20                 	db	32
   638  007F51  20                 	db	32
   639  007F52  20                 	db	32
   640  007F53  20                 	db	32
   641  007F54  00                 	db	0
   642  007F55                     STR_68:
   643  007F55  41                 	db	65	;'A'
   644  007F56  6E                 	db	110	;'n'
   645  007F57  6F                 	db	111	;'o'
   646  007F58  75                 	db	117	;'u'
   647  007F59  63                 	db	99	;'c'
   648  007F5A  6B                 	db	107	;'k'
   649  007F5B  61                 	db	97	;'a'
   650  007F5C  20                 	db	32
   651  007F5D  20                 	db	32
   652  007F5E  20                 	db	32
   653  007F5F  20                 	db	32
   654  007F60  00                 	db	0
   655  007F61                     STR_50:
   656  007F61  20                 	db	32
   657  007F62  43                 	db	67	;'C'
   658  007F63  6F                 	db	111	;'o'
   659  007F64  6E                 	db	110	;'n'
   660  007F65  6E                 	db	110	;'n'
   661  007F66  65                 	db	101	;'e'
   662  007F67  63                 	db	99	;'c'
   663  007F68  74                 	db	116	;'t'
   664  007F69  69                 	db	105	;'i'
   665  007F6A  6E                 	db	110	;'n'
   666  007F6B  67                 	db	103	;'g'
   667  007F6C  00                 	db	0
   668  007F6D                     STR_35:
   669  007F6D  4C                 	db	76	;'L'
   670  007F6E  63                 	db	99	;'c'
   671  007F6F  64                 	db	100	;'d'
   672  007F70  20                 	db	32
   673  007F71  20                 	db	32
   674  007F72  20                 	db	32
   675  007F73  20                 	db	32
   676  007F74  20                 	db	32
   677  007F75  00                 	db	0
   678  007F76                     STR_31:
   679  007F76  4D                 	db	77	;'M'
   680  007F77  6F                 	db	111	;'o'
   681  007F78  70                 	db	112	;'p'
   682  007F79  6A                 	db	106	;'j'
   683  007F7A  65                 	db	101	;'e'
   684  007F7B  20                 	db	32
   685  007F7C  20                 	db	32
   686  007F7D  20                 	db	32
   687  007F7E  00                 	db	0
   688  007F7F                     STR_29:
   689  007F7F  43                 	db	67	;'C'
   690  007F80  6C                 	db	108	;'l'
   691  007F81  69                 	db	105	;'i'
   692  007F82  63                 	db	99	;'c'
   693  007F83  6B                 	db	107	;'k'
   694  007F84  20                 	db	32
   695  007F85  20                 	db	32
   696  007F86  20                 	db	32
   697  007F87  00                 	db	0
   698  007F88                     STR_25:
   699  007F88  52                 	db	82	;'R'
   700  007F89  65                 	db	101	;'e'
   701  007F8A  73                 	db	115	;'s'
   702  007F8B  65                 	db	101	;'e'
   703  007F8C  74                 	db	116	;'t'
   704  007F8D  20                 	db	32
   705  007F8E  20                 	db	32
   706  007F8F  20                 	db	32
   707  007F90  00                 	db	0
   708  007F91                     STR_33:
   709  007F91  54                 	db	84	;'T'
   710  007F92  65                 	db	101	;'e'
   711  007F93  74                 	db	116	;'t'
   712  007F94  74                 	db	116	;'t'
   713  007F95  65                 	db	101	;'e'
   714  007F96  6E                 	db	110	;'n'
   715  007F97  20                 	db	32
   716  007F98  20                 	db	32
   717  007F99  00                 	db	0
   718  007F9A                     STR_24:
   719  007F9A  2D                 	db	45
   720  007F9B  6B                 	db	107	;'k'
   721  007F9C  69                 	db	105	;'i'
   722  007F9D  65                 	db	101	;'e'
   723  007F9E  73                 	db	115	;'s'
   724  007F9F  2D                 	db	45
   725  007FA0  3C                 	db	60	;'<'
   726  007FA1  20                 	db	32
   727  007FA2  00                 	db	0
   728  007FA3                     STR_27:
   729  007FA3  53                 	db	83	;'S'
   730  007FA4  74                 	db	116	;'t'
   731  007FA5  65                 	db	101	;'e'
   732  007FA6  6D                 	db	109	;'m'
   733  007FA7  6D                 	db	109	;'m'
   734  007FA8  65                 	db	101	;'e'
   735  007FA9  6E                 	db	110	;'n'
   736  007FAA  20                 	db	32
   737  007FAB  00                 	db	0
   738  007FAC                     STR_38:
   739  007FAC  4D                 	db	77	;'M'
   740  007FAD  65                 	db	101	;'e'
   741  007FAE  74                 	db	116	;'t'
   742  007FAF  72                 	db	114	;'r'
   743  007FB0  6F                 	db	111	;'o'
   744  007FB1  6E                 	db	110	;'n'
   745  007FB2  6F                 	db	111	;'o'
   746  007FB3  6D                 	db	109	;'m'
   747  007FB4  00                 	db	0
   748  007FB5                     STR_1:
   749  007FB5  5E                 	db	94	;'^'
   750  007FB6  20                 	db	32
   751  007FB7  20                 	db	32
   752  007FB8  20                 	db	32
   753  007FB9  20                 	db	32
   754  007FBA  20                 	db	32
   755  007FBB  20                 	db	32
   756  007FBC  00                 	db	0
   757  007FBD                     STR_2:
   758  007FBD  20                 	db	32
   759  007FBE  20                 	db	32
   760  007FBF  20                 	db	32
   761  007FC0  20                 	db	32
   762  007FC1  5E                 	db	94	;'^'
   763  007FC2  20                 	db	32
   764  007FC3  20                 	db	32
   765  007FC4  00                 	db	0
   766  007FC5                     STR_3:
   767  007FC5  20                 	db	32
   768  007FC6  20                 	db	32
   769  007FC7  20                 	db	32
   770  007FC8  20                 	db	32
   771  007FC9  20                 	db	32
   772  007FCA  5E                 	db	94	;'^'
   773  007FCB  20                 	db	32
   774  007FCC  00                 	db	0
   775  007FCD                     STR_4:
   776  007FCD  20                 	db	32
   777  007FCE  20                 	db	32
   778  007FCF  20                 	db	32
   779  007FD0  20                 	db	32
   780  007FD1  20                 	db	32
   781  007FD2  20                 	db	32
   782  007FD3  5E                 	db	94	;'^'
   783  007FD4  00                 	db	0
   784  007FD5                     STR_6:
   785  007FD5  2A                 	db	42
   786  007FD6  2A                 	db	42
   787  007FD7  2A                 	db	42
   788  007FD8  2A                 	db	42
   789  007FD9  00                 	db	0
   790  007FDA                     STR_40:
   791  007FDA  25                 	db	37
   792  007FDB  30                 	db	48	;'0'
   793  007FDC  00                 	db	0
   794  007FDD                     STR_41:
   795  007FDD  25                 	db	37
   796  007FDE  31                 	db	49	;'1'
   797  007FDF  00                 	db	0
   798  007FE0                     STR_45:
   799  007FE0  25                 	db	37
   800  007FE1  32                 	db	50	;'2'
   801  007FE2  00                 	db	0
   802  007FE3                     STR_46:
   803  007FE3  25                 	db	37
   804  007FE4  33                 	db	51	;'3'
   805  007FE5  00                 	db	0
   806  007FE6                     STR_42:
   807  007FE6  25                 	db	37
   808  007FE7  34                 	db	52	;'4'
   809  007FE8  00                 	db	0
   810  007FE9                     STR_5:
   811  007FE9  2F                 	db	47
   812  007FEA  34                 	db	52	;'4'
   813  007FEB  00                 	db	0
   814  007FEC                     STR_44:
   815  007FEC  25                 	db	37
   816  007FED  35                 	db	53	;'5'
   817  007FEE  00                 	db	0
   818  007FEF                     STR_47:
   819  007FEF  25                 	db	37
   820  007FF0  36                 	db	54	;'6'
   821  007FF1  00                 	db	0
   822  007FF2                     STR_48:
   823  007FF2  25                 	db	37
   824  007FF3  37                 	db	55	;'7'
   825  007FF4  00                 	db	0
   826  007FF5                     STR_10:
   827  007FF5  4F                 	db	79	;'O'
   828  007FF6  4E                 	db	78	;'N'
   829  007FF7  00                 	db	0
   830  007FF8                     STR_7:
   831  007FF8  3C                 	db	60	;'<'
   832  007FF9  00                 	db	0
   833  007FFA                     STR_52:
   834  007FFA  7E                 	db	126
   835  007FFB  00                 	db	0
   836  007FFC                     STR_53:
   837  007FFC  7F                 	db	127
   838  007FFD  00                 	db	0
   839  0000                     
   840                           ; #config settings
   841  007FFE  00                 	db	0	; dummy byte at the end
   842  0000                     
   843                           	psect	nvCOMRAM
   844  000050                     __pnvCOMRAM:
   845                           	opt stack 0
   846  000050                     _brightness:
   847                           	opt stack 0
   848  000050                     	ds	1
   849  000051                     _scrs_speed:
   850                           	opt stack 0
   851  000051                     	ds	1
   852  0000                     _ADCON1bits	set	4033
   853  0000                     _BAUDCONbits	set	4024
   854  0000                     _INTCONbits	set	4082
   855  0000                     _LATAbits	set	3977
   856  0000                     _PIE1bits	set	3997
   857  0000                     _PIR1bits	set	3998
   858  0000                     _PORTA	set	3968
   859  0000                     _PORTAbits	set	3968
   860  0000                     _PORTB	set	3969
   861  0000                     _PORTBbits	set	3969
   862  0000                     _PORTCbits	set	3970
   863  0000                     _RCREG	set	4014
   864  0000                     _RCSTAbits	set	4011
   865  0000                     _SPBRG	set	4015
   866  0000                     _T0CONbits	set	4053
   867  0000                     _TMR0L	set	4054
   868  0000                     _TRISA	set	3986
   869  0000                     _TRISB	set	3987
   870  0000                     _TRISC	set	3988
   871  0000                     _TRISCbits	set	3988
   872  0000                     _TXREG	set	4013
   873  0000                     _TXSTAbits	set	4012
   874                           
   875                           	psect	cinit
   876  0019CC                     __pcinit:
   877                           	opt stack 0
   878  0019CC                     start_initialization:
   879                           	opt stack 0
   880  0019CC                     __initialization:
   881                           	opt stack 0
   882                           
   883                           ; Clear objects allocated to BANK0 (30 bytes)
   884  0019CC  EE00  F060         	lfsr	0,__pbssBANK0
   885  0019D0  0E1E               	movlw	30
   886  0019D2                     clear_0:
   887  0019D2  6AEE               	clrf	postinc0,c
   888  0019D4  06E8               	decf	wreg,f,c
   889  0019D6  E1FD               	bnz	clear_0
   890                           
   891                           ; Clear objects allocated to COMRAM (46 bytes)
   892  0019D8  EE00  F001         	lfsr	0,__pbssCOMRAM
   893  0019DC  0E2E               	movlw	46
   894  0019DE                     clear_1:
   895  0019DE  6AEE               	clrf	postinc0,c
   896  0019E0  06E8               	decf	wreg,f,c
   897  0019E2  E1FD               	bnz	clear_1
   898                           
   899                           ; Initialize objects allocated to BANK0 (22 bytes)
   900                           ; load TBLPTR registers with __pidataBANK0
   901  0019E4  0ED6               	movlw	low __pidataBANK0
   902  0019E6  6EF6               	movwf	tblptrl,c
   903  0019E8  0E1B               	movlw	high __pidataBANK0
   904  0019EA  6EF7               	movwf	tblptrh,c
   905  0019EC  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   906  0019EE  6EF8               	movwf	tblptru,c
   907  0019F0  EE00  F07E         	lfsr	0,__pdataBANK0
   908  0019F4  EE10 F016          	lfsr	1,22
   909  0019F8                     copy_data0:
   910  0019F8  0009               	tblrd		*+
   911  0019FA  CFF5 FFEE          	movff	tablat,postinc0
   912  0019FE  50E5               	movf	postdec1,w,c
   913  001A00  50E1               	movf	fsr1l,w,c
   914  001A02  E1FA               	bnz	copy_data0
   915                           
   916                           ; Initialize objects allocated to COMRAM (6 bytes)
   917                           ; load TBLPTR registers with __pidataCOMRAM
   918  001A04  0EF8               	movlw	low __pidataCOMRAM
   919  001A06  6EF6               	movwf	tblptrl,c
   920  001A08  0E1B               	movlw	high __pidataCOMRAM
   921  001A0A  6EF7               	movwf	tblptrh,c
   922  001A0C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   923  001A0E  6EF8               	movwf	tblptru,c
   924  001A10  EE00  F04A         	lfsr	0,__pdataCOMRAM
   925  001A14  EE10 F006          	lfsr	1,6
   926  001A18                     copy_data1:
   927  001A18  0009               	tblrd		*+
   928  001A1A  CFF5 FFEE          	movff	tablat,postinc0
   929  001A1E  50E5               	movf	postdec1,w,c
   930  001A20  50E1               	movf	fsr1l,w,c
   931  001A22  E1FA               	bnz	copy_data1
   932  001A24                     end_of_initialization:
   933                           	opt stack 0
   934  001A24                     __end_of__initialization:
   935                           	opt stack 0
   936  001A24  0E00               	movlw	low (__Lmediumconst shr (0+16))
   937  001A26  6EF8               	movwf	tblptru,c
   938  001A28  0100               	movlb	0
   939  001A2A  EF0E  F000         	goto	_main	;jump to C main() function
   940                           tblptru	equ	0xFF8
   941                           tblptrh	equ	0xFF7
   942                           tblptrl	equ	0xFF6
   943                           tablat	equ	0xFF5
   944                           postinc0	equ	0xFEE
   945                           wreg	equ	0xFE8
   946                           postdec1	equ	0xFE5
   947                           fsr1l	equ	0xFE1
   948                           
   949                           	psect	bssCOMRAM
   950  000001                     __pbssCOMRAM:
   951                           	opt stack 0
   952  000001                     _SerialTx:
   953                           	opt stack 0
   954  000001                     	ds	9
   955  00000A                     _uart_rx_block:
   956                           	opt stack 0
   957  00000A                     	ds	8
   958  000012                     LCDWriteHex@F4943:
   959                           	opt stack 0
   960  000012                     	ds	2
   961  000014                     _indicator_cnt:
   962                           	opt stack 0
   963  000014                     	ds	2
   964  000016                     _lSEARCH_Acnt:
   965                           	opt stack 0
   966  000016                     	ds	2
   967  000018                     _lSEARCH_HWcnt:
   968                           	opt stack 0
   969  000018                     	ds	2
   970  00001A                     _buttons_change:
   971                           	opt stack 0
   972  00001A                     	ds	1
   973  00001B                     _buttons_new:
   974                           	opt stack 0
   975  00001B                     	ds	1
   976  00001C                     _buttons_old:
   977                           	opt stack 0
   978  00001C                     	ds	1
   979  00001D                     _first:
   980                           	opt stack 0
   981  00001D                     	ds	1
   982  00001E                     _fsm_new_state:
   983                           	opt stack 0
   984  00001E                     	ds	1
   985  00001F                     _fsm_old_state:
   986                           	opt stack 0
   987  00001F                     	ds	1
   988  000020                     _go_back:
   989                           	opt stack 0
   990  000020                     	ds	1
   991  000021                     _i:
   992                           	opt stack 0
   993  000021                     	ds	1
   994  000022                     _indicator:
   995                           	opt stack 0
   996  000022                     	ds	1
   997  000023                     _inputs:
   998                           	opt stack 0
   999  000023                     	ds	1
  1000  000024                     _j:
  1001                           	opt stack 0
  1002  000024                     	ds	1
  1003  000025                     _main_menu_new:
  1004                           	opt stack 0
  1005  000025                     	ds	1
  1006  000026                     _main_menu_old:
  1007                           	opt stack 0
  1008  000026                     	ds	1
  1009  000027                     _new_data:
  1010                           	opt stack 0
  1011  000027                     	ds	1
  1012  000028                     _read_data:
  1013                           	opt stack 0
  1014  000028                     	ds	1
  1015  000029                     _scrs:
  1016                           	opt stack 0
  1017  000029                     	ds	1
  1018  00002A                     _scrs_cnt:
  1019                           	opt stack 0
  1020  00002A                     	ds	1
  1021  00002B                     _send:
  1022                           	opt stack 0
  1023  00002B                     	ds	1
  1024  00002C                     _sub_menu_lcd:
  1025                           	opt stack 0
  1026  00002C                     	ds	1
  1027  00002D                     _t3:
  1028                           	opt stack 0
  1029  00002D                     	ds	1
  1030  00002E                     _uart_block_count:
  1031                           	opt stack 0
  1032  00002E                     	ds	1
  1033                           tblptru	equ	0xFF8
  1034                           tblptrh	equ	0xFF7
  1035                           tblptrl	equ	0xFF6
  1036                           tablat	equ	0xFF5
  1037                           postinc0	equ	0xFEE
  1038                           wreg	equ	0xFE8
  1039                           postdec1	equ	0xFE5
  1040                           fsr1l	equ	0xFE1
  1041                           
  1042                           	psect	dataCOMRAM
  1043  00004A                     __pdataCOMRAM:
  1044                           	opt stack 0
  1045  00004A                     _tempo:
  1046                           	opt stack 0
  1047  00004A                     	ds	2
  1048  00004C                     _m1:
  1049                           	opt stack 0
  1050  00004C                     	ds	1
  1051  00004D                     _sub_menu_metronoom:
  1052                           	opt stack 0
  1053  00004D                     	ds	1
  1054  00004E                     _t1:
  1055                           	opt stack 0
  1056  00004E                     	ds	1
  1057  00004F                     _t2:
  1058                           	opt stack 0
  1059  00004F                     	ds	1
  1060                           tblptru	equ	0xFF8
  1061                           tblptrh	equ	0xFF7
  1062                           tblptrl	equ	0xFF6
  1063                           tablat	equ	0xFF5
  1064                           postinc0	equ	0xFEE
  1065                           wreg	equ	0xFE8
  1066                           postdec1	equ	0xFE5
  1067                           fsr1l	equ	0xFE1
  1068                           
  1069                           	psect	bssBANK0
  1070  000060                     __pbssBANK0:
  1071                           	opt stack 0
  1072  000060                     _SerialRx:
  1073                           	opt stack 0
  1074  000060                     	ds	9
  1075  000069                     LCDWriteBin@F4938:
  1076                           	opt stack 0
  1077  000069                     	ds	8
  1078  000071                     _uart_tx_block:
  1079                           	opt stack 0
  1080  000071                     	ds	8
  1081  000079                     LCDWriteInt@F4932:
  1082                           	opt stack 0
  1083  000079                     	ds	5
  1084                           tblptru	equ	0xFF8
  1085                           tblptrh	equ	0xFF7
  1086                           tblptrl	equ	0xFF6
  1087                           tablat	equ	0xFF5
  1088                           postinc0	equ	0xFEE
  1089                           wreg	equ	0xFE8
  1090                           postdec1	equ	0xFE5
  1091                           fsr1l	equ	0xFE1
  1092                           
  1093                           	psect	dataBANK0
  1094  00007E                     __pdataBANK0:
  1095                           	opt stack 0
  1096  00007E                     ___HexVal:
  1097                           	opt stack 0
  1098  00007E                     	ds	16
  1099  00008E                     lcd_start_up@F5048:
  1100                           	opt stack 0
  1101  00008E                     	ds	6
  1102                           tblptru	equ	0xFF8
  1103                           tblptrh	equ	0xFF7
  1104                           tblptrl	equ	0xFF6
  1105                           tablat	equ	0xFF5
  1106                           postinc0	equ	0xFEE
  1107                           wreg	equ	0xFE8
  1108                           postdec1	equ	0xFE5
  1109                           fsr1l	equ	0xFE1
  1110                           
  1111                           	psect	cstackBANK0
  1112  000094                     __pcstackBANK0:
  1113                           	opt stack 0
  1114  000094                     ??_lcd_time_out:
  1115  000094                     ??_LCDWriteInt:
  1116  000094                     lcd_start_up@start:
  1117                           	opt stack 0
  1118                           
  1119                           ; 6 bytes @ 0x0
  1120  000094                     	ds	2
  1121  000096                     LCDWriteInt@str:
  1122                           	opt stack 0
  1123                           
  1124                           ; 5 bytes @ 0x2
  1125  000096                     	ds	4
  1126  00009A                     lcd_start_up@busy:
  1127                           	opt stack 0
  1128                           
  1129                           ; 1 bytes @ 0x6
  1130  00009A                     	ds	1
  1131  00009B                     lcd_start_up@x_pos:
  1132                           	opt stack 0
  1133  00009B                     LCDWriteInt@j:
  1134                           	opt stack 0
  1135                           
  1136                           ; 2 bytes @ 0x7
  1137  00009B                     	ds	1
  1138  00009C                     lcd_start_up@st:
  1139                           	opt stack 0
  1140                           
  1141                           ; 2 bytes @ 0x8
  1142  00009C                     	ds	1
  1143  00009D                     LCDWriteInt@i:
  1144                           	opt stack 0
  1145                           
  1146                           ; 2 bytes @ 0x9
  1147  00009D                     	ds	2
  1148  00009F                     ??_lcd_sub_menu_metronoom:
  1149                           
  1150                           ; 0 bytes @ 0xB
  1151  00009F                     	ds	2
  1152  0000A1                     lcd_main_menu_fsm@mmOld:
  1153                           	opt stack 0
  1154                           
  1155                           ; 1 bytes @ 0xD
  1156  0000A1                     	ds	1
  1157  0000A2                     ??_main:
  1158                           
  1159                           ; 0 bytes @ 0xE
  1160  0000A2                     	ds	1
  1161                           tblptru	equ	0xFF8
  1162                           tblptrh	equ	0xFF7
  1163                           tblptrl	equ	0xFF6
  1164                           tablat	equ	0xFF5
  1165                           postinc0	equ	0xFEE
  1166                           wreg	equ	0xFE8
  1167                           postdec1	equ	0xFE5
  1168                           fsr1l	equ	0xFE1
  1169                           
  1170                           	psect	cstackCOMRAM
  1171  00002F                     __pcstackCOMRAM:
  1172                           	opt stack 0
  1173  00002F                     ??_ISR:
  1174  00002F                     
  1175                           ; 1 bytes @ 0x0
  1176  00002F                     	ds	14
  1177  00003D                     ??_read_buttons:
  1178  00003D                     ?___awdiv:
  1179                           	opt stack 0
  1180  00003D                     ?___awmod:
  1181                           	opt stack 0
  1182  00003D                     ?___lwdiv:
  1183                           	opt stack 0
  1184  00003D                     init_timer0@presc:
  1185                           	opt stack 0
  1186  00003D                     LCDBusyLoop@busy:
  1187                           	opt stack 0
  1188  00003D                     init_uart_m@baud:
  1189                           	opt stack 0
  1190  00003D                     __delay_10ms@length:
  1191                           	opt stack 0
  1192  00003D                     ___awdiv@dividend:
  1193                           	opt stack 0
  1194  00003D                     ___awmod@dividend:
  1195                           	opt stack 0
  1196  00003D                     ___lwdiv@dividend:
  1197                           	opt stack 0
  1198                           
  1199                           ; 2 bytes @ 0xE
  1200  00003D                     	ds	1
  1201  00003E                     init_timer0@presc_val:
  1202                           	opt stack 0
  1203  00003E                     LCDBusyLoop@temp:
  1204                           	opt stack 0
  1205                           
  1206                           ; 1 bytes @ 0xF
  1207  00003E                     	ds	1
  1208  00003F                     ??__delay_10ms:
  1209  00003F                     init_timer0@eight_bit:
  1210                           	opt stack 0
  1211  00003F                     init_uart_m@TX_inv:
  1212                           	opt stack 0
  1213  00003F                     LCDBusyLoop@status:
  1214                           	opt stack 0
  1215  00003F                     ___awdiv@divisor:
  1216                           	opt stack 0
  1217  00003F                     ___awmod@divisor:
  1218                           	opt stack 0
  1219  00003F                     ___lwdiv@divisor:
  1220                           	opt stack 0
  1221                           
  1222                           ; 2 bytes @ 0x10
  1223  00003F                     	ds	1
  1224  000040                     init_uart_m@RX_inv:
  1225                           	opt stack 0
  1226  000040                     LCDByte@isdata:
  1227                           	opt stack 0
  1228                           
  1229                           ; 1 bytes @ 0x11
  1230  000040                     	ds	1
  1231  000041                     ??_LCDByte:
  1232  000041                     ___awdiv@counter:
  1233                           	opt stack 0
  1234  000041                     ___awmod@counter:
  1235                           	opt stack 0
  1236  000041                     ___lwdiv@counter:
  1237                           	opt stack 0
  1238                           
  1239                           ; 1 bytes @ 0x12
  1240  000041                     	ds	1
  1241  000042                     LCDByte@hn:
  1242                           	opt stack 0
  1243  000042                     ___awdiv@sign:
  1244                           	opt stack 0
  1245  000042                     ___awmod@sign:
  1246                           	opt stack 0
  1247  000042                     ___lwdiv@quotient:
  1248                           	opt stack 0
  1249                           
  1250                           ; 2 bytes @ 0x13
  1251  000042                     	ds	1
  1252  000043                     LCDByte@ln:
  1253                           	opt stack 0
  1254  000043                     ___awdiv@quotient:
  1255                           	opt stack 0
  1256                           
  1257                           ; 2 bytes @ 0x14
  1258  000043                     	ds	1
  1259  000044                     LCDByte@c:
  1260                           	opt stack 0
  1261                           
  1262                           ; 1 bytes @ 0x15
  1263  000044                     	ds	1
  1264  000045                     LCDByte@temp:
  1265                           	opt stack 0
  1266                           
  1267                           ; 1 bytes @ 0x16
  1268  000045                     	ds	1
  1269  000046                     LCDInit@style:
  1270                           	opt stack 0
  1271  000046                     LCDLoadCostum@select:
  1272                           	opt stack 0
  1273  000046                     LCDGotoXY@y:
  1274                           	opt stack 0
  1275  000046                     LCDWriteString@msg:
  1276                           	opt stack 0
  1277  000046                     LCDWriteInt@val:
  1278                           	opt stack 0
  1279                           
  1280                           ; 2 bytes @ 0x17
  1281  000046                     	ds	1
  1282  000047                     LCDInit@__i:
  1283                           	opt stack 0
  1284  000047                     LCDLoadCostum@__i:
  1285                           	opt stack 0
  1286  000047                     LCDGotoXY@x:
  1287                           	opt stack 0
  1288                           
  1289                           ; 1 bytes @ 0x18
  1290  000047                     	ds	1
  1291  000048                     LCDWriteString@cc:
  1292                           	opt stack 0
  1293  000048                     LCDWriteInt@field_length:
  1294                           	opt stack 0
  1295                           
  1296                           ; 1 bytes @ 0x19
  1297  000048                     	ds	1
  1298  000049                     ??_lcd_sub_menu_lcd:
  1299  000049                     ??_lcd_connection:
  1300  000049                     lcd_time_out@mmOld:
  1301                           	opt stack 0
  1302                           
  1303                           ; 1 bytes @ 0x1A
  1304  000049                     	ds	1
  1305  00004A                     tblptru	equ	0xFF8
  1306                           tblptrh	equ	0xFF7
  1307                           tblptrl	equ	0xFF6
  1308                           tablat	equ	0xFF5
  1309                           postinc0	equ	0xFEE
  1310                           wreg	equ	0xFE8
  1311                           postdec1	equ	0xFE5
  1312                           fsr1l	equ	0xFE1
  1313                           
  1314                           ; 0 bytes @ 0x1B
  1315 ;;
  1316 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1317 ;;
  1318 ;; *************** function _main *****************
  1319 ;; Defined at:
  1320 ;;		line 42 in file "main_lcd.c"
  1321 ;; Parameters:    Size  Location     Type
  1322 ;;		None
  1323 ;; Auto vars:     Size  Location     Type
  1324 ;;		None
  1325 ;; Return value:  Size  Location     Type
  1326 ;;		None               void
  1327 ;; Registers used:
  1328 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1329 ;; Tracked objects:
  1330 ;;		On entry : 0/0
  1331 ;;		On exit  : 0/0
  1332 ;;		Unchanged: 0/0
  1333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1334 ;;      Params:         0       0       0       0       0       0       0       0       0
  1335 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1336 ;;      Temps:          0       1       0       0       0       0       0       0       0
  1337 ;;      Totals:         0       1       0       0       0       0       0       0       0
  1338 ;;Total ram usage:        1 bytes
  1339 ;; Hardware stack levels required when called:    7
  1340 ;; This function calls:
  1341 ;;		_LCDByte
  1342 ;;		_LCDGotoXY
  1343 ;;		_LCDInit
  1344 ;;		_LCDWriteInt
  1345 ;;		_SerialTransmit
  1346 ;;		_enable_uart_m
  1347 ;;		_init_pic
  1348 ;;		_init_timer0
  1349 ;;		_lcd_main_menu_fsm
  1350 ;;		_lcd_start_up
  1351 ;;		_lcd_time_out
  1352 ;;		_lcd_update
  1353 ;;		_read_buttons
  1354 ;; This function is called by:
  1355 ;;		Startup code after reset
  1356 ;; This function uses a non-reentrant model
  1357 ;;
  1358                           
  1359                           	psect	text0
  1360  00001C                     __ptext0:
  1361                           	opt stack 0
  1362  00001C                     _main:
  1363                           	opt stack 24
  1364                           
  1365                           ;main_lcd.c: 43: init_pic();
  1366                           
  1367                           ;incstack = 0
  1368  00001C  EC92  F00D         	call	_init_pic	;wreg free
  1369                           
  1370                           ;main_lcd.c: 44: scrs_speed = 10;
  1371  000020  0E0A               	movlw	10
  1372  000022  6E51               	movwf	_scrs_speed,c
  1373                           
  1374                           ;main_lcd.c: 45: LCDInit(0B00000000);
  1375  000024  0E00               	movlw	0
  1376  000026  ECAF  F00B         	call	_LCDInit
  1377                           
  1378                           ;main_lcd.c: 46: (LCDByte(0b00000001,0));
  1379  00002A  0E00               	movlw	0
  1380  00002C  6E40               	movwf	LCDByte@isdata,c
  1381  00002E  0E01               	movlw	1
  1382  000030  ECB1  F00C         	call	_LCDByte
  1383                           
  1384                           ;main_lcd.c: 47: { PORTB = (__brght[brightness]<<4);};
  1385  000034  5050               	movf	_brightness,w,c
  1386  000036  0D01               	mullw	1
  1387  000038  0E9B               	movlw	low ___brght
  1388  00003A  24F3               	addwf	prodl,w,c
  1389  00003C  6EF6               	movwf	tblptrl,c
  1390  00003E  0E7E               	movlw	high ___brght
  1391  000040  20F4               	addwfc	prodh,w,c
  1392  000042  6EF7               	movwf	tblptrh,c
  1393  000044                     	if	0	;There are less than 3 active tblptr bytes
  1394  000044                     	endif
  1395  000044  0008               	tblrd		*
  1396  000046  CFF5 F0A2          	movff	tablat,??_main
  1397  00004A  0100               	movlb	0	; () banked
  1398  00004C  39A2               	swapf	??_main& (0+255),w,b
  1399  00004E  0BF0               	andlw	240
  1400  000050  6E81               	movwf	3969,c	;volatile
  1401                           
  1402                           ; BSR set to: 0
  1403                           ;main_lcd.c: 48: INTCONbits.TMR0IF = 0;
  1404  000052  94F2               	bcf	intcon,2,c	;volatile
  1405                           
  1406                           ;main_lcd.c: 49: init_timer0(0,0,0b001);
  1407  000054  0E00               	movlw	0
  1408  000056  6E3D               	movwf	init_timer0@presc,c
  1409  000058  0E01               	movlw	1
  1410  00005A  6E3E               	movwf	init_timer0@presc_val,c
  1411  00005C  0E00               	movlw	0
  1412  00005E  ECAD  F00D         	call	_init_timer0
  1413                           
  1414                           ;main_lcd.c: 50: INTCONbits.GIEH = 1;
  1415  000062  8EF2               	bsf	intcon,7,c	;volatile
  1416                           
  1417                           ;main_lcd.c: 51: INTCONbits.GIEL = 1;
  1418  000064  8CF2               	bsf	intcon,6,c	;volatile
  1419  000066                     l348:
  1420                           
  1421                           ;main_lcd.c: 53: { LCDGotoXY(15,1); LCDWriteInt(fsm_old_state,1);};
  1422  000066  0E01               	movlw	1
  1423  000068  6E46               	movwf	LCDGotoXY@y,c
  1424  00006A  0E0F               	movlw	15
  1425  00006C  EC6F  F00D         	call	_LCDGotoXY
  1426  000070  C01F  F046         	movff	_fsm_old_state,LCDWriteInt@val
  1427  000074  6A47               	clrf	LCDWriteInt@val+1,c
  1428  000076  0E01               	movlw	1
  1429  000078  6E48               	movwf	LCDWriteInt@field_length,c
  1430  00007A  EC38  F009         	call	_LCDWriteInt	;wreg free
  1431                           
  1432                           ;main_lcd.c: 54: if(INTCONbits.TMR0IF) {
  1433  00007E  A4F2               	btfss	intcon,2,c	;volatile
  1434  000080  D7F2               	goto	l348
  1435                           
  1436                           ;main_lcd.c: 55: LATAbits.LA0 = !LATAbits.LA0;
  1437  000082  7089               	btg	3977,0,c	;volatile
  1438                           
  1439                           ;main_lcd.c: 56: if(!(inputs & 0x10))
  1440  000084  B823               	btfsc	_inputs,4,c
  1441  000086  D101               	goto	l5951
  1442                           
  1443                           ;main_lcd.c: 57: inputs = read_buttons();
  1444  000088  ECF4  F00B         	call	_read_buttons	;wreg free
  1445  00008C  6E23               	movwf	_inputs,c
  1446                           
  1447                           ;main_lcd.c: 62: switch (fsm_old_state) {
  1448  00008E  D0FD               	goto	l5951
  1449  000090                     l5845:
  1450                           
  1451                           ;main_lcd.c: 64: {fsm_new_state = lSEARCH_A;lcd_update();};
  1452  000090  0E01               	movlw	1
  1453  000092  6E1E               	movwf	_fsm_new_state,c
  1454  000094  EC9F  F004         	call	_lcd_update	;wreg free
  1455                           
  1456                           ;main_lcd.c: 65: break;
  1457  000098  D15E               	goto	l6003
  1458                           
  1459                           ;main_lcd.c: 68: switch (inputs) {
  1460                           
  1461                           ;main_lcd.c: 67: case lSEARCH_A:
  1462  00009A  D01F               	goto	l5865
  1463                           
  1464                           ;main_lcd.c: 74: break;
  1465                           
  1466                           ;main_lcd.c: 73: case 0x04:
  1467                           
  1468                           ;main_lcd.c: 72: break;
  1469                           
  1470                           ;main_lcd.c: 71: case 0x02:
  1471                           
  1472                           ;main_lcd.c: 70: break;
  1473                           
  1474                           ;main_lcd.c: 69: case 0x01:
  1475  00009C  D02F               	goto	l5867
  1476  00009E                     l5849:
  1477                           
  1478                           ;main_lcd.c: 76: {fsm_new_state = lMENU;lcd_update();};
  1479  00009E  0E05               	movlw	5
  1480  0000A0  6E1E               	movwf	_fsm_new_state,c
  1481  0000A2  EC9F  F004         	call	_lcd_update	;wreg free
  1482                           
  1483                           ;main_lcd.c: 77: break;
  1484  0000A6  D02A               	goto	l5867
  1485  0000A8                     l5853:
  1486                           
  1487                           ;main_lcd.c: 79: (inputs &= 0x0F);
  1488  0000A8  0E0F               	movlw	15
  1489  0000AA  1623               	andwf	_inputs,f,c
  1490                           
  1491                           ;main_lcd.c: 80: if (SerialRx.Command == lSEARCH_A) {
  1492  0000AC  0100               	movlb	0	; () banked
  1493  0000AE  0561               	decf	(_SerialRx+1)& (0+255),w,b
  1494  0000B0  A4D8               	btfss	status,2,c
  1495  0000B2  D024               	goto	l5867
  1496                           
  1497                           ; BSR set to: 0
  1498                           ;main_lcd.c: 81: if(SerialRx.Hardware == 0x02) {
  1499  0000B4  0E02               	movlw	2
  1500  0000B6  0100               	movlb	0	; () banked
  1501  0000B8  1962               	xorwf	(_SerialRx+2)& (0+255),w,b
  1502  0000BA  A4D8               	btfss	status,2,c
  1503  0000BC  D01F               	goto	l5867
  1504                           
  1505                           ; BSR set to: 0
  1506                           ;main_lcd.c: 82: {fsm_new_state = lSEARCH_HW;lcd_update();};
  1507  0000BE  0E02               	movlw	2
  1508  0000C0  6E1E               	movwf	_fsm_new_state,c
  1509                           
  1510                           ; BSR set to: 0
  1511  0000C2  EC9F  F004         	call	_lcd_update	;wreg free
  1512                           
  1513                           ;main_lcd.c: 83: lSEARCH_Acnt = lSEARCH_HWcnt = first = 0;
  1514  0000C6  0E00               	movlw	0
  1515  0000C8  6E1D               	movwf	_first,c
  1516  0000CA  C01D  F018         	movff	_first,_lSEARCH_HWcnt
  1517  0000CE  6A19               	clrf	_lSEARCH_HWcnt+1,c
  1518  0000D0  C018  F016         	movff	_lSEARCH_HWcnt,_lSEARCH_Acnt
  1519  0000D4  C019  F017         	movff	_lSEARCH_HWcnt+1,_lSEARCH_Acnt+1
  1520                           
  1521                           ;main_lcd.c: 89: }
  1522                           
  1523                           ;main_lcd.c: 88: break;
  1524                           
  1525                           ;main_lcd.c: 87: default:
  1526                           
  1527                           ;main_lcd.c: 84: }
  1528                           ;main_lcd.c: 85: }
  1529                           ;main_lcd.c: 86: break;
  1530  0000D8  D011               	goto	l5867
  1531  0000DA                     l5865:
  1532  0000DA  5023               	movf	_inputs,w,c
  1533                           
  1534                           ; Switch size 1, requested type "space"
  1535                           ; Number of cases is 5, Range of values is 1 to 16
  1536                           ; switch strategies available:
  1537                           ; Name         Instructions Cycles
  1538                           ; simple_byte           16     9 (average)
  1539                           ;	Chosen strategy is simple_byte
  1540  0000DC  0A01               	xorlw	1	; case 1
  1541  0000DE  B4D8               	btfsc	status,2,c
  1542  0000E0  D00D               	goto	l5867
  1543  0000E2  0A03               	xorlw	3	; case 2
  1544  0000E4  B4D8               	btfsc	status,2,c
  1545  0000E6  D00A               	goto	l5867
  1546  0000E8  0A06               	xorlw	6	; case 4
  1547  0000EA  B4D8               	btfsc	status,2,c
  1548  0000EC  D007               	goto	l5867
  1549  0000EE  0A0C               	xorlw	12	; case 8
  1550  0000F0  B4D8               	btfsc	status,2,c
  1551  0000F2  D7D5               	goto	l5849
  1552  0000F4  0A18               	xorlw	24	; case 16
  1553  0000F6  B4D8               	btfsc	status,2,c
  1554  0000F8  D7D7               	goto	l5853
  1555  0000FA  D000               	goto	l5867
  1556  0000FC                     l5867:
  1557                           
  1558                           ;main_lcd.c: 90: lSEARCH_Acnt++;
  1559  0000FC  4A16               	infsnz	_lSEARCH_Acnt,f,c
  1560  0000FE  2A17               	incf	_lSEARCH_Acnt+1,f,c
  1561                           
  1562                           ;main_lcd.c: 91: if(lSEARCH_Acnt >= 1023) {
  1563  000100  2816               	incf	_lSEARCH_Acnt,w,c
  1564  000102  0E03               	movlw	3
  1565  000104  5817               	subwfb	_lSEARCH_Acnt+1,w,c
  1566  000106  A0D8               	btfss	status,0,c
  1567  000108  D00D               	goto	l5875
  1568                           
  1569                           ;main_lcd.c: 92: lSEARCH_Acnt = 0;
  1570  00010A  0E00               	movlw	0
  1571  00010C  6E17               	movwf	_lSEARCH_Acnt+1,c
  1572  00010E  0E00               	movlw	0
  1573  000110  6E16               	movwf	_lSEARCH_Acnt,c
  1574                           
  1575                           ;main_lcd.c: 93: j = i = 0;
  1576  000112  0E00               	movlw	0
  1577  000114  6E21               	movwf	_i,c
  1578  000116  C021  F024         	movff	_i,_j
  1579                           
  1580                           ;main_lcd.c: 94: {fsm_new_state = lTIMEOUT;lcd_update();};
  1581  00011A  0E06               	movlw	6
  1582  00011C  6E1E               	movwf	_fsm_new_state,c
  1583  00011E  EC9F  F004         	call	_lcd_update	;wreg free
  1584  000122  D000               	goto	l5875
  1585  000124                     l5875:
  1586                           
  1587                           ;main_lcd.c: 95: }
  1588                           ;main_lcd.c: 96: go_back = lSEARCH_A;
  1589  000124  0E01               	movlw	1
  1590  000126  D081               	goto	L3
  1591                           
  1592                           ;main_lcd.c: 100: switch (inputs) {
  1593                           
  1594                           ;main_lcd.c: 99: case lSEARCH_HW:
  1595                           
  1596                           ;main_lcd.c: 97: break;
  1597  000128  D01F               	goto	l5893
  1598                           
  1599                           ;main_lcd.c: 106: break;
  1600                           
  1601                           ;main_lcd.c: 105: case 0x04:
  1602                           
  1603                           ;main_lcd.c: 104: break;
  1604                           
  1605                           ;main_lcd.c: 103: case 0x02:
  1606                           
  1607                           ;main_lcd.c: 102: break;
  1608                           
  1609                           ;main_lcd.c: 101: case 0x01:
  1610  00012A  D02F               	goto	l5895
  1611  00012C                     l5877:
  1612                           
  1613                           ;main_lcd.c: 108: {fsm_new_state = lMENU;lcd_update();};
  1614  00012C  0E05               	movlw	5
  1615  00012E  6E1E               	movwf	_fsm_new_state,c
  1616  000130  EC9F  F004         	call	_lcd_update	;wreg free
  1617                           
  1618                           ;main_lcd.c: 109: break;
  1619  000134  D02A               	goto	l5895
  1620  000136                     l5881:
  1621                           
  1622                           ;main_lcd.c: 111: (inputs &= 0x0F);
  1623  000136  0E0F               	movlw	15
  1624  000138  1623               	andwf	_inputs,f,c
  1625                           
  1626                           ;main_lcd.c: 112: if (SerialRx.Command == lSEARCH_HW) {
  1627  00013A  0E02               	movlw	2
  1628  00013C  0100               	movlb	0	; () banked
  1629  00013E  1961               	xorwf	(_SerialRx+1)& (0+255),w,b
  1630  000140  A4D8               	btfss	status,2,c
  1631  000142  D023               	goto	l5895
  1632                           
  1633                           ; BSR set to: 0
  1634                           ;main_lcd.c: 113: if(SerialRx.Hardware == (0x08 + 0x04 + 0x02 + 0x01)) {
  1635  000144  0E0F               	movlw	15
  1636  000146  0100               	movlb	0	; () banked
  1637  000148  1962               	xorwf	(_SerialRx+2)& (0+255),w,b
  1638  00014A  A4D8               	btfss	status,2,c
  1639  00014C  D01E               	goto	l5895
  1640                           
  1641                           ; BSR set to: 0
  1642                           ;main_lcd.c: 114: {fsm_new_state = lWAIT;lcd_update();};
  1643  00014E  0E03               	movlw	3
  1644  000150  6E1E               	movwf	_fsm_new_state,c
  1645                           
  1646                           ; BSR set to: 0
  1647  000152  EC9F  F004         	call	_lcd_update	;wreg free
  1648                           
  1649                           ;main_lcd.c: 115: lSEARCH_Acnt = lSEARCH_HWcnt = 0;
  1650  000156  0E00               	movlw	0
  1651  000158  6E19               	movwf	_lSEARCH_HWcnt+1,c
  1652  00015A  0E00               	movlw	0
  1653  00015C  6E18               	movwf	_lSEARCH_HWcnt,c
  1654  00015E  C018  F016         	movff	_lSEARCH_HWcnt,_lSEARCH_Acnt
  1655  000162  C019  F017         	movff	_lSEARCH_HWcnt+1,_lSEARCH_Acnt+1
  1656                           
  1657                           ;main_lcd.c: 121: }
  1658                           
  1659                           ;main_lcd.c: 120: break;
  1660                           
  1661                           ;main_lcd.c: 119: default:
  1662                           
  1663                           ;main_lcd.c: 116: }
  1664                           ;main_lcd.c: 117: }
  1665                           ;main_lcd.c: 118: break;
  1666  000166  D011               	goto	l5895
  1667  000168                     l5893:
  1668  000168  5023               	movf	_inputs,w,c
  1669                           
  1670                           ; Switch size 1, requested type "space"
  1671                           ; Number of cases is 5, Range of values is 1 to 16
  1672                           ; switch strategies available:
  1673                           ; Name         Instructions Cycles
  1674                           ; simple_byte           16     9 (average)
  1675                           ;	Chosen strategy is simple_byte
  1676  00016A  0A01               	xorlw	1	; case 1
  1677  00016C  B4D8               	btfsc	status,2,c
  1678  00016E  D00D               	goto	l5895
  1679  000170  0A03               	xorlw	3	; case 2
  1680  000172  B4D8               	btfsc	status,2,c
  1681  000174  D00A               	goto	l5895
  1682  000176  0A06               	xorlw	6	; case 4
  1683  000178  B4D8               	btfsc	status,2,c
  1684  00017A  D007               	goto	l5895
  1685  00017C  0A0C               	xorlw	12	; case 8
  1686  00017E  B4D8               	btfsc	status,2,c
  1687  000180  D7D5               	goto	l5877
  1688  000182  0A18               	xorlw	24	; case 16
  1689  000184  B4D8               	btfsc	status,2,c
  1690  000186  D7D7               	goto	l5881
  1691  000188  D000               	goto	l5895
  1692  00018A                     l5895:
  1693                           
  1694                           ;main_lcd.c: 122: lSEARCH_HWcnt++;
  1695  00018A  4A18               	infsnz	_lSEARCH_HWcnt,f,c
  1696  00018C  2A19               	incf	_lSEARCH_HWcnt+1,f,c
  1697                           
  1698                           ;main_lcd.c: 123: if(lSEARCH_HWcnt >= 1023) {
  1699  00018E  2818               	incf	_lSEARCH_HWcnt,w,c
  1700  000190  0E03               	movlw	3
  1701  000192  5819               	subwfb	_lSEARCH_HWcnt+1,w,c
  1702  000194  A0D8               	btfss	status,0,c
  1703  000196  D009               	goto	l5903
  1704                           
  1705                           ;main_lcd.c: 124: j = i = 0;
  1706  000198  0E00               	movlw	0
  1707  00019A  6E21               	movwf	_i,c
  1708  00019C  C021  F024         	movff	_i,_j
  1709                           
  1710                           ;main_lcd.c: 125: {fsm_new_state = lTIMEOUT;lcd_update();};
  1711  0001A0  0E06               	movlw	6
  1712  0001A2  6E1E               	movwf	_fsm_new_state,c
  1713  0001A4  EC9F  F004         	call	_lcd_update	;wreg free
  1714  0001A8  D000               	goto	l5903
  1715  0001AA                     l5903:
  1716                           
  1717                           ;main_lcd.c: 126: }
  1718                           ;main_lcd.c: 127: go_back = lSEARCH_HW;
  1719  0001AA  0E02               	movlw	2
  1720  0001AC  D03E               	goto	L3
  1721                           
  1722                           ;main_lcd.c: 131: switch (inputs) {
  1723                           
  1724                           ;main_lcd.c: 130: case lWAIT:
  1725                           
  1726                           ;main_lcd.c: 128: break;
  1727  0001AE  D00E               	goto	l5917
  1728                           
  1729                           ;main_lcd.c: 135: break;
  1730                           
  1731                           ;main_lcd.c: 134: case 0x02:
  1732                           
  1733                           ;main_lcd.c: 133: break;
  1734                           
  1735                           ;main_lcd.c: 132: case 0x01:
  1736  0001B0  D01E               	goto	l5919
  1737  0001B2                     l5905:
  1738                           
  1739                           ;main_lcd.c: 137: {fsm_new_state = lTRANSMIT;lcd_update();};
  1740  0001B2  0E04               	movlw	4
  1741  0001B4  6E1E               	movwf	_fsm_new_state,c
  1742  0001B6  EC9F  F004         	call	_lcd_update	;wreg free
  1743                           
  1744                           ;main_lcd.c: 138: break;
  1745  0001BA  D019               	goto	l5919
  1746  0001BC                     l5909:
  1747                           
  1748                           ;main_lcd.c: 140: {fsm_new_state = lMENU;lcd_update();};
  1749  0001BC  0E05               	movlw	5
  1750  0001BE  6E1E               	movwf	_fsm_new_state,c
  1751  0001C0  EC9F  F004         	call	_lcd_update	;wreg free
  1752                           
  1753                           ;main_lcd.c: 141: break;
  1754  0001C4  D014               	goto	l5919
  1755  0001C6                     l5913:
  1756                           
  1757                           ;main_lcd.c: 143: (inputs &= 0x0F);
  1758  0001C6  0E0F               	movlw	15
  1759  0001C8  1623               	andwf	_inputs,f,c
  1760                           
  1761                           ;main_lcd.c: 147: }
  1762                           
  1763                           ;main_lcd.c: 146: break;
  1764                           
  1765                           ;main_lcd.c: 145: default:
  1766                           
  1767                           ;main_lcd.c: 144: break;
  1768  0001CA  D011               	goto	l5919
  1769  0001CC                     l5917:
  1770  0001CC  5023               	movf	_inputs,w,c
  1771                           
  1772                           ; Switch size 1, requested type "space"
  1773                           ; Number of cases is 5, Range of values is 1 to 16
  1774                           ; switch strategies available:
  1775                           ; Name         Instructions Cycles
  1776                           ; simple_byte           16     9 (average)
  1777                           ;	Chosen strategy is simple_byte
  1778  0001CE  0A01               	xorlw	1	; case 1
  1779  0001D0  B4D8               	btfsc	status,2,c
  1780  0001D2  D00D               	goto	l5919
  1781  0001D4  0A03               	xorlw	3	; case 2
  1782  0001D6  B4D8               	btfsc	status,2,c
  1783  0001D8  D00A               	goto	l5919
  1784  0001DA  0A06               	xorlw	6	; case 4
  1785  0001DC  B4D8               	btfsc	status,2,c
  1786  0001DE  D7E9               	goto	l5905
  1787  0001E0  0A0C               	xorlw	12	; case 8
  1788  0001E2  B4D8               	btfsc	status,2,c
  1789  0001E4  D7EB               	goto	l5909
  1790  0001E6  0A18               	xorlw	24	; case 16
  1791  0001E8  B4D8               	btfsc	status,2,c
  1792  0001EA  D7ED               	goto	l5913
  1793  0001EC  D000               	goto	l5919
  1794  0001EE                     l5919:
  1795                           
  1796                           ;main_lcd.c: 148: go_back = lWAIT;
  1797  0001EE  0E03               	movlw	3
  1798  0001F0  D01C               	goto	L3
  1799                           
  1800                           ;main_lcd.c: 152: switch (inputs) {
  1801                           
  1802                           ;main_lcd.c: 151: case lTRANSMIT:
  1803                           
  1804                           ;main_lcd.c: 149: break;
  1805  0001F2  D009               	goto	l5929
  1806                           
  1807                           ;main_lcd.c: 158: break;
  1808                           
  1809                           ;main_lcd.c: 157: case 0x04:
  1810                           
  1811                           ;main_lcd.c: 156: break;
  1812                           
  1813                           ;main_lcd.c: 155: case 0x02:
  1814                           
  1815                           ;main_lcd.c: 154: break;
  1816                           
  1817                           ;main_lcd.c: 153: case 0x01:
  1818  0001F4  D019               	goto	l5931
  1819  0001F6                     l5921:
  1820                           
  1821                           ;main_lcd.c: 160: {fsm_new_state = lMENU;lcd_update();};
  1822  0001F6  0E05               	movlw	5
  1823  0001F8  6E1E               	movwf	_fsm_new_state,c
  1824  0001FA  EC9F  F004         	call	_lcd_update	;wreg free
  1825                           
  1826                           ;main_lcd.c: 161: break;
  1827  0001FE  D014               	goto	l5931
  1828  000200                     l5925:
  1829                           
  1830                           ;main_lcd.c: 163: (inputs &= 0x0F);
  1831  000200  0E0F               	movlw	15
  1832  000202  1623               	andwf	_inputs,f,c
  1833                           
  1834                           ;main_lcd.c: 167: }
  1835                           
  1836                           ;main_lcd.c: 166: break;
  1837                           
  1838                           ;main_lcd.c: 165: default:
  1839                           
  1840                           ;main_lcd.c: 164: break;
  1841  000204  D011               	goto	l5931
  1842  000206                     l5929:
  1843  000206  5023               	movf	_inputs,w,c
  1844                           
  1845                           ; Switch size 1, requested type "space"
  1846                           ; Number of cases is 5, Range of values is 1 to 16
  1847                           ; switch strategies available:
  1848                           ; Name         Instructions Cycles
  1849                           ; simple_byte           16     9 (average)
  1850                           ;	Chosen strategy is simple_byte
  1851  000208  0A01               	xorlw	1	; case 1
  1852  00020A  B4D8               	btfsc	status,2,c
  1853  00020C  D00D               	goto	l5931
  1854  00020E  0A03               	xorlw	3	; case 2
  1855  000210  B4D8               	btfsc	status,2,c
  1856  000212  D00A               	goto	l5931
  1857  000214  0A06               	xorlw	6	; case 4
  1858  000216  B4D8               	btfsc	status,2,c
  1859  000218  D007               	goto	l5931
  1860  00021A  0A0C               	xorlw	12	; case 8
  1861  00021C  B4D8               	btfsc	status,2,c
  1862  00021E  D7EB               	goto	l5921
  1863  000220  0A18               	xorlw	24	; case 16
  1864  000222  B4D8               	btfsc	status,2,c
  1865  000224  D7ED               	goto	l5925
  1866  000226  D000               	goto	l5931
  1867  000228                     l5931:
  1868                           
  1869                           ;main_lcd.c: 168: go_back = lTRANSMIT;
  1870  000228  0E04               	movlw	4
  1871  00022A                     L3:
  1872  00022A  6E20               	movwf	_go_back,c
  1873                           
  1874                           ;main_lcd.c: 169: break;
  1875  00022C  D094               	goto	l6003
  1876  00022E                     l5933:
  1877                           
  1878                           ;main_lcd.c: 172: lcd_main_menu_fsm(go_back);
  1879  00022E  5020               	movf	_go_back,w,c
  1880  000230  ECC7  F001         	call	_lcd_main_menu_fsm
  1881  000234  D016               	goto	l5943
  1882                           
  1883                           ;main_lcd.c: 177: switch (inputs) {
  1884                           
  1885                           ;main_lcd.c: 176: case lTIMEOUT:
  1886                           
  1887                           ;main_lcd.c: 174: break;
  1888                           
  1889                           ;main_lcd.c: 173: (inputs &= 0x0F);
  1890  000236  D018               	goto	l5947
  1891                           
  1892                           ;main_lcd.c: 181: break;
  1893                           
  1894                           ;main_lcd.c: 180: case 0x02:
  1895                           
  1896                           ;main_lcd.c: 179: break;
  1897                           
  1898                           ;main_lcd.c: 178: case 0x01:
  1899  000238  D08E               	goto	l6003
  1900  00023A                     l402:
  1901                           
  1902                           ;main_lcd.c: 183: {fsm_new_state = go_back;lcd_update();};
  1903  00023A  C020  F01E         	movff	_go_back,_fsm_new_state
  1904  00023E  EC9F  F004         	call	_lcd_update	;wreg free
  1905                           
  1906                           ;main_lcd.c: 184: lSEARCH_HWcnt = lSEARCH_Acnt = scrs_cnt = i = j = 0;
  1907  000242  0E00               	movlw	0
  1908  000244  6E24               	movwf	_j,c
  1909  000246  C024  F021         	movff	_j,_i
  1910  00024A  C021  F02A         	movff	_i,_scrs_cnt
  1911  00024E  C02A  F016         	movff	_scrs_cnt,_lSEARCH_Acnt
  1912  000252  6A17               	clrf	_lSEARCH_Acnt+1,c
  1913  000254  C016  F018         	movff	_lSEARCH_Acnt,_lSEARCH_HWcnt
  1914  000258  C017  F019         	movff	_lSEARCH_Acnt+1,_lSEARCH_HWcnt+1
  1915                           
  1916                           ;main_lcd.c: 185: lcd_update();
  1917  00025C  EC9F  F004         	call	_lcd_update	;wreg free
  1918                           
  1919                           ;main_lcd.c: 188: break;
  1920                           
  1921                           ;main_lcd.c: 187: case 0x08:
  1922                           
  1923                           ;main_lcd.c: 186: break;
  1924  000260  D07A               	goto	l6003
  1925  000262                     l5943:
  1926                           
  1927                           ;main_lcd.c: 190: (inputs &= 0x0F);
  1928  000262  0E0F               	movlw	15
  1929  000264  1623               	andwf	_inputs,f,c
  1930                           
  1931                           ;main_lcd.c: 194: }
  1932                           
  1933                           ;main_lcd.c: 193: break;
  1934                           
  1935                           ;main_lcd.c: 192: default:
  1936                           
  1937                           ;main_lcd.c: 191: break;
  1938  000266  D077               	goto	l6003
  1939  000268                     l5947:
  1940  000268  5023               	movf	_inputs,w,c
  1941                           
  1942                           ; Switch size 1, requested type "space"
  1943                           ; Number of cases is 5, Range of values is 1 to 16
  1944                           ; switch strategies available:
  1945                           ; Name         Instructions Cycles
  1946                           ; simple_byte           16     9 (average)
  1947                           ;	Chosen strategy is simple_byte
  1948  00026A  0A01               	xorlw	1	; case 1
  1949  00026C  B4D8               	btfsc	status,2,c
  1950  00026E  D073               	goto	l6003
  1951  000270  0A03               	xorlw	3	; case 2
  1952  000272  B4D8               	btfsc	status,2,c
  1953  000274  D070               	goto	l6003
  1954  000276  0A06               	xorlw	6	; case 4
  1955  000278  B4D8               	btfsc	status,2,c
  1956  00027A  D7DF               	goto	l402
  1957  00027C  0A0C               	xorlw	12	; case 8
  1958  00027E  B4D8               	btfsc	status,2,c
  1959  000280  D06A               	goto	l6003
  1960  000282  0A18               	xorlw	24	; case 16
  1961  000284  B4D8               	btfsc	status,2,c
  1962  000286  D7ED               	goto	l5943
  1963                           
  1964                           ;main_lcd.c: 199: }
  1965                           
  1966                           ;main_lcd.c: 198: break;
  1967                           
  1968                           ;main_lcd.c: 197: default:
  1969                           
  1970                           ;main_lcd.c: 195: break;
  1971  000288  D066               	goto	l6003
  1972  00028A                     l5951:
  1973  00028A  501F               	movf	_fsm_old_state,w,c
  1974                           
  1975                           ; Switch size 1, requested type "space"
  1976                           ; Number of cases is 7, Range of values is 0 to 6
  1977                           ; switch strategies available:
  1978                           ; Name         Instructions Cycles
  1979                           ; simple_byte           22    12 (average)
  1980                           ;	Chosen strategy is simple_byte
  1981  00028C  0A00               	xorlw	0	; case 0
  1982  00028E  B4D8               	btfsc	status,2,c
  1983  000290  D6FF               	goto	l5845
  1984  000292  0A01               	xorlw	1	; case 1
  1985  000294  B4D8               	btfsc	status,2,c
  1986  000296  D721               	goto	l5865
  1987  000298  0A03               	xorlw	3	; case 2
  1988  00029A  B4D8               	btfsc	status,2,c
  1989  00029C  D765               	goto	l5893
  1990  00029E  0A01               	xorlw	1	; case 3
  1991  0002A0  B4D8               	btfsc	status,2,c
  1992  0002A2  D794               	goto	l5917
  1993  0002A4  0A07               	xorlw	7	; case 4
  1994  0002A6  B4D8               	btfsc	status,2,c
  1995  0002A8  D7AE               	goto	l5929
  1996  0002AA  0A01               	xorlw	1	; case 5
  1997  0002AC  B4D8               	btfsc	status,2,c
  1998  0002AE  D7BF               	goto	l5933
  1999  0002B0  0A03               	xorlw	3	; case 6
  2000  0002B2  B4D8               	btfsc	status,2,c
  2001  0002B4  D7D9               	goto	l5947
  2002                           
  2003                           ;main_lcd.c: 206: switch (fsm_old_state) {
  2004  0002B6  D04F               	goto	l6003
  2005  0002B8                     l5953:
  2006                           
  2007                           ;main_lcd.c: 208: main_menu_old = main_menu_new = mmMENU;
  2008  0002B8  0E00               	movlw	0
  2009  0002BA  6E25               	movwf	_main_menu_new,c
  2010  0002BC  C025  F026         	movff	_main_menu_new,_main_menu_old
  2011                           
  2012                           ;main_lcd.c: 209: sub_menu_lcd = smBRIGHTNESS;
  2013  0002C0  0E00               	movlw	0
  2014  0002C2  6E2C               	movwf	_sub_menu_lcd,c
  2015                           
  2016                           ;main_lcd.c: 210: i = j = scrs_cnt = first = 0;
  2017  0002C4  0E00               	movlw	0
  2018  0002C6  6E1D               	movwf	_first,c
  2019  0002C8  C01D  F02A         	movff	_first,_scrs_cnt
  2020  0002CC  C02A  F024         	movff	_scrs_cnt,_j
  2021  0002D0  C024  F021         	movff	_j,_i
  2022                           
  2023                           ;main_lcd.c: 211: lSEARCH_Acnt = lSEARCH_HWcnt = 0;
  2024  0002D4  0E00               	movlw	0
  2025  0002D6  6E19               	movwf	_lSEARCH_HWcnt+1,c
  2026  0002D8  0E00               	movlw	0
  2027  0002DA  6E18               	movwf	_lSEARCH_HWcnt,c
  2028  0002DC  C018  F016         	movff	_lSEARCH_HWcnt,_lSEARCH_Acnt
  2029  0002E0  C019  F017         	movff	_lSEARCH_HWcnt+1,_lSEARCH_Acnt+1
  2030                           
  2031                           ;main_lcd.c: 212: enable_uart_m();
  2032  0002E4  ECF6  F00D         	call	_enable_uart_m	;wreg free
  2033                           
  2034                           ;main_lcd.c: 213: uart_block_count = 0;
  2035  0002E8  0E00               	movlw	0
  2036  0002EA  6E2E               	movwf	_uart_block_count,c
  2037                           
  2038                           ;main_lcd.c: 214: SerialTx.TransmitAddress = 0x90;
  2039  0002EC  0E90               	movlw	144
  2040  0002EE  6E01               	movwf	_SerialTx,c
  2041                           
  2042                           ;main_lcd.c: 215: (PORTAbits.RA5 = 1);
  2043  0002F0  8A80               	bsf	3968,5,c	;volatile
  2044                           
  2045                           ;main_lcd.c: 216: lcd_start_up();
  2046  0002F2  EC66  F00B         	call	_lcd_start_up	;wreg free
  2047                           
  2048                           ;main_lcd.c: 217: break;
  2049  0002F6  D045               	goto	l409
  2050  0002F8                     l5965:
  2051                           
  2052                           ;main_lcd.c: 221: SerialTx.Command = lSEARCH_A;
  2053  0002F8  0E01               	movlw	1
  2054  0002FA  6E02               	movwf	_SerialTx+1,c
  2055                           
  2056                           ;main_lcd.c: 222: SerialTransmit();
  2057  0002FC  EC45  F00D         	call	_SerialTransmit	;wreg free
  2058                           
  2059                           ;main_lcd.c: 223: lcd_update();
  2060  000300  EC9F  F004         	call	_lcd_update	;wreg free
  2061                           
  2062                           ;main_lcd.c: 224: break;
  2063  000304  D03E               	goto	l409
  2064  000306                     l5971:
  2065                           
  2066                           ;main_lcd.c: 228: if(!first) {
  2067  000306  501D               	movf	_first,w,c
  2068  000308  A4D8               	btfss	status,2,c
  2069  00030A  D007               	goto	l5979
  2070                           
  2071                           ;main_lcd.c: 229: SerialTx.Command = lSEARCH_HW;
  2072  00030C  0E02               	movlw	2
  2073  00030E  6E02               	movwf	_SerialTx+1,c
  2074                           
  2075                           ;main_lcd.c: 230: SerialTransmit();
  2076  000310  EC45  F00D         	call	_SerialTransmit	;wreg free
  2077                           
  2078                           ;main_lcd.c: 231: first = 1;
  2079  000314  0E01               	movlw	1
  2080  000316  6E1D               	movwf	_first,c
  2081  000318  D000               	goto	l5979
  2082  00031A                     l5979:
  2083                           
  2084                           ;main_lcd.c: 232: }
  2085                           ;main_lcd.c: 233: lcd_update();
  2086  00031A  EC9F  F004         	call	_lcd_update	;wreg free
  2087                           
  2088                           ;main_lcd.c: 234: break;
  2089  00031E  D031               	goto	l409
  2090  000320                     l5981:
  2091                           
  2092                           ;main_lcd.c: 237: if(first) {
  2093  000320  501D               	movf	_first,w,c
  2094  000322  B4D8               	btfsc	status,2,c
  2095  000324  D009               	goto	l5991
  2096                           
  2097                           ;main_lcd.c: 238: SerialTx.Command = lWAIT;
  2098  000326  0E03               	movlw	3
  2099  000328  6E02               	movwf	_SerialTx+1,c
  2100                           
  2101                           ;main_lcd.c: 239: SerialTransmit();
  2102  00032A  EC45  F00D         	call	_SerialTransmit	;wreg free
  2103                           
  2104                           ;main_lcd.c: 240: lcd_update();
  2105  00032E  EC9F  F004         	call	_lcd_update	;wreg free
  2106                           
  2107                           ;main_lcd.c: 241: first = 0;
  2108  000332  0E00               	movlw	0
  2109  000334  6E1D               	movwf	_first,c
  2110  000336  D000               	goto	l5991
  2111  000338                     l5991:
  2112                           
  2113                           ;main_lcd.c: 242: }
  2114                           ;main_lcd.c: 243: if(fsm_new_state == lTRANSMIT) {
  2115  000338  0E04               	movlw	4
  2116  00033A  181E               	xorwf	_fsm_new_state,w,c
  2117  00033C  A4D8               	btfss	status,2,c
  2118  00033E  D021               	goto	l409
  2119                           
  2120                           ;main_lcd.c: 244: SerialTx.Command = lTRANSMIT;
  2121  000340  0E04               	movlw	4
  2122  000342  6E02               	movwf	_SerialTx+1,c
  2123                           
  2124                           ;main_lcd.c: 245: SerialTransmit();
  2125  000344  EC45  F00D         	call	_SerialTransmit	;wreg free
  2126                           
  2127                           ;main_lcd.c: 246: lcd_update();
  2128  000348  EC9F  F004         	call	_lcd_update	;wreg free
  2129                           
  2130                           ;main_lcd.c: 254: break;
  2131                           
  2132                           ;main_lcd.c: 253: case lMENU:
  2133                           
  2134                           ;main_lcd.c: 251: break;
  2135                           
  2136                           ;main_lcd.c: 250: case lTRANSMIT:
  2137                           
  2138                           ;main_lcd.c: 247: }
  2139                           ;main_lcd.c: 248: break;
  2140  00034C  D01A               	goto	l409
  2141  00034E                     l5999:
  2142                           
  2143                           ;main_lcd.c: 257: lcd_time_out(go_back);
  2144  00034E  5020               	movf	_go_back,w,c
  2145  000350  EC4E  F00A         	call	_lcd_time_out
  2146                           
  2147                           ;main_lcd.c: 262: }
  2148                           
  2149                           ;main_lcd.c: 261: break;
  2150                           
  2151                           ;main_lcd.c: 260: default:
  2152                           
  2153                           ;main_lcd.c: 258: break;
  2154  000354  D016               	goto	l409
  2155  000356                     l6003:
  2156  000356  501F               	movf	_fsm_old_state,w,c
  2157                           
  2158                           ; Switch size 1, requested type "space"
  2159                           ; Number of cases is 7, Range of values is 0 to 6
  2160                           ; switch strategies available:
  2161                           ; Name         Instructions Cycles
  2162                           ; simple_byte           22    12 (average)
  2163                           ;	Chosen strategy is simple_byte
  2164  000358  0A00               	xorlw	0	; case 0
  2165  00035A  B4D8               	btfsc	status,2,c
  2166  00035C  D7AD               	goto	l5953
  2167  00035E  0A01               	xorlw	1	; case 1
  2168  000360  B4D8               	btfsc	status,2,c
  2169  000362  D7CA               	goto	l5965
  2170  000364  0A03               	xorlw	3	; case 2
  2171  000366  B4D8               	btfsc	status,2,c
  2172  000368  D7CE               	goto	l5971
  2173  00036A  0A01               	xorlw	1	; case 3
  2174  00036C  B4D8               	btfsc	status,2,c
  2175  00036E  D7D8               	goto	l5981
  2176  000370  0A07               	xorlw	7	; case 4
  2177  000372  B4D8               	btfsc	status,2,c
  2178  000374  D006               	goto	l409
  2179  000376  0A01               	xorlw	1	; case 5
  2180  000378  B4D8               	btfsc	status,2,c
  2181  00037A  D003               	goto	l409
  2182  00037C  0A03               	xorlw	3	; case 6
  2183  00037E  B4D8               	btfsc	status,2,c
  2184  000380  D7E6               	goto	l5999
  2185  000382                     l409:
  2186                           
  2187                           ;main_lcd.c: 263: fsm_old_state = fsm_new_state;
  2188  000382  C01E  F01F         	movff	_fsm_new_state,_fsm_old_state
  2189                           
  2190                           ;main_lcd.c: 264: INTCONbits.TMR0IF = 0;
  2191  000386  94F2               	bcf	intcon,2,c	;volatile
  2192  000388  D66E               	goto	l348
  2193  00038A  EF0C  F000         	goto	start
  2194  00038E                     __end_of_main:
  2195                           	opt stack 0
  2196                           tblptru	equ	0xFF8
  2197                           tblptrh	equ	0xFF7
  2198                           tblptrl	equ	0xFF6
  2199                           tablat	equ	0xFF5
  2200                           prodh	equ	0xFF4
  2201                           prodl	equ	0xFF3
  2202                           intcon	equ	0xFF2
  2203                           postinc0	equ	0xFEE
  2204                           wreg	equ	0xFE8
  2205                           postdec1	equ	0xFE5
  2206                           fsr1l	equ	0xFE1
  2207                           status	equ	0xFD8
  2208                           
  2209 ;; *************** function _read_buttons *****************
  2210 ;; Defined at:
  2211 ;;		line 307 in file "main_lcd.c"
  2212 ;; Parameters:    Size  Location     Type
  2213 ;;		None
  2214 ;; Auto vars:     Size  Location     Type
  2215 ;;		None
  2216 ;; Return value:  Size  Location     Type
  2217 ;;                  1    wreg      unsigned char 
  2218 ;; Registers used:
  2219 ;;		wreg, status,2, status,0
  2220 ;; Tracked objects:
  2221 ;;		On entry : 0/0
  2222 ;;		On exit  : 0/0
  2223 ;;		Unchanged: 0/0
  2224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2225 ;;      Params:         0       0       0       0       0       0       0       0       0
  2226 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2227 ;;      Temps:          5       0       0       0       0       0       0       0       0
  2228 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2229 ;;Total ram usage:        5 bytes
  2230 ;; Hardware stack levels used:    1
  2231 ;; Hardware stack levels required when called:    1
  2232 ;; This function calls:
  2233 ;;		Nothing
  2234 ;; This function is called by:
  2235 ;;		_main
  2236 ;; This function uses a non-reentrant model
  2237 ;;
  2238                           
  2239                           	psect	text1
  2240  0017E8                     __ptext1:
  2241                           	opt stack 0
  2242  0017E8                     _read_buttons:
  2243                           	opt stack 29
  2244                           
  2245                           ;main_lcd.c: 308: buttons_change = 0;
  2246                           
  2247                           ;incstack = 0
  2248  0017E8  0E00               	movlw	0
  2249  0017EA  6E1A               	movwf	_buttons_change,c
  2250                           
  2251                           ;main_lcd.c: 309: buttons_new = ((!PORTBbits.RB1<<3) + (!PORTBbits.RB3<<2) + (!PORTBbits
      +                          .RB2<<1) + (!PORTBbits.RB0));
  2252  0017EC  B081               	btfsc	3969,0,c	;volatile
  2253  0017EE  D003               	goto	u2760
  2254  0017F0  6A3D               	clrf	??_read_buttons& (0+255),c
  2255  0017F2  2A3D               	incf	??_read_buttons& (0+255),f,c
  2256  0017F4  D001               	goto	u2778
  2257  0017F6                     u2760:
  2258  0017F6  6A3D               	clrf	??_read_buttons& (0+255),c
  2259  0017F8                     u2778:
  2260  0017F8  B481               	btfsc	3969,2,c	;volatile
  2261  0017FA  D003               	goto	u2780
  2262  0017FC  6A3E               	clrf	(??_read_buttons+1)& (0+255),c
  2263  0017FE  2A3E               	incf	(??_read_buttons+1)& (0+255),f,c
  2264  001800  D001               	goto	u2798
  2265  001802                     u2780:
  2266  001802  6A3E               	clrf	(??_read_buttons+1)& (0+255),c
  2267  001804                     u2798:
  2268  001804  90D8               	bcf	status,0,c
  2269  001806  343E               	rlcf	??_read_buttons+1,w,c
  2270  001808  6E3F               	movwf	(??_read_buttons+2)& (0+255),c
  2271  00180A  B681               	btfsc	3969,3,c	;volatile
  2272  00180C  D003               	goto	u2800
  2273  00180E  6A40               	clrf	(??_read_buttons+3)& (0+255),c
  2274  001810  2A40               	incf	(??_read_buttons+3)& (0+255),f,c
  2275  001812  D001               	goto	u2818
  2276  001814                     u2800:
  2277  001814  6A40               	clrf	(??_read_buttons+3)& (0+255),c
  2278  001816                     u2818:
  2279  001816  90D8               	bcf	status,0,c
  2280  001818  3640               	rlcf	??_read_buttons+3,f,c
  2281  00181A  90D8               	bcf	status,0,c
  2282  00181C  3640               	rlcf	??_read_buttons+3,f,c
  2283  00181E  B281               	btfsc	3969,1,c	;volatile
  2284  001820  D003               	goto	u2820
  2285  001822  6A41               	clrf	(??_read_buttons+4)& (0+255),c
  2286  001824  2A41               	incf	(??_read_buttons+4)& (0+255),f,c
  2287  001826  D001               	goto	u2838
  2288  001828                     u2820:
  2289  001828  6A41               	clrf	(??_read_buttons+4)& (0+255),c
  2290  00182A                     u2838:
  2291  00182A  90D8               	bcf	status,0,c
  2292  00182C  3641               	rlcf	??_read_buttons+4,f,c
  2293  00182E  90D8               	bcf	status,0,c
  2294  001830  3641               	rlcf	??_read_buttons+4,f,c
  2295  001832  90D8               	bcf	status,0,c
  2296  001834  3441               	rlcf	??_read_buttons+4,w,c
  2297  001836  2440               	addwf	??_read_buttons+3,w,c
  2298  001838  243F               	addwf	??_read_buttons+2,w,c
  2299  00183A  243D               	addwf	??_read_buttons,w,c
  2300  00183C  6E1B               	movwf	_buttons_new,c
  2301                           
  2302                           ;main_lcd.c: 310: if((buttons_new != 0) && (buttons_old == 0) && (buttons_old != buttons
      +                          _new))
  2303  00183E  501B               	movf	_buttons_new,w,c
  2304  001840  B4D8               	btfsc	status,2,c
  2305  001842  D009               	goto	l3911
  2306  001844  501C               	movf	_buttons_old,w,c
  2307  001846  A4D8               	btfss	status,2,c
  2308  001848  D006               	goto	l3911
  2309  00184A  501B               	movf	_buttons_new,w,c
  2310  00184C  181C               	xorwf	_buttons_old,w,c
  2311  00184E  B4D8               	btfsc	status,2,c
  2312  001850  D002               	goto	l3911
  2313                           
  2314                           ;main_lcd.c: 311: buttons_change = 1;
  2315  001852  0E01               	movlw	1
  2316  001854  D001               	goto	L4
  2317  001856                     l3911:
  2318                           
  2319                           ;main_lcd.c: 312: else
  2320                           ;main_lcd.c: 313: buttons_change = 0;
  2321  001856  0E00               	movlw	0
  2322  001858                     L4:
  2323  001858  6E1A               	movwf	_buttons_change,c
  2324  00185A  D000               	goto	l3913
  2325  00185C                     l3913:
  2326                           
  2327                           ;main_lcd.c: 315: buttons_old = buttons_new;
  2328  00185C  C01B  F01C         	movff	_buttons_new,_buttons_old
  2329                           
  2330                           ;main_lcd.c: 317: if(buttons_change) {
  2331  001860  501A               	movf	_buttons_change,w,c
  2332  001862  B4D8               	btfsc	status,2,c
  2333  001864  D002               	goto	l3921
  2334                           
  2335                           ;main_lcd.c: 318: return buttons_new;
  2336  001866  501B               	movf	_buttons_new,w,c
  2337                           
  2338                           ;main_lcd.c: 319: } else {
  2339  001868  D002               	goto	l434
  2340  00186A                     l3921:
  2341                           
  2342                           ;main_lcd.c: 320: return 0x00;
  2343  00186A  0E00               	movlw	0
  2344  00186C  D000               	goto	l434
  2345  00186E                     l434:
  2346  00186E  0012               	return		;funcret
  2347  001870                     __end_of_read_buttons:
  2348                           	opt stack 0
  2349                           tblptru	equ	0xFF8
  2350                           tblptrh	equ	0xFF7
  2351                           tblptrl	equ	0xFF6
  2352                           tablat	equ	0xFF5
  2353                           prodh	equ	0xFF4
  2354                           prodl	equ	0xFF3
  2355                           intcon	equ	0xFF2
  2356                           postinc0	equ	0xFEE
  2357                           wreg	equ	0xFE8
  2358                           postdec1	equ	0xFE5
  2359                           fsr1l	equ	0xFE1
  2360                           status	equ	0xFD8
  2361                           
  2362 ;; *************** function _lcd_time_out *****************
  2363 ;; Defined at:
  2364 ;;		line 652 in file "lcd_functions.c"
  2365 ;; Parameters:    Size  Location     Type
  2366 ;;  mmOld           1    wreg     unsigned char 
  2367 ;; Auto vars:     Size  Location     Type
  2368 ;;  mmOld           1   26[COMRAM] unsigned char 
  2369 ;; Return value:  Size  Location     Type
  2370 ;;		None               void
  2371 ;; Registers used:
  2372 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2373 ;; Tracked objects:
  2374 ;;		On entry : 0/0
  2375 ;;		On exit  : 0/0
  2376 ;;		Unchanged: 0/0
  2377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2378 ;;      Params:         0       0       0       0       0       0       0       0       0
  2379 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2380 ;;      Temps:          0       2       0       0       0       0       0       0       0
  2381 ;;      Totals:         1       2       0       0       0       0       0       0       0
  2382 ;;Total ram usage:        3 bytes
  2383 ;; Hardware stack levels used:    1
  2384 ;; Hardware stack levels required when called:    4
  2385 ;; This function calls:
  2386 ;;		_LCDGotoXY
  2387 ;;		_LCDWriteString
  2388 ;; This function is called by:
  2389 ;;		_main
  2390 ;; This function uses a non-reentrant model
  2391 ;;
  2392                           
  2393                           	psect	text2
  2394  00149C                     __ptext2:
  2395                           	opt stack 0
  2396  00149C                     _lcd_time_out:
  2397                           	opt stack 26
  2398                           
  2399                           ;incstack = 0
  2400                           ;lcd_time_out@mmOld stored from wreg
  2401  00149C  6E49               	movwf	lcd_time_out@mmOld,c
  2402                           
  2403                           ;lcd_functions.c: 653: scrs_cnt++;
  2404  00149E  2A2A               	incf	_scrs_cnt,f,c
  2405                           
  2406                           ;lcd_functions.c: 654: if (scrs_cnt == ((unsigned int)scrs_speed*16)) {
  2407  0014A0  5051               	movf	_scrs_speed,w,c
  2408  0014A2  0D10               	mullw	16
  2409  0014A4  502A               	movf	_scrs_cnt,w,c
  2410  0014A6  0100               	movlb	0	; () banked
  2411  0014A8  6F94               	movwf	??_lcd_time_out& (0+255),b
  2412  0014AA  6B95               	clrf	(??_lcd_time_out+1)& (0+255),b
  2413  0014AC  50F3               	movf	prodl,w,c
  2414  0014AE  0100               	movlb	0	; () banked
  2415  0014B0  1994               	xorwf	??_lcd_time_out& (0+255),w,b
  2416  0014B2  E15B               	bnz	l777
  2417  0014B4  50F4               	movf	prodh,w,c
  2418  0014B6  0100               	movlb	0	; () banked
  2419  0014B8  1995               	xorwf	(??_lcd_time_out+1)& (0+255),w,b
  2420  0014BA  A4D8               	btfss	status,2,c
  2421  0014BC  D056               	goto	l777
  2422                           
  2423                           ; BSR set to: 0
  2424                           ;lcd_functions.c: 655: if(j == 0) {
  2425  0014BE  5024               	movf	_j,w,c
  2426  0014C0  A4D8               	btfss	status,2,c
  2427  0014C2  D037               	goto	l5667
  2428                           
  2429                           ; BSR set to: 0
  2430                           ;lcd_functions.c: 656: { LCDGotoXY(0,0); LCDWriteString(" Kan            ");};
  2431  0014C4  0E00               	movlw	0
  2432  0014C6  6E46               	movwf	LCDGotoXY@y,c
  2433  0014C8  0E00               	movlw	0
  2434  0014CA  EC6F  F00D         	call	_LCDGotoXY
  2435  0014CE  0EB0               	movlw	low STR_66
  2436  0014D0  6E46               	movwf	LCDWriteString@msg,c
  2437  0014D2  0E7E               	movlw	high STR_66
  2438  0014D4  6E47               	movwf	LCDWriteString@msg+1,c
  2439  0014D6  ECD3  F009         	call	_LCDWriteString	;wreg free
  2440                           
  2441                           ;lcd_functions.c: 657: { LCDGotoXY(0,1); LCDWriteString(" niet vinden    ");};
  2442  0014DA  0E01               	movlw	1
  2443  0014DC  6E46               	movwf	LCDGotoXY@y,c
  2444  0014DE  0E00               	movlw	0
  2445  0014E0  EC6F  F00D         	call	_LCDGotoXY
  2446  0014E4  0E05               	movlw	low STR_67
  2447  0014E6  6E46               	movwf	LCDWriteString@msg,c
  2448  0014E8  0E7F               	movlw	high STR_67
  2449  0014EA  6E47               	movwf	LCDWriteString@msg+1,c
  2450  0014EC  ECD3  F009         	call	_LCDWriteString	;wreg free
  2451                           
  2452                           ;lcd_functions.c: 658: switch(mmOld) {
  2453  0014F0  D018               	goto	l5665
  2454  0014F2                     l5655:
  2455                           
  2456                           ;lcd_functions.c: 660: { LCDGotoXY(5,0); LCDWriteString("Anoucka    ");};
  2457  0014F2  0E00               	movlw	0
  2458  0014F4  6E46               	movwf	LCDGotoXY@y,c
  2459  0014F6  0E05               	movlw	5
  2460  0014F8  EC6F  F00D         	call	_LCDGotoXY
  2461  0014FC  0E55               	movlw	low STR_68
  2462  0014FE  6E46               	movwf	LCDWriteString@msg,c
  2463  001500  0E7F               	movlw	high STR_68
  2464  001502  6E47               	movwf	LCDWriteString@msg+1,c
  2465  001504  ECD3  F009         	call	_LCDWriteString	;wreg free
  2466                           
  2467                           ;lcd_functions.c: 661: break;
  2468  001508  D02B               	goto	l5673
  2469  00150A                     l5659:
  2470                           
  2471                           ;lcd_functions.c: 664: { LCDGotoXY(5,0); LCDWriteString("Penny      ");};
  2472  00150A  0E00               	movlw	0
  2473  00150C  6E46               	movwf	LCDGotoXY@y,c
  2474  00150E  0E05               	movlw	5
  2475  001510  EC6F  F00D         	call	_LCDGotoXY
  2476  001514  0E49               	movlw	low STR_69
  2477  001516  6E46               	movwf	LCDWriteString@msg,c
  2478  001518  0E7F               	movlw	high STR_69
  2479  00151A  6E47               	movwf	LCDWriteString@msg+1,c
  2480  00151C  ECD3  F009         	call	_LCDWriteString	;wreg free
  2481                           
  2482                           ;lcd_functions.c: 669: }
  2483                           
  2484                           ;lcd_functions.c: 668: break;
  2485                           
  2486                           ;lcd_functions.c: 667: default:
  2487                           
  2488                           ;lcd_functions.c: 665: break;
  2489  001520  D01F               	goto	l5673
  2490  001522                     l5665:
  2491  001522  5049               	movf	lcd_time_out@mmOld,w,c
  2492                           
  2493                           ; Switch size 1, requested type "space"
  2494                           ; Number of cases is 2, Range of values is 1 to 2
  2495                           ; switch strategies available:
  2496                           ; Name         Instructions Cycles
  2497                           ; simple_byte            7     4 (average)
  2498                           ;	Chosen strategy is simple_byte
  2499  001524  0A01               	xorlw	1	; case 1
  2500  001526  B4D8               	btfsc	status,2,c
  2501  001528  D7E4               	goto	l5655
  2502  00152A  0A03               	xorlw	3	; case 2
  2503  00152C  B4D8               	btfsc	status,2,c
  2504  00152E  D7ED               	goto	l5659
  2505                           
  2506                           ;lcd_functions.c: 670: } else {
  2507  001530  D017               	goto	l5673
  2508  001532                     l5667:
  2509                           
  2510                           ;lcd_functions.c: 671: { LCDGotoXY(0,0); LCDWriteString("Druk OK om weer ");};
  2511  001532  0E00               	movlw	0
  2512  001534  6E46               	movwf	LCDGotoXY@y,c
  2513  001536  0E00               	movlw	0
  2514  001538  EC6F  F00D         	call	_LCDGotoXY
  2515  00153C  0E38               	movlw	low STR_70
  2516  00153E  6E46               	movwf	LCDWriteString@msg,c
  2517  001540  0E7F               	movlw	high STR_70
  2518  001542  6E47               	movwf	LCDWriteString@msg+1,c
  2519  001544  ECD3  F009         	call	_LCDWriteString	;wreg free
  2520                           
  2521                           ;lcd_functions.c: 672: { LCDGotoXY(0,1); LCDWriteString("te zoeken...    ");};
  2522  001548  0E01               	movlw	1
  2523  00154A  6E46               	movwf	LCDGotoXY@y,c
  2524  00154C  0E00               	movlw	0
  2525  00154E  EC6F  F00D         	call	_LCDGotoXY
  2526  001552  0EF4               	movlw	low STR_71
  2527  001554  6E46               	movwf	LCDWriteString@msg,c
  2528  001556  0E7E               	movlw	high STR_71
  2529  001558  6E47               	movwf	LCDWriteString@msg+1,c
  2530  00155A  ECD3  F009         	call	_LCDWriteString	;wreg free
  2531  00155E  D000               	goto	l5673
  2532  001560                     l5673:
  2533                           
  2534                           ;lcd_functions.c: 673: }
  2535                           ;lcd_functions.c: 674: j ^= 1;
  2536  001560  0E01               	movlw	1
  2537  001562  1A24               	xorwf	_j,f,c
  2538                           
  2539                           ;lcd_functions.c: 675: scrs_cnt = 0;
  2540  001564  0E00               	movlw	0
  2541  001566  6E2A               	movwf	_scrs_cnt,c
  2542  001568  D000               	goto	l777
  2543  00156A                     l777:
  2544  00156A  0012               	return		;funcret
  2545  00156C                     __end_of_lcd_time_out:
  2546                           	opt stack 0
  2547                           tblptru	equ	0xFF8
  2548                           tblptrh	equ	0xFF7
  2549                           tblptrl	equ	0xFF6
  2550                           tablat	equ	0xFF5
  2551                           prodh	equ	0xFF4
  2552                           prodl	equ	0xFF3
  2553                           intcon	equ	0xFF2
  2554                           postinc0	equ	0xFEE
  2555                           wreg	equ	0xFE8
  2556                           postdec1	equ	0xFE5
  2557                           fsr1l	equ	0xFE1
  2558                           status	equ	0xFD8
  2559                           
  2560 ;; *************** function _lcd_start_up *****************
  2561 ;; Defined at:
  2562 ;;		line 546 in file "lcd_functions.c"
  2563 ;; Parameters:    Size  Location     Type
  2564 ;;		None
  2565 ;; Auto vars:     Size  Location     Type
  2566 ;;  start           6    0[BANK0 ] unsigned char [6]
  2567 ;;  st              2    8[BANK0 ] PTR const unsigned char 
  2568 ;;		 -> lcd_start_up@start(6), 
  2569 ;;  x_pos           1    7[BANK0 ] unsigned char 
  2570 ;;  busy            1    6[BANK0 ] unsigned char 
  2571 ;; Return value:  Size  Location     Type
  2572 ;;		None               void
  2573 ;; Registers used:
  2574 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2575 ;; Tracked objects:
  2576 ;;		On entry : 0/0
  2577 ;;		On exit  : 0/0
  2578 ;;		Unchanged: 0/0
  2579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2580 ;;      Params:         0       0       0       0       0       0       0       0       0
  2581 ;;      Locals:         0      10       0       0       0       0       0       0       0
  2582 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2583 ;;      Totals:         0      10       0       0       0       0       0       0       0
  2584 ;;Total ram usage:       10 bytes
  2585 ;; Hardware stack levels used:    1
  2586 ;; Hardware stack levels required when called:    4
  2587 ;; This function calls:
  2588 ;;		_LCDByte
  2589 ;;		_LCDGotoXY
  2590 ;;		_LCDWriteString
  2591 ;;		__delay_10ms
  2592 ;; This function is called by:
  2593 ;;		_main
  2594 ;; This function uses a non-reentrant model
  2595 ;;
  2596                           
  2597                           	psect	text3
  2598  0016CC                     __ptext3:
  2599                           	opt stack 0
  2600  0016CC                     _lcd_start_up:
  2601                           	opt stack 26
  2602                           
  2603                           ;lcd_functions.c: 547: unsigned char busy = 1;
  2604                           
  2605                           ;incstack = 0
  2606  0016CC  0E01               	movlw	1
  2607  0016CE  0100               	movlb	0	; () banked
  2608  0016D0  6F9A               	movwf	lcd_start_up@busy& (0+255),b
  2609                           
  2610                           ;lcd_functions.c: 548: unsigned char x_pos = 0;
  2611  0016D2  0E00               	movlw	0
  2612  0016D4  0100               	movlb	0	; () banked
  2613  0016D6  6F9B               	movwf	lcd_start_up@x_pos& (0+255),b
  2614                           
  2615                           ; BSR set to: 0
  2616                           ;lcd_functions.c: 549: unsigned char start[] = "Waldo";
  2617  0016D8  EE20  F08E         	lfsr	2,lcd_start_up@F5048
  2618  0016DC  EE10  F094         	lfsr	1,lcd_start_up@start
  2619  0016E0  0E05               	movlw	5
  2620  0016E2                     u4561:
  2621  0016E2  CFDB FFE3          	movff	plusw2,plusw1
  2622  0016E6  06E8               	decf	wreg,f,c
  2623  0016E8  E2FC               	bc	u4561
  2624                           
  2625                           ; BSR set to: 0
  2626                           ;lcd_functions.c: 550: const char *st = start;
  2627  0016EA  0E94               	movlw	low lcd_start_up@start
  2628  0016EC  0100               	movlb	0	; () banked
  2629  0016EE  6F9C               	movwf	lcd_start_up@st& (0+255),b
  2630  0016F0  0E00               	movlw	high lcd_start_up@start
  2631  0016F2  0100               	movlb	0	; () banked
  2632  0016F4  6F9D               	movwf	(lcd_start_up@st+1)& (0+255),b
  2633                           
  2634                           ;lcd_functions.c: 551: while (busy) {
  2635  0016F6  D02D               	goto	l731
  2636  0016F8                     l5629:
  2637                           
  2638                           ; BSR set to: 0
  2639                           ;lcd_functions.c: 552: (LCDByte(0b00000001,0));
  2640  0016F8  0E00               	movlw	0
  2641  0016FA  6E40               	movwf	LCDByte@isdata,c
  2642  0016FC  0E01               	movlw	1
  2643  0016FE  ECB1  F00C         	call	_LCDByte
  2644                           
  2645                           ;lcd_functions.c: 553: { LCDGotoXY(x_pos,0); LCDWriteString(st);};
  2646  001702  0E00               	movlw	0
  2647  001704  6E46               	movwf	LCDGotoXY@y,c
  2648  001706  0100               	movlb	0	; () banked
  2649  001708  519B               	movf	lcd_start_up@x_pos& (0+255),w,b
  2650  00170A  EC6F  F00D         	call	_LCDGotoXY
  2651  00170E  C09C  F046         	movff	lcd_start_up@st,LCDWriteString@msg
  2652  001712  C09D  F047         	movff	lcd_start_up@st+1,LCDWriteString@msg+1
  2653  001716  ECD3  F009         	call	_LCDWriteString	;wreg free
  2654                           
  2655                           ;lcd_functions.c: 554: st++;
  2656  00171A  0100               	movlb	0	; () banked
  2657  00171C  4B9C               	infsnz	lcd_start_up@st& (0+255),f,b
  2658  00171E  2B9D               	incf	(lcd_start_up@st+1)& (0+255),f,b
  2659                           
  2660                           ; BSR set to: 0
  2661                           ;lcd_functions.c: 556: if (*st == '\0') {
  2662  001720  C09C  FFD9         	movff	lcd_start_up@st,fsr2l
  2663  001724  C09D  FFDA         	movff	lcd_start_up@st+1,fsr2h
  2664  001728  50DF               	movf	indf2,w,c
  2665  00172A  A4D8               	btfss	status,2,c
  2666  00172C  D00C               	goto	l5641
  2667                           
  2668                           ; BSR set to: 0
  2669                           ;lcd_functions.c: 557: busy = 0;
  2670  00172E  0E00               	movlw	0
  2671  001730  0100               	movlb	0	; () banked
  2672  001732  6F9A               	movwf	lcd_start_up@busy& (0+255),b
  2673                           
  2674                           ;lcd_functions.c: 558: x_pos = 0;
  2675  001734  0E00               	movlw	0
  2676  001736  0100               	movlb	0	; () banked
  2677  001738  6F9B               	movwf	lcd_start_up@x_pos& (0+255),b
  2678                           
  2679                           ; BSR set to: 0
  2680                           ;lcd_functions.c: 559: (LCDByte(0b00000001,0));
  2681  00173A  0E00               	movlw	0
  2682  00173C  6E40               	movwf	LCDByte@isdata,c
  2683  00173E  0E01               	movlw	1
  2684  001740  ECB1  F00C         	call	_LCDByte
  2685  001744  D000               	goto	l5641
  2686  001746                     l5641:
  2687                           
  2688                           ;lcd_functions.c: 560: }
  2689                           ;lcd_functions.c: 561: _delay_10ms(50);
  2690  001746  0E00               	movlw	0
  2691  001748  6E3E               	movwf	__delay_10ms@length+1,c
  2692  00174A  0E32               	movlw	50
  2693  00174C  6E3D               	movwf	__delay_10ms@length,c
  2694  00174E  ECDA  F00D         	call	__delay_10ms	;wreg free
  2695  001752                     l731:
  2696  001752  0100               	movlb	0	; () banked
  2697  001754  519A               	movf	lcd_start_up@busy& (0+255),w,b
  2698  001756  0100               	movlb	0	; () banked
  2699  001758  A4D8               	btfss	status,2,c
  2700  00175A  D7CE               	goto	l5629
  2701                           
  2702                           ; BSR set to: 0
  2703                           
  2704                           ; BSR set to: 0
  2705  00175C  0012               	return		;funcret
  2706  00175E                     __end_of_lcd_start_up:
  2707                           	opt stack 0
  2708                           tblptru	equ	0xFF8
  2709                           tblptrh	equ	0xFF7
  2710                           tblptrl	equ	0xFF6
  2711                           tablat	equ	0xFF5
  2712                           prodh	equ	0xFF4
  2713                           prodl	equ	0xFF3
  2714                           intcon	equ	0xFF2
  2715                           postinc0	equ	0xFEE
  2716                           wreg	equ	0xFE8
  2717                           postdec1	equ	0xFE5
  2718                           plusw1	equ	0xFE3
  2719                           fsr1l	equ	0xFE1
  2720                           indf2	equ	0xFDF
  2721                           plusw2	equ	0xFDB
  2722                           fsr2h	equ	0xFDA
  2723                           fsr2l	equ	0xFD9
  2724                           status	equ	0xFD8
  2725                           
  2726 ;; *************** function __delay_10ms *****************
  2727 ;; Defined at:
  2728 ;;		line 81 in file "lcd_hd44780.c"
  2729 ;; Parameters:    Size  Location     Type
  2730 ;;  length          2   14[COMRAM] int 
  2731 ;; Auto vars:     Size  Location     Type
  2732 ;;		None
  2733 ;; Return value:  Size  Location     Type
  2734 ;;		None               void
  2735 ;; Registers used:
  2736 ;;		wreg, status,2, status,0
  2737 ;; Tracked objects:
  2738 ;;		On entry : 0/0
  2739 ;;		On exit  : 0/0
  2740 ;;		Unchanged: 0/0
  2741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2742 ;;      Params:         2       0       0       0       0       0       0       0       0
  2743 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2744 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2745 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2746 ;;Total ram usage:        3 bytes
  2747 ;; Hardware stack levels used:    1
  2748 ;; Hardware stack levels required when called:    1
  2749 ;; This function calls:
  2750 ;;		Nothing
  2751 ;; This function is called by:
  2752 ;;		_lcd_start_up
  2753 ;;		_LCDWriteSmartString
  2754 ;; This function uses a non-reentrant model
  2755 ;;
  2756                           
  2757                           	psect	text4
  2758  001BB4                     __ptext4:
  2759                           	opt stack 0
  2760  001BB4                     __delay_10ms:
  2761                           	opt stack 28
  2762                           
  2763                           ;lcd_hd44780.c: 82: while(length){
  2764                           
  2765                           ; BSR set to: 0
  2766                           ;incstack = 0
  2767  001BB4  D00B               	goto	l119
  2768  001BB6                     l5043:
  2769                           
  2770                           ;lcd_hd44780.c: 83: _delay((unsigned long)((10)*(48000000/4000.0)));
  2771  001BB6  0E9C               	movlw	156
  2772  001BB8  6E3F               	movwf	??__delay_10ms& (0+255),c
  2773  001BBA  0ED7               	movlw	215
  2774  001BBC                     u4957:
  2775  001BBC  2EE8               	decfsz	wreg,f,c
  2776  001BBE  D7FE               	goto	u4957
  2777  001BC0  2E3F               	decfsz	??__delay_10ms& (0+255),f,c
  2778  001BC2  D7FC               	goto	u4957
  2779  001BC4  F000               	nop	
  2780                           
  2781                           ;lcd_hd44780.c: 84: length--;
  2782  001BC6  063D               	decf	__delay_10ms@length,f,c
  2783  001BC8  A0D8               	btfss	status,0,c
  2784  001BCA  063E               	decf	__delay_10ms@length+1,f,c
  2785  001BCC                     l119:
  2786  001BCC  503D               	movf	__delay_10ms@length,w,c
  2787  001BCE  103E               	iorwf	__delay_10ms@length+1,w,c
  2788  001BD0  A4D8               	btfss	status,2,c
  2789  001BD2  D7F1               	goto	l5043
  2790  001BD4  0012               	return		;funcret
  2791  001BD6                     __end_of__delay_10ms:
  2792                           	opt stack 0
  2793                           tblptru	equ	0xFF8
  2794                           tblptrh	equ	0xFF7
  2795                           tblptrl	equ	0xFF6
  2796                           tablat	equ	0xFF5
  2797                           prodh	equ	0xFF4
  2798                           prodl	equ	0xFF3
  2799                           intcon	equ	0xFF2
  2800                           postinc0	equ	0xFEE
  2801                           wreg	equ	0xFE8
  2802                           postdec1	equ	0xFE5
  2803                           plusw1	equ	0xFE3
  2804                           fsr1l	equ	0xFE1
  2805                           indf2	equ	0xFDF
  2806                           plusw2	equ	0xFDB
  2807                           fsr2h	equ	0xFDA
  2808                           fsr2l	equ	0xFD9
  2809                           status	equ	0xFD8
  2810                           
  2811 ;; *************** function _lcd_main_menu_fsm *****************
  2812 ;; Defined at:
  2813 ;;		line 19 in file "lcd_functions.c"
  2814 ;; Parameters:    Size  Location     Type
  2815 ;;  mmOld           1    wreg     unsigned char 
  2816 ;; Auto vars:     Size  Location     Type
  2817 ;;  mmOld           1   13[BANK0 ] unsigned char 
  2818 ;; Return value:  Size  Location     Type
  2819 ;;		None               void
  2820 ;; Registers used:
  2821 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2822 ;; Tracked objects:
  2823 ;;		On entry : 0/0
  2824 ;;		On exit  : 0/0
  2825 ;;		Unchanged: 0/0
  2826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2827 ;;      Params:         0       0       0       0       0       0       0       0       0
  2828 ;;      Locals:         0       1       0       0       0       0       0       0       0
  2829 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2830 ;;      Totals:         0       1       0       0       0       0       0       0       0
  2831 ;;Total ram usage:        1 bytes
  2832 ;; Hardware stack levels used:    1
  2833 ;; Hardware stack levels required when called:    6
  2834 ;; This function calls:
  2835 ;;		_SerialTransmit
  2836 ;;		_lcd_sub_menu_lcd
  2837 ;;		_lcd_sub_menu_metronoom
  2838 ;;		_lcd_sub_menu_tetten
  2839 ;;		_lcd_update
  2840 ;; This function is called by:
  2841 ;;		_main
  2842 ;; This function uses a non-reentrant model
  2843 ;;
  2844                           
  2845                           	psect	text5
  2846  00038E                     __ptext5:
  2847                           	opt stack 0
  2848  00038E                     _lcd_main_menu_fsm:
  2849                           	opt stack 24
  2850                           
  2851                           ;incstack = 0
  2852                           ;lcd_main_menu_fsm@mmOld stored from wreg
  2853  00038E  0100               	movlb	0	; () banked
  2854  000390  6FA1               	movwf	lcd_main_menu_fsm@mmOld& (0+255),b
  2855                           
  2856                           ; BSR set to: 0
  2857                           ;lcd_functions.c: 20: switch (main_menu_old) {
  2858  000392  D163               	goto	l5621
  2859                           
  2860                           ; BSR set to: 0
  2861                           ;lcd_functions.c: 22: switch (inputs) {
  2862                           
  2863                           ;lcd_functions.c: 21: case mmMENU:
  2864  000394  D015               	goto	l5449
  2865  000396                     l5433:
  2866                           
  2867                           ;lcd_functions.c: 24: if (main_menu_old > 0)
  2868  000396  5026               	movf	_main_menu_old,w,c
  2869  000398  B4D8               	btfsc	status,2,c
  2870  00039A  D002               	goto	l5437
  2871                           
  2872                           ;lcd_functions.c: 25: main_menu_new--;
  2873  00039C  0625               	decf	_main_menu_new,f,c
  2874  00039E  D000               	goto	l5437
  2875  0003A0                     l5437:
  2876                           
  2877                           ;lcd_functions.c: 26: lcd_update();
  2878  0003A0  EC9F  F004         	call	_lcd_update	;wreg free
  2879                           
  2880                           ;lcd_functions.c: 27: break;
  2881  0003A4  D179               	goto	l509
  2882  0003A6                     l5439:
  2883                           
  2884                           ;lcd_functions.c: 29: if (main_menu_old < 6)
  2885  0003A6  0E06               	movlw	6
  2886  0003A8  6026               	cpfslt	_main_menu_old,c
  2887  0003AA  D002               	goto	l5443
  2888                           
  2889                           ;lcd_functions.c: 30: main_menu_new++;
  2890  0003AC  2A25               	incf	_main_menu_new,f,c
  2891  0003AE  D000               	goto	l5443
  2892  0003B0                     l5443:
  2893                           
  2894                           ;lcd_functions.c: 31: lcd_update();
  2895  0003B0  EC9F  F004         	call	_lcd_update	;wreg free
  2896                           
  2897                           ;lcd_functions.c: 34: break;
  2898                           
  2899                           ;lcd_functions.c: 33: case 0x04:
  2900                           
  2901                           ;lcd_functions.c: 32: break;
  2902  0003B4  D171               	goto	l509
  2903  0003B6                     l507:
  2904                           
  2905                           ;lcd_functions.c: 36: {fsm_new_state = mmOld;lcd_update();};
  2906  0003B6  C0A1  F01E         	movff	lcd_main_menu_fsm@mmOld,_fsm_new_state
  2907  0003BA  EC9F  F004         	call	_lcd_update	;wreg free
  2908                           
  2909                           ;lcd_functions.c: 40: }
  2910                           
  2911                           ;lcd_functions.c: 39: break;
  2912                           
  2913                           ;lcd_functions.c: 38: default:
  2914                           
  2915                           ;lcd_functions.c: 37: break;
  2916  0003BE  D16C               	goto	l509
  2917  0003C0                     l5449:
  2918  0003C0  5023               	movf	_inputs,w,c
  2919                           
  2920                           ; Switch size 1, requested type "space"
  2921                           ; Number of cases is 4, Range of values is 1 to 8
  2922                           ; switch strategies available:
  2923                           ; Name         Instructions Cycles
  2924                           ; simple_byte           13     7 (average)
  2925                           ;	Chosen strategy is simple_byte
  2926  0003C2  0A01               	xorlw	1	; case 1
  2927  0003C4  B4D8               	btfsc	status,2,c
  2928  0003C6  D7EF               	goto	l5439
  2929  0003C8  0A03               	xorlw	3	; case 2
  2930  0003CA  B4D8               	btfsc	status,2,c
  2931  0003CC  D7E4               	goto	l5433
  2932  0003CE  0A06               	xorlw	6	; case 4
  2933  0003D0  B4D8               	btfsc	status,2,c
  2934  0003D2  D162               	goto	l509
  2935  0003D4  0A0C               	xorlw	12	; case 8
  2936  0003D6  B4D8               	btfsc	status,2,c
  2937  0003D8  D7EE               	goto	l507
  2938                           
  2939                           ;lcd_functions.c: 41: break;
  2940  0003DA  D15E               	goto	l509
  2941                           
  2942                           ;lcd_functions.c: 44: switch (inputs) {
  2943                           
  2944                           ;lcd_functions.c: 43: case mmRESET:
  2945  0003DC  D01B               	goto	l5473
  2946  0003DE                     l5451:
  2947                           
  2948                           ;lcd_functions.c: 46: if (main_menu_old > 0)
  2949  0003DE  5026               	movf	_main_menu_old,w,c
  2950  0003E0  B4D8               	btfsc	status,2,c
  2951  0003E2  D002               	goto	l5455
  2952                           
  2953                           ;lcd_functions.c: 47: main_menu_new--;
  2954  0003E4  0625               	decf	_main_menu_new,f,c
  2955  0003E6  D000               	goto	l5455
  2956  0003E8                     l5455:
  2957                           
  2958                           ;lcd_functions.c: 48: lcd_update();
  2959  0003E8  EC9F  F004         	call	_lcd_update	;wreg free
  2960                           
  2961                           ;lcd_functions.c: 49: break;
  2962  0003EC  D155               	goto	l509
  2963  0003EE                     l5457:
  2964                           
  2965                           ;lcd_functions.c: 51: if (main_menu_old < 6)
  2966  0003EE  0E06               	movlw	6
  2967  0003F0  6026               	cpfslt	_main_menu_old,c
  2968  0003F2  D002               	goto	l5461
  2969                           
  2970                           ;lcd_functions.c: 52: main_menu_new++;
  2971  0003F4  2A25               	incf	_main_menu_new,f,c
  2972  0003F6  D000               	goto	l5461
  2973  0003F8                     l5461:
  2974                           
  2975                           ;lcd_functions.c: 53: lcd_update();
  2976  0003F8  EC9F  F004         	call	_lcd_update	;wreg free
  2977                           
  2978                           ;lcd_functions.c: 54: break;
  2979  0003FC  D14D               	goto	l509
  2980  0003FE                     l5463:
  2981                           
  2982                           ;lcd_functions.c: 56: {fsm_new_state = lINIT;lcd_update();};
  2983  0003FE  0E00               	movlw	0
  2984  000400  6E1E               	movwf	_fsm_new_state,c
  2985  000402  EC9F  F004         	call	_lcd_update	;wreg free
  2986                           
  2987                           ;lcd_functions.c: 57: (PORTAbits.RA5 = 0);
  2988  000406  9A80               	bcf	3968,5,c	;volatile
  2989                           
  2990                           ;lcd_functions.c: 58: break;
  2991  000408  D147               	goto	l509
  2992  00040A                     l518:
  2993                           
  2994                           ;lcd_functions.c: 60: {fsm_new_state = mmOld;lcd_update();};
  2995  00040A  C0A1  F01E         	movff	lcd_main_menu_fsm@mmOld,_fsm_new_state
  2996  00040E  EC9F  F004         	call	_lcd_update	;wreg free
  2997                           
  2998                           ;lcd_functions.c: 64: }
  2999                           
  3000                           ;lcd_functions.c: 63: break;
  3001                           
  3002                           ;lcd_functions.c: 62: default:
  3003                           
  3004                           ;lcd_functions.c: 61: break;
  3005  000412  D142               	goto	l509
  3006  000414                     l5473:
  3007  000414  5023               	movf	_inputs,w,c
  3008                           
  3009                           ; Switch size 1, requested type "space"
  3010                           ; Number of cases is 4, Range of values is 1 to 8
  3011                           ; switch strategies available:
  3012                           ; Name         Instructions Cycles
  3013                           ; simple_byte           13     7 (average)
  3014                           ;	Chosen strategy is simple_byte
  3015  000416  0A01               	xorlw	1	; case 1
  3016  000418  B4D8               	btfsc	status,2,c
  3017  00041A  D7E9               	goto	l5457
  3018  00041C  0A03               	xorlw	3	; case 2
  3019  00041E  B4D8               	btfsc	status,2,c
  3020  000420  D7DE               	goto	l5451
  3021  000422  0A06               	xorlw	6	; case 4
  3022  000424  B4D8               	btfsc	status,2,c
  3023  000426  D7EB               	goto	l5463
  3024  000428  0A0C               	xorlw	12	; case 8
  3025  00042A  B4D8               	btfsc	status,2,c
  3026  00042C  D7EE               	goto	l518
  3027                           
  3028                           ;lcd_functions.c: 65: break;
  3029  00042E  D134               	goto	l509
  3030                           
  3031                           ;lcd_functions.c: 68: switch (inputs) {
  3032                           
  3033                           ;lcd_functions.c: 67: case mmSTEMMEN:
  3034  000430  D015               	goto	l5491
  3035  000432                     l5475:
  3036                           
  3037                           ;lcd_functions.c: 70: if (main_menu_old > 0)
  3038  000432  5026               	movf	_main_menu_old,w,c
  3039  000434  B4D8               	btfsc	status,2,c
  3040  000436  D002               	goto	l5479
  3041                           
  3042                           ;lcd_functions.c: 71: main_menu_new--;
  3043  000438  0625               	decf	_main_menu_new,f,c
  3044  00043A  D000               	goto	l5479
  3045  00043C                     l5479:
  3046                           
  3047                           ;lcd_functions.c: 72: lcd_update();
  3048  00043C  EC9F  F004         	call	_lcd_update	;wreg free
  3049                           
  3050                           ;lcd_functions.c: 73: break;
  3051  000440  D12B               	goto	l509
  3052  000442                     l5481:
  3053                           
  3054                           ;lcd_functions.c: 75: if (main_menu_old < 6)
  3055  000442  0E06               	movlw	6
  3056  000444  6026               	cpfslt	_main_menu_old,c
  3057  000446  D002               	goto	l5485
  3058                           
  3059                           ;lcd_functions.c: 76: main_menu_new++;
  3060  000448  2A25               	incf	_main_menu_new,f,c
  3061  00044A  D000               	goto	l5485
  3062  00044C                     l5485:
  3063                           
  3064                           ;lcd_functions.c: 77: lcd_update();
  3065  00044C  EC9F  F004         	call	_lcd_update	;wreg free
  3066                           
  3067                           ;lcd_functions.c: 80: break;
  3068                           
  3069                           ;lcd_functions.c: 79: case 0x04:
  3070                           
  3071                           ;lcd_functions.c: 78: break;
  3072  000450  D123               	goto	l509
  3073  000452                     l528:
  3074                           
  3075                           ;lcd_functions.c: 82: {fsm_new_state = mmOld;lcd_update();};
  3076  000452  C0A1  F01E         	movff	lcd_main_menu_fsm@mmOld,_fsm_new_state
  3077  000456  EC9F  F004         	call	_lcd_update	;wreg free
  3078                           
  3079                           ;lcd_functions.c: 86: }
  3080                           
  3081                           ;lcd_functions.c: 85: break;
  3082                           
  3083                           ;lcd_functions.c: 84: default:
  3084                           
  3085                           ;lcd_functions.c: 83: break;
  3086  00045A  D11E               	goto	l509
  3087  00045C                     l5491:
  3088  00045C  5023               	movf	_inputs,w,c
  3089                           
  3090                           ; Switch size 1, requested type "space"
  3091                           ; Number of cases is 4, Range of values is 1 to 8
  3092                           ; switch strategies available:
  3093                           ; Name         Instructions Cycles
  3094                           ; simple_byte           13     7 (average)
  3095                           ;	Chosen strategy is simple_byte
  3096  00045E  0A01               	xorlw	1	; case 1
  3097  000460  B4D8               	btfsc	status,2,c
  3098  000462  D7EF               	goto	l5481
  3099  000464  0A03               	xorlw	3	; case 2
  3100  000466  B4D8               	btfsc	status,2,c
  3101  000468  D7E4               	goto	l5475
  3102  00046A  0A06               	xorlw	6	; case 4
  3103  00046C  B4D8               	btfsc	status,2,c
  3104  00046E  D114               	goto	l509
  3105  000470  0A0C               	xorlw	12	; case 8
  3106  000472  B4D8               	btfsc	status,2,c
  3107  000474  D7EE               	goto	l528
  3108                           
  3109                           ;lcd_functions.c: 87: break;
  3110  000476  D110               	goto	l509
  3111                           
  3112                           ;lcd_functions.c: 90: switch (inputs) {
  3113                           
  3114                           ;lcd_functions.c: 89: case mmMETRONOOM:
  3115  000478  D01C               	goto	l5515
  3116  00047A                     l5493:
  3117                           
  3118                           ;lcd_functions.c: 92: if (main_menu_old > 0)
  3119  00047A  5026               	movf	_main_menu_old,w,c
  3120  00047C  B4D8               	btfsc	status,2,c
  3121  00047E  D002               	goto	l5497
  3122                           
  3123                           ;lcd_functions.c: 93: main_menu_new--;
  3124  000480  0625               	decf	_main_menu_new,f,c
  3125  000482  D000               	goto	l5497
  3126  000484                     l5497:
  3127                           
  3128                           ;lcd_functions.c: 94: lcd_update();
  3129  000484  EC9F  F004         	call	_lcd_update	;wreg free
  3130                           
  3131                           ;lcd_functions.c: 95: break;
  3132  000488  D107               	goto	l509
  3133  00048A                     l5499:
  3134                           
  3135                           ;lcd_functions.c: 97: if (main_menu_old < 6)
  3136  00048A  0E06               	movlw	6
  3137  00048C  6026               	cpfslt	_main_menu_old,c
  3138  00048E  D002               	goto	l5503
  3139                           
  3140                           ;lcd_functions.c: 98: main_menu_new++;
  3141  000490  2A25               	incf	_main_menu_new,f,c
  3142  000492  D000               	goto	l5503
  3143  000494                     l5503:
  3144                           
  3145                           ;lcd_functions.c: 99: lcd_update();
  3146  000494  EC9F  F004         	call	_lcd_update	;wreg free
  3147                           
  3148                           ;lcd_functions.c: 100: break;
  3149  000498  D0FF               	goto	l509
  3150  00049A                     l5505:
  3151                           
  3152                           ;lcd_functions.c: 102: {main_menu_new = mmMETRONOOMsm;lcd_update();};
  3153  00049A  0E07               	movlw	7
  3154  00049C  6E25               	movwf	_main_menu_new,c
  3155  00049E  EC9F  F004         	call	_lcd_update	;wreg free
  3156                           
  3157                           ;lcd_functions.c: 103: send = 1;
  3158  0004A2  0E01               	movlw	1
  3159  0004A4  6E2B               	movwf	_send,c
  3160                           
  3161                           ;lcd_functions.c: 104: break;
  3162  0004A6  D0F8               	goto	l509
  3163  0004A8                     l538:
  3164                           
  3165                           ;lcd_functions.c: 106: {fsm_new_state = mmOld;lcd_update();};
  3166  0004A8  C0A1  F01E         	movff	lcd_main_menu_fsm@mmOld,_fsm_new_state
  3167  0004AC  EC9F  F004         	call	_lcd_update	;wreg free
  3168                           
  3169                           ;lcd_functions.c: 110: }
  3170                           
  3171                           ;lcd_functions.c: 109: break;
  3172                           
  3173                           ;lcd_functions.c: 108: default:
  3174                           
  3175                           ;lcd_functions.c: 107: break;
  3176  0004B0  D0F3               	goto	l509
  3177  0004B2                     l5515:
  3178  0004B2  5023               	movf	_inputs,w,c
  3179                           
  3180                           ; Switch size 1, requested type "space"
  3181                           ; Number of cases is 4, Range of values is 1 to 8
  3182                           ; switch strategies available:
  3183                           ; Name         Instructions Cycles
  3184                           ; simple_byte           13     7 (average)
  3185                           ;	Chosen strategy is simple_byte
  3186  0004B4  0A01               	xorlw	1	; case 1
  3187  0004B6  B4D8               	btfsc	status,2,c
  3188  0004B8  D7E8               	goto	l5499
  3189  0004BA  0A03               	xorlw	3	; case 2
  3190  0004BC  B4D8               	btfsc	status,2,c
  3191  0004BE  D7DD               	goto	l5493
  3192  0004C0  0A06               	xorlw	6	; case 4
  3193  0004C2  B4D8               	btfsc	status,2,c
  3194  0004C4  D7EA               	goto	l5505
  3195  0004C6  0A0C               	xorlw	12	; case 8
  3196  0004C8  B4D8               	btfsc	status,2,c
  3197  0004CA  D7EE               	goto	l538
  3198                           
  3199                           ;lcd_functions.c: 111: break;
  3200  0004CC  D0E5               	goto	l509
  3201                           
  3202                           ;lcd_functions.c: 114: switch (inputs) {
  3203                           
  3204                           ;lcd_functions.c: 113: case mmMOPJE:
  3205  0004CE  D015               	goto	l5533
  3206  0004D0                     l5517:
  3207                           
  3208                           ;lcd_functions.c: 116: if (main_menu_old > 0)
  3209  0004D0  5026               	movf	_main_menu_old,w,c
  3210  0004D2  B4D8               	btfsc	status,2,c
  3211  0004D4  D002               	goto	l5521
  3212                           
  3213                           ;lcd_functions.c: 117: main_menu_new--;
  3214  0004D6  0625               	decf	_main_menu_new,f,c
  3215  0004D8  D000               	goto	l5521
  3216  0004DA                     l5521:
  3217                           
  3218                           ;lcd_functions.c: 118: lcd_update();
  3219  0004DA  EC9F  F004         	call	_lcd_update	;wreg free
  3220                           
  3221                           ;lcd_functions.c: 119: break;
  3222  0004DE  D0DC               	goto	l509
  3223  0004E0                     l5523:
  3224                           
  3225                           ;lcd_functions.c: 121: if (main_menu_old < 6)
  3226  0004E0  0E06               	movlw	6
  3227  0004E2  6026               	cpfslt	_main_menu_old,c
  3228  0004E4  D002               	goto	l5527
  3229                           
  3230                           ;lcd_functions.c: 122: main_menu_new++;
  3231  0004E6  2A25               	incf	_main_menu_new,f,c
  3232  0004E8  D000               	goto	l5527
  3233  0004EA                     l5527:
  3234                           
  3235                           ;lcd_functions.c: 123: lcd_update();
  3236  0004EA  EC9F  F004         	call	_lcd_update	;wreg free
  3237                           
  3238                           ;lcd_functions.c: 126: break;
  3239                           
  3240                           ;lcd_functions.c: 125: case 0x04:
  3241                           
  3242                           ;lcd_functions.c: 124: break;
  3243  0004EE  D0D4               	goto	l509
  3244  0004F0                     l548:
  3245                           
  3246                           ;lcd_functions.c: 128: {fsm_new_state = mmOld;lcd_update();};
  3247  0004F0  C0A1  F01E         	movff	lcd_main_menu_fsm@mmOld,_fsm_new_state
  3248  0004F4  EC9F  F004         	call	_lcd_update	;wreg free
  3249                           
  3250                           ;lcd_functions.c: 132: }
  3251                           
  3252                           ;lcd_functions.c: 131: break;
  3253                           
  3254                           ;lcd_functions.c: 130: default:
  3255                           
  3256                           ;lcd_functions.c: 129: break;
  3257  0004F8  D0CF               	goto	l509
  3258  0004FA                     l5533:
  3259  0004FA  5023               	movf	_inputs,w,c
  3260                           
  3261                           ; Switch size 1, requested type "space"
  3262                           ; Number of cases is 4, Range of values is 1 to 8
  3263                           ; switch strategies available:
  3264                           ; Name         Instructions Cycles
  3265                           ; simple_byte           13     7 (average)
  3266                           ;	Chosen strategy is simple_byte
  3267  0004FC  0A01               	xorlw	1	; case 1
  3268  0004FE  B4D8               	btfsc	status,2,c
  3269  000500  D7EF               	goto	l5523
  3270  000502  0A03               	xorlw	3	; case 2
  3271  000504  B4D8               	btfsc	status,2,c
  3272  000506  D7E4               	goto	l5517
  3273  000508  0A06               	xorlw	6	; case 4
  3274  00050A  B4D8               	btfsc	status,2,c
  3275  00050C  D0C5               	goto	l509
  3276  00050E  0A0C               	xorlw	12	; case 8
  3277  000510  B4D8               	btfsc	status,2,c
  3278  000512  D7EE               	goto	l548
  3279                           
  3280                           ;lcd_functions.c: 133: break;
  3281  000514  D0C1               	goto	l509
  3282                           
  3283                           ;lcd_functions.c: 136: switch (inputs) {
  3284                           
  3285                           ;lcd_functions.c: 135: case mmTETTEN:
  3286  000516  D01A               	goto	l5555
  3287  000518                     l5535:
  3288                           
  3289                           ;lcd_functions.c: 138: if (main_menu_old > 0)
  3290  000518  5026               	movf	_main_menu_old,w,c
  3291  00051A  B4D8               	btfsc	status,2,c
  3292  00051C  D002               	goto	l5539
  3293                           
  3294                           ;lcd_functions.c: 139: main_menu_new--;
  3295  00051E  0625               	decf	_main_menu_new,f,c
  3296  000520  D000               	goto	l5539
  3297  000522                     l5539:
  3298                           
  3299                           ;lcd_functions.c: 140: lcd_update();
  3300  000522  EC9F  F004         	call	_lcd_update	;wreg free
  3301                           
  3302                           ;lcd_functions.c: 141: break;
  3303  000526  D0B8               	goto	l509
  3304  000528                     l5541:
  3305                           
  3306                           ;lcd_functions.c: 143: if (main_menu_old < 6)
  3307  000528  0E06               	movlw	6
  3308  00052A  6026               	cpfslt	_main_menu_old,c
  3309  00052C  D002               	goto	l5545
  3310                           
  3311                           ;lcd_functions.c: 144: main_menu_new++;
  3312  00052E  2A25               	incf	_main_menu_new,f,c
  3313  000530  D000               	goto	l5545
  3314  000532                     l5545:
  3315                           
  3316                           ;lcd_functions.c: 145: lcd_update();
  3317  000532  EC9F  F004         	call	_lcd_update	;wreg free
  3318                           
  3319                           ;lcd_functions.c: 146: break;
  3320  000536  D0B0               	goto	l509
  3321  000538                     l5547:
  3322                           
  3323                           ;lcd_functions.c: 148: {main_menu_new = mmTETTENsm;lcd_update();};
  3324  000538  0E08               	movlw	8
  3325  00053A  6E25               	movwf	_main_menu_new,c
  3326  00053C  EC9F  F004         	call	_lcd_update	;wreg free
  3327                           
  3328                           ;lcd_functions.c: 149: break;
  3329  000540  D0AB               	goto	l509
  3330  000542                     l558:
  3331                           
  3332                           ;lcd_functions.c: 151: {fsm_new_state = mmOld;lcd_update();};
  3333  000542  C0A1  F01E         	movff	lcd_main_menu_fsm@mmOld,_fsm_new_state
  3334  000546  EC9F  F004         	call	_lcd_update	;wreg free
  3335                           
  3336                           ;lcd_functions.c: 155: }
  3337                           
  3338                           ;lcd_functions.c: 154: break;
  3339                           
  3340                           ;lcd_functions.c: 153: default:
  3341                           
  3342                           ;lcd_functions.c: 152: break;
  3343  00054A  D0A6               	goto	l509
  3344  00054C                     l5555:
  3345  00054C  5023               	movf	_inputs,w,c
  3346                           
  3347                           ; Switch size 1, requested type "space"
  3348                           ; Number of cases is 4, Range of values is 1 to 8
  3349                           ; switch strategies available:
  3350                           ; Name         Instructions Cycles
  3351                           ; simple_byte           13     7 (average)
  3352                           ;	Chosen strategy is simple_byte
  3353  00054E  0A01               	xorlw	1	; case 1
  3354  000550  B4D8               	btfsc	status,2,c
  3355  000552  D7EA               	goto	l5541
  3356  000554  0A03               	xorlw	3	; case 2
  3357  000556  B4D8               	btfsc	status,2,c
  3358  000558  D7DF               	goto	l5535
  3359  00055A  0A06               	xorlw	6	; case 4
  3360  00055C  B4D8               	btfsc	status,2,c
  3361  00055E  D7EC               	goto	l5547
  3362  000560  0A0C               	xorlw	12	; case 8
  3363  000562  B4D8               	btfsc	status,2,c
  3364  000564  D7EE               	goto	l558
  3365                           
  3366                           ;lcd_functions.c: 156: break;
  3367  000566  D098               	goto	l509
  3368                           
  3369                           ;lcd_functions.c: 159: switch (inputs) {
  3370                           
  3371                           ;lcd_functions.c: 158: case mmLCD:
  3372  000568  D01A               	goto	l5577
  3373  00056A                     l5557:
  3374                           
  3375                           ;lcd_functions.c: 161: if (main_menu_old > 0)
  3376  00056A  5026               	movf	_main_menu_old,w,c
  3377  00056C  B4D8               	btfsc	status,2,c
  3378  00056E  D002               	goto	l5561
  3379                           
  3380                           ;lcd_functions.c: 162: main_menu_new--;
  3381  000570  0625               	decf	_main_menu_new,f,c
  3382  000572  D000               	goto	l5561
  3383  000574                     l5561:
  3384                           
  3385                           ;lcd_functions.c: 163: lcd_update();
  3386  000574  EC9F  F004         	call	_lcd_update	;wreg free
  3387                           
  3388                           ;lcd_functions.c: 164: break;
  3389  000578  D08F               	goto	l509
  3390  00057A                     l5563:
  3391                           
  3392                           ;lcd_functions.c: 166: if (main_menu_old < 6)
  3393  00057A  0E06               	movlw	6
  3394  00057C  6026               	cpfslt	_main_menu_old,c
  3395  00057E  D002               	goto	l5567
  3396                           
  3397                           ;lcd_functions.c: 167: main_menu_new++;
  3398  000580  2A25               	incf	_main_menu_new,f,c
  3399  000582  D000               	goto	l5567
  3400  000584                     l5567:
  3401                           
  3402                           ;lcd_functions.c: 168: lcd_update();
  3403  000584  EC9F  F004         	call	_lcd_update	;wreg free
  3404                           
  3405                           ;lcd_functions.c: 169: break;
  3406  000588  D087               	goto	l509
  3407  00058A                     l5569:
  3408                           
  3409                           ;lcd_functions.c: 171: {main_menu_new = mmLCDsm;lcd_update();};
  3410  00058A  0E09               	movlw	9
  3411  00058C  6E25               	movwf	_main_menu_new,c
  3412  00058E  EC9F  F004         	call	_lcd_update	;wreg free
  3413                           
  3414                           ;lcd_functions.c: 172: break;
  3415  000592  D082               	goto	l509
  3416  000594                     l568:
  3417                           
  3418                           ;lcd_functions.c: 174: {fsm_new_state = mmOld;lcd_update();};
  3419  000594  C0A1  F01E         	movff	lcd_main_menu_fsm@mmOld,_fsm_new_state
  3420  000598  EC9F  F004         	call	_lcd_update	;wreg free
  3421                           
  3422                           ;lcd_functions.c: 178: }
  3423                           
  3424                           ;lcd_functions.c: 177: break;
  3425                           
  3426                           ;lcd_functions.c: 176: default:
  3427                           
  3428                           ;lcd_functions.c: 175: break;
  3429  00059C  D07D               	goto	l509
  3430  00059E                     l5577:
  3431  00059E  5023               	movf	_inputs,w,c
  3432                           
  3433                           ; Switch size 1, requested type "space"
  3434                           ; Number of cases is 4, Range of values is 1 to 8
  3435                           ; switch strategies available:
  3436                           ; Name         Instructions Cycles
  3437                           ; simple_byte           13     7 (average)
  3438                           ;	Chosen strategy is simple_byte
  3439  0005A0  0A01               	xorlw	1	; case 1
  3440  0005A2  B4D8               	btfsc	status,2,c
  3441  0005A4  D7EA               	goto	l5563
  3442  0005A6  0A03               	xorlw	3	; case 2
  3443  0005A8  B4D8               	btfsc	status,2,c
  3444  0005AA  D7DF               	goto	l5557
  3445  0005AC  0A06               	xorlw	6	; case 4
  3446  0005AE  B4D8               	btfsc	status,2,c
  3447  0005B0  D7EC               	goto	l5569
  3448  0005B2  0A0C               	xorlw	12	; case 8
  3449  0005B4  B4D8               	btfsc	status,2,c
  3450  0005B6  D7EE               	goto	l568
  3451                           
  3452                           ;lcd_functions.c: 179: break;
  3453  0005B8  D06F               	goto	l509
  3454  0005BA                     l5579:
  3455                           
  3456                           ;lcd_functions.c: 182: lcd_sub_menu_metronoom();
  3457  0005BA  EC4F  F003         	call	_lcd_sub_menu_metronoom	;wreg free
  3458                           
  3459                           ;lcd_functions.c: 183: switch (inputs) {
  3460  0005BE  D00C               	goto	l5593
  3461                           
  3462                           ;lcd_functions.c: 189: break;
  3463                           
  3464                           ;lcd_functions.c: 188: case 0x04:
  3465                           
  3466                           ;lcd_functions.c: 187: break;
  3467                           
  3468                           ;lcd_functions.c: 186: case 0x01:
  3469                           
  3470                           ;lcd_functions.c: 185: break;
  3471                           
  3472                           ;lcd_functions.c: 184: case 0x02:
  3473  0005C0  D06B               	goto	l509
  3474  0005C2                     l5581:
  3475                           
  3476                           ;lcd_functions.c: 191: {main_menu_new = mmMETRONOOM;lcd_update();};
  3477  0005C2  0E03               	movlw	3
  3478  0005C4  6E25               	movwf	_main_menu_new,c
  3479  0005C6  EC9F  F004         	call	_lcd_update	;wreg free
  3480                           
  3481                           ;lcd_functions.c: 192: SerialTx.Command = lMENU;
  3482  0005CA  0E05               	movlw	5
  3483  0005CC  6E02               	movwf	_SerialTx+1,c
  3484                           
  3485                           ;lcd_functions.c: 193: SerialTx.Dat1 = 0;
  3486  0005CE  0E00               	movlw	0
  3487  0005D0  6E04               	movwf	_SerialTx+3,c
  3488                           
  3489                           ;lcd_functions.c: 194: SerialTransmit();
  3490  0005D2  EC45  F00D         	call	_SerialTransmit	;wreg free
  3491                           
  3492                           ;lcd_functions.c: 198: }
  3493                           
  3494                           ;lcd_functions.c: 197: break;
  3495                           
  3496                           ;lcd_functions.c: 196: default:
  3497                           
  3498                           ;lcd_functions.c: 195: break;
  3499  0005D6  D060               	goto	l509
  3500  0005D8                     l5593:
  3501  0005D8  5023               	movf	_inputs,w,c
  3502                           
  3503                           ; Switch size 1, requested type "space"
  3504                           ; Number of cases is 4, Range of values is 1 to 8
  3505                           ; switch strategies available:
  3506                           ; Name         Instructions Cycles
  3507                           ; simple_byte           13     7 (average)
  3508                           ;	Chosen strategy is simple_byte
  3509  0005DA  0A01               	xorlw	1	; case 1
  3510  0005DC  B4D8               	btfsc	status,2,c
  3511  0005DE  D05C               	goto	l509
  3512  0005E0  0A03               	xorlw	3	; case 2
  3513  0005E2  B4D8               	btfsc	status,2,c
  3514  0005E4  D059               	goto	l509
  3515  0005E6  0A06               	xorlw	6	; case 4
  3516  0005E8  B4D8               	btfsc	status,2,c
  3517  0005EA  D056               	goto	l509
  3518  0005EC  0A0C               	xorlw	12	; case 8
  3519  0005EE  B4D8               	btfsc	status,2,c
  3520  0005F0  D7E8               	goto	l5581
  3521                           
  3522                           ;lcd_functions.c: 199: break;
  3523  0005F2  D052               	goto	l509
  3524  0005F4                     l5595:
  3525                           
  3526                           ;lcd_functions.c: 202: lcd_sub_menu_tetten();
  3527  0005F4  ECFF  F00D         	call	_lcd_sub_menu_tetten	;wreg free
  3528                           
  3529                           ;lcd_functions.c: 203: switch (inputs) {
  3530  0005F8  D00B               	goto	l5607
  3531                           
  3532                           ;lcd_functions.c: 207: break;
  3533                           
  3534                           ;lcd_functions.c: 206: case 0x01:
  3535                           
  3536                           ;lcd_functions.c: 205: break;
  3537                           
  3538                           ;lcd_functions.c: 204: case 0x02:
  3539  0005FA  D04E               	goto	l509
  3540  0005FC                     l5597:
  3541                           
  3542                           ;lcd_functions.c: 209: {main_menu_new = mmTETTEN;lcd_update();};
  3543  0005FC  0E05               	movlw	5
  3544  0005FE  6E25               	movwf	_main_menu_new,c
  3545  000600  EC9F  F004         	call	_lcd_update	;wreg free
  3546                           
  3547                           ;lcd_functions.c: 210: break;
  3548  000604  D049               	goto	l509
  3549  000606                     l5601:
  3550                           
  3551                           ;lcd_functions.c: 212: {main_menu_new = mmTETTEN;lcd_update();};
  3552  000606  0E05               	movlw	5
  3553  000608  6E25               	movwf	_main_menu_new,c
  3554  00060A  EC9F  F004         	call	_lcd_update	;wreg free
  3555                           
  3556                           ;lcd_functions.c: 216: }
  3557                           
  3558                           ;lcd_functions.c: 215: break;
  3559                           
  3560                           ;lcd_functions.c: 214: default:
  3561                           
  3562                           ;lcd_functions.c: 213: break;
  3563  00060E  D044               	goto	l509
  3564  000610                     l5607:
  3565  000610  5023               	movf	_inputs,w,c
  3566                           
  3567                           ; Switch size 1, requested type "space"
  3568                           ; Number of cases is 4, Range of values is 1 to 8
  3569                           ; switch strategies available:
  3570                           ; Name         Instructions Cycles
  3571                           ; simple_byte           13     7 (average)
  3572                           ;	Chosen strategy is simple_byte
  3573  000612  0A01               	xorlw	1	; case 1
  3574  000614  B4D8               	btfsc	status,2,c
  3575  000616  D040               	goto	l509
  3576  000618  0A03               	xorlw	3	; case 2
  3577  00061A  B4D8               	btfsc	status,2,c
  3578  00061C  D03D               	goto	l509
  3579  00061E  0A06               	xorlw	6	; case 4
  3580  000620  B4D8               	btfsc	status,2,c
  3581  000622  D7EC               	goto	l5597
  3582  000624  0A0C               	xorlw	12	; case 8
  3583  000626  B4D8               	btfsc	status,2,c
  3584  000628  D7EE               	goto	l5601
  3585                           
  3586                           ;lcd_functions.c: 217: break;
  3587  00062A  D036               	goto	l509
  3588  00062C                     l5609:
  3589                           
  3590                           ;lcd_functions.c: 220: lcd_sub_menu_lcd();
  3591  00062C  ECD7  F005         	call	_lcd_sub_menu_lcd	;wreg free
  3592                           
  3593                           ;lcd_functions.c: 221: switch (inputs) {
  3594  000630  D006               	goto	l5617
  3595                           
  3596                           ;lcd_functions.c: 227: break;
  3597                           
  3598                           ;lcd_functions.c: 226: case 0x04:
  3599                           
  3600                           ;lcd_functions.c: 225: break;
  3601                           
  3602                           ;lcd_functions.c: 224: case 0x01:
  3603                           
  3604                           ;lcd_functions.c: 223: break;
  3605                           
  3606                           ;lcd_functions.c: 222: case 0x02:
  3607  000632  D032               	goto	l509
  3608  000634                     l5611:
  3609                           
  3610                           ;lcd_functions.c: 229: {main_menu_new = mmLCD;lcd_update();};
  3611  000634  0E06               	movlw	6
  3612  000636  6E25               	movwf	_main_menu_new,c
  3613  000638  EC9F  F004         	call	_lcd_update	;wreg free
  3614                           
  3615                           ;lcd_functions.c: 233: }
  3616                           
  3617                           ;lcd_functions.c: 232: break;
  3618                           
  3619                           ;lcd_functions.c: 231: default:
  3620                           
  3621                           ;lcd_functions.c: 230: break;
  3622  00063C  D02D               	goto	l509
  3623  00063E                     l5617:
  3624  00063E  5023               	movf	_inputs,w,c
  3625                           
  3626                           ; Switch size 1, requested type "space"
  3627                           ; Number of cases is 4, Range of values is 1 to 8
  3628                           ; switch strategies available:
  3629                           ; Name         Instructions Cycles
  3630                           ; simple_byte           13     7 (average)
  3631                           ;	Chosen strategy is simple_byte
  3632  000640  0A01               	xorlw	1	; case 1
  3633  000642  B4D8               	btfsc	status,2,c
  3634  000644  D029               	goto	l509
  3635  000646  0A03               	xorlw	3	; case 2
  3636  000648  B4D8               	btfsc	status,2,c
  3637  00064A  D026               	goto	l509
  3638  00064C  0A06               	xorlw	6	; case 4
  3639  00064E  B4D8               	btfsc	status,2,c
  3640  000650  D023               	goto	l509
  3641  000652  0A0C               	xorlw	12	; case 8
  3642  000654  B4D8               	btfsc	status,2,c
  3643  000656  D7EE               	goto	l5611
  3644                           
  3645                           ;lcd_functions.c: 235: }
  3646                           
  3647                           ;lcd_functions.c: 234: break;
  3648  000658  D01F               	goto	l509
  3649  00065A                     l5621:
  3650  00065A  5026               	movf	_main_menu_old,w,c
  3651                           
  3652                           ; Switch size 1, requested type "space"
  3653                           ; Number of cases is 10, Range of values is 0 to 9
  3654                           ; switch strategies available:
  3655                           ; Name         Instructions Cycles
  3656                           ; simple_byte           31    16 (average)
  3657                           ;	Chosen strategy is simple_byte
  3658  00065C  0A00               	xorlw	0	; case 0
  3659  00065E  B4D8               	btfsc	status,2,c
  3660  000660  D6AF               	goto	l5449
  3661  000662  0A01               	xorlw	1	; case 1
  3662  000664  B4D8               	btfsc	status,2,c
  3663  000666  D6D6               	goto	l5473
  3664  000668  0A03               	xorlw	3	; case 2
  3665  00066A  B4D8               	btfsc	status,2,c
  3666  00066C  D6F7               	goto	l5491
  3667  00066E  0A01               	xorlw	1	; case 3
  3668  000670  B4D8               	btfsc	status,2,c
  3669  000672  D71F               	goto	l5515
  3670  000674  0A07               	xorlw	7	; case 4
  3671  000676  B4D8               	btfsc	status,2,c
  3672  000678  D740               	goto	l5533
  3673  00067A  0A01               	xorlw	1	; case 5
  3674  00067C  B4D8               	btfsc	status,2,c
  3675  00067E  D766               	goto	l5555
  3676  000680  0A03               	xorlw	3	; case 6
  3677  000682  B4D8               	btfsc	status,2,c
  3678  000684  D78C               	goto	l5577
  3679  000686  0A01               	xorlw	1	; case 7
  3680  000688  B4D8               	btfsc	status,2,c
  3681  00068A  D797               	goto	l5579
  3682  00068C  0A0F               	xorlw	15	; case 8
  3683  00068E  B4D8               	btfsc	status,2,c
  3684  000690  D7B1               	goto	l5595
  3685  000692  0A01               	xorlw	1	; case 9
  3686  000694  B4D8               	btfsc	status,2,c
  3687  000696  D7CA               	goto	l5609
  3688  000698                     l509:
  3689                           
  3690                           ;lcd_functions.c: 236: main_menu_old = main_menu_new;
  3691  000698  C025  F026         	movff	_main_menu_new,_main_menu_old
  3692  00069C  0012               	return		;funcret
  3693  00069E                     __end_of_lcd_main_menu_fsm:
  3694                           	opt stack 0
  3695                           tblptru	equ	0xFF8
  3696                           tblptrh	equ	0xFF7
  3697                           tblptrl	equ	0xFF6
  3698                           tablat	equ	0xFF5
  3699                           prodh	equ	0xFF4
  3700                           prodl	equ	0xFF3
  3701                           intcon	equ	0xFF2
  3702                           postinc0	equ	0xFEE
  3703                           wreg	equ	0xFE8
  3704                           postdec1	equ	0xFE5
  3705                           plusw1	equ	0xFE3
  3706                           fsr1l	equ	0xFE1
  3707                           indf2	equ	0xFDF
  3708                           plusw2	equ	0xFDB
  3709                           fsr2h	equ	0xFDA
  3710                           fsr2l	equ	0xFD9
  3711                           status	equ	0xFD8
  3712                           
  3713 ;; *************** function _lcd_update *****************
  3714 ;; Defined at:
  3715 ;;		line 481 in file "lcd_functions.c"
  3716 ;; Parameters:    Size  Location     Type
  3717 ;;		None
  3718 ;; Auto vars:     Size  Location     Type
  3719 ;;		None
  3720 ;; Return value:  Size  Location     Type
  3721 ;;		None               void
  3722 ;; Registers used:
  3723 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3724 ;; Tracked objects:
  3725 ;;		On entry : 0/0
  3726 ;;		On exit  : 0/0
  3727 ;;		Unchanged: 0/0
  3728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3729 ;;      Params:         0       0       0       0       0       0       0       0       0
  3730 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3731 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3732 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3733 ;;Total ram usage:        0 bytes
  3734 ;; Hardware stack levels used:    1
  3735 ;; Hardware stack levels required when called:    5
  3736 ;; This function calls:
  3737 ;;		_LCDGotoXY
  3738 ;;		_LCDWriteString
  3739 ;;		_lcd_connection
  3740 ;; This function is called by:
  3741 ;;		_main
  3742 ;;		_lcd_main_menu_fsm
  3743 ;; This function uses a non-reentrant model
  3744 ;;
  3745                           
  3746                           	psect	text6
  3747  00093E                     __ptext6:
  3748                           	opt stack 0
  3749  00093E                     _lcd_update:
  3750                           	opt stack 25
  3751                           
  3752                           ;lcd_functions.c: 482: switch (fsm_new_state) {
  3753                           
  3754                           ;incstack = 0
  3755  00093E  D122               	goto	l5127
  3756                           
  3757                           ;lcd_functions.c: 484: break;
  3758                           
  3759                           ;lcd_functions.c: 483: case lINIT:
  3760  000940  D135               	goto	l726
  3761  000942                     l5049:
  3762                           
  3763                           ;lcd_functions.c: 486: lcd_connection();
  3764  000942  ECCB  F007         	call	_lcd_connection	;wreg free
  3765                           
  3766                           ;lcd_functions.c: 487: break;
  3767  000946  D132               	goto	l726
  3768  000948                     l5051:
  3769                           
  3770                           ;lcd_functions.c: 489: lcd_connection();
  3771  000948  ECCB  F007         	call	_lcd_connection	;wreg free
  3772                           
  3773                           ;lcd_functions.c: 490: break;
  3774  00094C  D12F               	goto	l726
  3775  00094E                     l5053:
  3776                           
  3777                           ;lcd_functions.c: 492: { LCDGotoXY(0,0); LCDWriteString("Druk 'OK' om te ");};
  3778  00094E  0E00               	movlw	0
  3779  000950  6E46               	movwf	LCDGotoXY@y,c
  3780  000952  0E00               	movlw	0
  3781  000954  EC6F  F00D         	call	_LCDGotoXY
  3782  000958  0E27               	movlw	low STR_18
  3783  00095A  6E46               	movwf	LCDWriteString@msg,c
  3784  00095C  0E7F               	movlw	high STR_18
  3785  00095E  6E47               	movwf	LCDWriteString@msg+1,c
  3786  000960  ECD3  F009         	call	_LCDWriteString	;wreg free
  3787                           
  3788                           ;lcd_functions.c: 493: { LCDGotoXY(0,1); LCDWriteString("beginnen        ");};
  3789  000964  0E01               	movlw	1
  3790  000966  6E46               	movwf	LCDGotoXY@y,c
  3791  000968  0E00               	movlw	0
  3792  00096A  EC6F  F00D         	call	_LCDGotoXY
  3793  00096E  0ED2               	movlw	low STR_19
  3794  000970  6E46               	movwf	LCDWriteString@msg,c
  3795  000972  0E7E               	movlw	high STR_19
  3796  000974  6E47               	movwf	LCDWriteString@msg+1,c
  3797  000976  ECD3  F009         	call	_LCDWriteString	;wreg free
  3798                           
  3799                           ;lcd_functions.c: 494: break;
  3800  00097A  D118               	goto	l726
  3801  00097C                     l5059:
  3802                           
  3803                           ;lcd_functions.c: 496: { LCDGotoXY(0,0); LCDWriteString("Transmit        ");};
  3804  00097C  0E00               	movlw	0
  3805  00097E  6E46               	movwf	LCDGotoXY@y,c
  3806  000980  0E00               	movlw	0
  3807  000982  EC6F  F00D         	call	_LCDGotoXY
  3808  000986  0EE3               	movlw	low STR_20
  3809  000988  6E46               	movwf	LCDWriteString@msg,c
  3810  00098A  0E7E               	movlw	high STR_20
  3811  00098C  6E47               	movwf	LCDWriteString@msg+1,c
  3812  00098E  ECD3  F009         	call	_LCDWriteString	;wreg free
  3813                           
  3814                           ;lcd_functions.c: 497: { LCDGotoXY(0,1); LCDWriteString("                ");};
  3815  000992  0E01               	movlw	1
  3816  000994  6E46               	movwf	LCDGotoXY@y,c
  3817  000996  0E00               	movlw	0
  3818  000998  EC6F  F00D         	call	_LCDGotoXY
  3819  00099C  0E9F               	movlw	low STR_21
  3820  00099E  6E46               	movwf	LCDWriteString@msg,c
  3821  0009A0  0E7E               	movlw	high STR_21
  3822  0009A2  6E47               	movwf	LCDWriteString@msg+1,c
  3823  0009A4  ECD3  F009         	call	_LCDWriteString	;wreg free
  3824                           
  3825                           ;lcd_functions.c: 498: break;
  3826  0009A8  D101               	goto	l726
  3827  0009AA                     l5065:
  3828                           
  3829                           ;lcd_functions.c: 500: { LCDGotoXY(0,0); LCDWriteString("Menu:  >        ");};
  3830  0009AA  0E00               	movlw	0
  3831  0009AC  6E46               	movwf	LCDGotoXY@y,c
  3832  0009AE  0E00               	movlw	0
  3833  0009B0  EC6F  F00D         	call	_LCDGotoXY
  3834  0009B4  0EC1               	movlw	low STR_22
  3835  0009B6  6E46               	movwf	LCDWriteString@msg,c
  3836  0009B8  0E7E               	movlw	high STR_22
  3837  0009BA  6E47               	movwf	LCDWriteString@msg+1,c
  3838  0009BC  ECD3  F009         	call	_LCDWriteString	;wreg free
  3839                           
  3840                           ;lcd_functions.c: 501: { LCDGotoXY(0,1); LCDWriteString("                ");};
  3841  0009C0  0E01               	movlw	1
  3842  0009C2  6E46               	movwf	LCDGotoXY@y,c
  3843  0009C4  0E00               	movlw	0
  3844  0009C6  EC6F  F00D         	call	_LCDGotoXY
  3845  0009CA  0E9F               	movlw	low STR_21
  3846  0009CC  6E46               	movwf	LCDWriteString@msg,c
  3847  0009CE  0E7E               	movlw	high STR_21
  3848  0009D0  6E47               	movwf	LCDWriteString@msg+1,c
  3849  0009D2  ECD3  F009         	call	_LCDWriteString	;wreg free
  3850                           
  3851                           ;lcd_functions.c: 502: switch (main_menu_new) {
  3852  0009D6  D0B9               	goto	l5123
  3853  0009D8                     l5071:
  3854                           
  3855                           ;lcd_functions.c: 504: { LCDGotoXY(8,0); LCDWriteString("-kies-< ");};
  3856  0009D8  0E00               	movlw	0
  3857  0009DA  6E46               	movwf	LCDGotoXY@y,c
  3858  0009DC  0E08               	movlw	8
  3859  0009DE  EC6F  F00D         	call	_LCDGotoXY
  3860  0009E2  0E9A               	movlw	low STR_24
  3861  0009E4  6E46               	movwf	LCDWriteString@msg,c
  3862  0009E6  0E7F               	movlw	high STR_24
  3863  0009E8  6E47               	movwf	LCDWriteString@msg+1,c
  3864  0009EA  ECD3  F009         	call	_LCDWriteString	;wreg free
  3865                           
  3866                           ;lcd_functions.c: 505: { LCDGotoXY(8,1); LCDWriteString("Reset   ");};
  3867  0009EE  0E01               	movlw	1
  3868  0009F0  6E46               	movwf	LCDGotoXY@y,c
  3869  0009F2  0E08               	movlw	8
  3870  0009F4  EC6F  F00D         	call	_LCDGotoXY
  3871  0009F8  0E88               	movlw	low STR_25
  3872  0009FA  6E46               	movwf	LCDWriteString@msg,c
  3873  0009FC  0E7F               	movlw	high STR_25
  3874  0009FE  6E47               	movwf	LCDWriteString@msg+1,c
  3875  000A00  ECD3  F009         	call	_LCDWriteString	;wreg free
  3876                           
  3877                           ;lcd_functions.c: 506: break;
  3878  000A04  D0D3               	goto	l726
  3879  000A06                     l5077:
  3880                           
  3881                           ;lcd_functions.c: 508: { LCDGotoXY(8,0); LCDWriteString("Reset   ");};
  3882  000A06  0E00               	movlw	0
  3883  000A08  6E46               	movwf	LCDGotoXY@y,c
  3884  000A0A  0E08               	movlw	8
  3885  000A0C  EC6F  F00D         	call	_LCDGotoXY
  3886  000A10  0E88               	movlw	low STR_25
  3887  000A12  6E46               	movwf	LCDWriteString@msg,c
  3888  000A14  0E7F               	movlw	high STR_25
  3889  000A16  6E47               	movwf	LCDWriteString@msg+1,c
  3890  000A18  ECD3  F009         	call	_LCDWriteString	;wreg free
  3891                           
  3892                           ;lcd_functions.c: 509: { LCDGotoXY(8,1); LCDWriteString("Stemmen ");};
  3893  000A1C  0E01               	movlw	1
  3894  000A1E  6E46               	movwf	LCDGotoXY@y,c
  3895  000A20  0E08               	movlw	8
  3896  000A22  EC6F  F00D         	call	_LCDGotoXY
  3897  000A26  0EA3               	movlw	low STR_27
  3898  000A28  6E46               	movwf	LCDWriteString@msg,c
  3899  000A2A  0E7F               	movlw	high STR_27
  3900  000A2C  6E47               	movwf	LCDWriteString@msg+1,c
  3901  000A2E  ECD3  F009         	call	_LCDWriteString	;wreg free
  3902                           
  3903                           ;lcd_functions.c: 510: break;
  3904  000A32  D0BC               	goto	l726
  3905  000A34                     l5083:
  3906                           
  3907                           ;lcd_functions.c: 512: { LCDGotoXY(8,0); LCDWriteString("Stemmen ");};
  3908  000A34  0E00               	movlw	0
  3909  000A36  6E46               	movwf	LCDGotoXY@y,c
  3910  000A38  0E08               	movlw	8
  3911  000A3A  EC6F  F00D         	call	_LCDGotoXY
  3912  000A3E  0EA3               	movlw	low STR_27
  3913  000A40  6E46               	movwf	LCDWriteString@msg,c
  3914  000A42  0E7F               	movlw	high STR_27
  3915  000A44  6E47               	movwf	LCDWriteString@msg+1,c
  3916  000A46  ECD3  F009         	call	_LCDWriteString	;wreg free
  3917                           
  3918                           ;lcd_functions.c: 513: { LCDGotoXY(8,1); LCDWriteString("Click   ");};
  3919  000A4A  0E01               	movlw	1
  3920  000A4C  6E46               	movwf	LCDGotoXY@y,c
  3921  000A4E  0E08               	movlw	8
  3922  000A50  EC6F  F00D         	call	_LCDGotoXY
  3923  000A54  0E7F               	movlw	low STR_29
  3924  000A56  6E46               	movwf	LCDWriteString@msg,c
  3925  000A58  0E7F               	movlw	high STR_29
  3926  000A5A  6E47               	movwf	LCDWriteString@msg+1,c
  3927  000A5C  ECD3  F009         	call	_LCDWriteString	;wreg free
  3928                           
  3929                           ;lcd_functions.c: 514: break;
  3930  000A60  D0A5               	goto	l726
  3931  000A62                     l5089:
  3932                           
  3933                           ;lcd_functions.c: 516: { LCDGotoXY(8,0); LCDWriteString("Click   ");};
  3934  000A62  0E00               	movlw	0
  3935  000A64  6E46               	movwf	LCDGotoXY@y,c
  3936  000A66  0E08               	movlw	8
  3937  000A68  EC6F  F00D         	call	_LCDGotoXY
  3938  000A6C  0E7F               	movlw	low STR_29
  3939  000A6E  6E46               	movwf	LCDWriteString@msg,c
  3940  000A70  0E7F               	movlw	high STR_29
  3941  000A72  6E47               	movwf	LCDWriteString@msg+1,c
  3942  000A74  ECD3  F009         	call	_LCDWriteString	;wreg free
  3943                           
  3944                           ;lcd_functions.c: 517: { LCDGotoXY(8,1); LCDWriteString("Mopje   ");};
  3945  000A78  0E01               	movlw	1
  3946  000A7A  6E46               	movwf	LCDGotoXY@y,c
  3947  000A7C  0E08               	movlw	8
  3948  000A7E  EC6F  F00D         	call	_LCDGotoXY
  3949  000A82  0E76               	movlw	low STR_31
  3950  000A84  6E46               	movwf	LCDWriteString@msg,c
  3951  000A86  0E7F               	movlw	high STR_31
  3952  000A88  6E47               	movwf	LCDWriteString@msg+1,c
  3953  000A8A  ECD3  F009         	call	_LCDWriteString	;wreg free
  3954                           
  3955                           ;lcd_functions.c: 518: break;
  3956  000A8E  D08E               	goto	l726
  3957  000A90                     l5095:
  3958                           
  3959                           ;lcd_functions.c: 520: { LCDGotoXY(8,0); LCDWriteString("Mopje   ");};
  3960  000A90  0E00               	movlw	0
  3961  000A92  6E46               	movwf	LCDGotoXY@y,c
  3962  000A94  0E08               	movlw	8
  3963  000A96  EC6F  F00D         	call	_LCDGotoXY
  3964  000A9A  0E76               	movlw	low STR_31
  3965  000A9C  6E46               	movwf	LCDWriteString@msg,c
  3966  000A9E  0E7F               	movlw	high STR_31
  3967  000AA0  6E47               	movwf	LCDWriteString@msg+1,c
  3968  000AA2  ECD3  F009         	call	_LCDWriteString	;wreg free
  3969                           
  3970                           ;lcd_functions.c: 521: { LCDGotoXY(8,1); LCDWriteString("Tetten  ");};
  3971  000AA6  0E01               	movlw	1
  3972  000AA8  6E46               	movwf	LCDGotoXY@y,c
  3973  000AAA  0E08               	movlw	8
  3974  000AAC  EC6F  F00D         	call	_LCDGotoXY
  3975  000AB0  0E91               	movlw	low STR_33
  3976  000AB2  6E46               	movwf	LCDWriteString@msg,c
  3977  000AB4  0E7F               	movlw	high STR_33
  3978  000AB6  6E47               	movwf	LCDWriteString@msg+1,c
  3979  000AB8  ECD3  F009         	call	_LCDWriteString	;wreg free
  3980                           
  3981                           ;lcd_functions.c: 522: break;
  3982  000ABC  D077               	goto	l726
  3983  000ABE                     l5101:
  3984                           
  3985                           ;lcd_functions.c: 524: { LCDGotoXY(8,0); LCDWriteString("Tetten  ");};
  3986  000ABE  0E00               	movlw	0
  3987  000AC0  6E46               	movwf	LCDGotoXY@y,c
  3988  000AC2  0E08               	movlw	8
  3989  000AC4  EC6F  F00D         	call	_LCDGotoXY
  3990  000AC8  0E91               	movlw	low STR_33
  3991  000ACA  6E46               	movwf	LCDWriteString@msg,c
  3992  000ACC  0E7F               	movlw	high STR_33
  3993  000ACE  6E47               	movwf	LCDWriteString@msg+1,c
  3994  000AD0  ECD3  F009         	call	_LCDWriteString	;wreg free
  3995                           
  3996                           ;lcd_functions.c: 525: { LCDGotoXY(8,1); LCDWriteString("Lcd     ");};
  3997  000AD4  0E01               	movlw	1
  3998  000AD6  6E46               	movwf	LCDGotoXY@y,c
  3999  000AD8  0E08               	movlw	8
  4000  000ADA  EC6F  F00D         	call	_LCDGotoXY
  4001  000ADE  0E6D               	movlw	low STR_35
  4002  000AE0  6E46               	movwf	LCDWriteString@msg,c
  4003  000AE2  0E7F               	movlw	high STR_35
  4004  000AE4  6E47               	movwf	LCDWriteString@msg+1,c
  4005  000AE6  ECD3  F009         	call	_LCDWriteString	;wreg free
  4006                           
  4007                           ;lcd_functions.c: 526: break;
  4008  000AEA  D060               	goto	l726
  4009  000AEC                     l5107:
  4010                           
  4011                           ;lcd_functions.c: 528: { LCDGotoXY(8,0); LCDWriteString("Lcd     ");};
  4012  000AEC  0E00               	movlw	0
  4013  000AEE  6E46               	movwf	LCDGotoXY@y,c
  4014  000AF0  0E08               	movlw	8
  4015  000AF2  EC6F  F00D         	call	_LCDGotoXY
  4016  000AF6  0E6D               	movlw	low STR_35
  4017  000AF8  6E46               	movwf	LCDWriteString@msg,c
  4018  000AFA  0E7F               	movlw	high STR_35
  4019  000AFC  6E47               	movwf	LCDWriteString@msg+1,c
  4020  000AFE  ECD3  F009         	call	_LCDWriteString	;wreg free
  4021                           
  4022                           ;lcd_functions.c: 529: { LCDGotoXY(0,1); LCDWriteString("                ");};
  4023  000B02  0E01               	movlw	1
  4024  000B04  6E46               	movwf	LCDGotoXY@y,c
  4025  000B06  0E00               	movlw	0
  4026  000B08  EC6F  F00D         	call	_LCDGotoXY
  4027  000B0C  0E9F               	movlw	low STR_21
  4028  000B0E  6E46               	movwf	LCDWriteString@msg,c
  4029  000B10  0E7E               	movlw	high STR_21
  4030  000B12  6E47               	movwf	LCDWriteString@msg+1,c
  4031  000B14  ECD3  F009         	call	_LCDWriteString	;wreg free
  4032                           
  4033                           ;lcd_functions.c: 530: break;
  4034  000B18  D049               	goto	l726
  4035  000B1A                     l5113:
  4036                           
  4037                           ;lcd_functions.c: 532: { LCDGotoXY(0,0); LCDWriteString("Metronom");};
  4038  000B1A  0E00               	movlw	0
  4039  000B1C  6E46               	movwf	LCDGotoXY@y,c
  4040  000B1E  0E00               	movlw	0
  4041  000B20  EC6F  F00D         	call	_LCDGotoXY
  4042  000B24  0EAC               	movlw	low STR_38
  4043  000B26  6E46               	movwf	LCDWriteString@msg,c
  4044  000B28  0E7F               	movlw	high STR_38
  4045  000B2A  6E47               	movwf	LCDWriteString@msg+1,c
  4046  000B2C  ECD3  F009         	call	_LCDWriteString	;wreg free
  4047                           
  4048                           ;lcd_functions.c: 533: break;
  4049  000B30  D03D               	goto	l726
  4050  000B32                     l5117:
  4051                           
  4052                           ;lcd_functions.c: 535: { LCDGotoXY(0,0); LCDWriteString("Hldrh  Spd  Led ");};
  4053  000B32  0E00               	movlw	0
  4054  000B34  6E46               	movwf	LCDGotoXY@y,c
  4055  000B36  0E00               	movlw	0
  4056  000B38  EC6F  F00D         	call	_LCDGotoXY
  4057  000B3C  0E16               	movlw	low STR_39
  4058  000B3E  6E46               	movwf	LCDWriteString@msg,c
  4059  000B40  0E7F               	movlw	high STR_39
  4060  000B42  6E47               	movwf	LCDWriteString@msg+1,c
  4061  000B44  ECD3  F009         	call	_LCDWriteString	;wreg free
  4062                           
  4063                           ;lcd_functions.c: 539: }
  4064                           
  4065                           ;lcd_functions.c: 538: break;
  4066                           
  4067                           ;lcd_functions.c: 537: default:
  4068                           
  4069                           ;lcd_functions.c: 536: break;
  4070  000B48  D031               	goto	l726
  4071  000B4A                     l5123:
  4072  000B4A  5025               	movf	_main_menu_new,w,c
  4073                           
  4074                           ; Switch size 1, requested type "space"
  4075                           ; Number of cases is 9, Range of values is 0 to 9
  4076                           ; switch strategies available:
  4077                           ; Name         Instructions Cycles
  4078                           ; simple_byte           28    15 (average)
  4079                           ;	Chosen strategy is simple_byte
  4080  000B4C  0A00               	xorlw	0	; case 0
  4081  000B4E  B4D8               	btfsc	status,2,c
  4082  000B50  D743               	goto	l5071
  4083  000B52  0A01               	xorlw	1	; case 1
  4084  000B54  B4D8               	btfsc	status,2,c
  4085  000B56  D757               	goto	l5077
  4086  000B58  0A03               	xorlw	3	; case 2
  4087  000B5A  B4D8               	btfsc	status,2,c
  4088  000B5C  D76B               	goto	l5083
  4089  000B5E  0A01               	xorlw	1	; case 3
  4090  000B60  B4D8               	btfsc	status,2,c
  4091  000B62  D77F               	goto	l5089
  4092  000B64  0A07               	xorlw	7	; case 4
  4093  000B66  B4D8               	btfsc	status,2,c
  4094  000B68  D793               	goto	l5095
  4095  000B6A  0A01               	xorlw	1	; case 5
  4096  000B6C  B4D8               	btfsc	status,2,c
  4097  000B6E  D7A7               	goto	l5101
  4098  000B70  0A03               	xorlw	3	; case 6
  4099  000B72  B4D8               	btfsc	status,2,c
  4100  000B74  D7BB               	goto	l5107
  4101  000B76  0A01               	xorlw	1	; case 7
  4102  000B78  B4D8               	btfsc	status,2,c
  4103  000B7A  D7CF               	goto	l5113
  4104  000B7C  0A0E               	xorlw	14	; case 9
  4105  000B7E  B4D8               	btfsc	status,2,c
  4106  000B80  D7D8               	goto	l5117
  4107                           
  4108                           ;lcd_functions.c: 542: }
  4109                           
  4110                           ;lcd_functions.c: 540: break;
  4111  000B82  D014               	goto	l726
  4112  000B84                     l5127:
  4113  000B84  501E               	movf	_fsm_new_state,w,c
  4114                           
  4115                           ; Switch size 1, requested type "space"
  4116                           ; Number of cases is 6, Range of values is 0 to 5
  4117                           ; switch strategies available:
  4118                           ; Name         Instructions Cycles
  4119                           ; simple_byte           19    10 (average)
  4120                           ;	Chosen strategy is simple_byte
  4121  000B86  0A00               	xorlw	0	; case 0
  4122  000B88  B4D8               	btfsc	status,2,c
  4123  000B8A  D010               	goto	l726
  4124  000B8C  0A01               	xorlw	1	; case 1
  4125  000B8E  B4D8               	btfsc	status,2,c
  4126  000B90  D6D8               	goto	l5049
  4127  000B92  0A03               	xorlw	3	; case 2
  4128  000B94  B4D8               	btfsc	status,2,c
  4129  000B96  D6D8               	goto	l5051
  4130  000B98  0A01               	xorlw	1	; case 3
  4131  000B9A  B4D8               	btfsc	status,2,c
  4132  000B9C  D6D8               	goto	l5053
  4133  000B9E  0A07               	xorlw	7	; case 4
  4134  000BA0  B4D8               	btfsc	status,2,c
  4135  000BA2  D6EC               	goto	l5059
  4136  000BA4  0A01               	xorlw	1	; case 5
  4137  000BA6  B4D8               	btfsc	status,2,c
  4138  000BA8  D700               	goto	l5065
  4139  000BAA  D000               	goto	l726
  4140  000BAC                     l726:
  4141  000BAC  0012               	return		;funcret
  4142  000BAE                     __end_of_lcd_update:
  4143                           	opt stack 0
  4144                           tblptru	equ	0xFF8
  4145                           tblptrh	equ	0xFF7
  4146                           tblptrl	equ	0xFF6
  4147                           tablat	equ	0xFF5
  4148                           prodh	equ	0xFF4
  4149                           prodl	equ	0xFF3
  4150                           intcon	equ	0xFF2
  4151                           postinc0	equ	0xFEE
  4152                           wreg	equ	0xFE8
  4153                           postdec1	equ	0xFE5
  4154                           plusw1	equ	0xFE3
  4155                           fsr1l	equ	0xFE1
  4156                           indf2	equ	0xFDF
  4157                           plusw2	equ	0xFDB
  4158                           fsr2h	equ	0xFDA
  4159                           fsr2l	equ	0xFD9
  4160                           status	equ	0xFD8
  4161                           
  4162 ;; *************** function _lcd_connection *****************
  4163 ;; Defined at:
  4164 ;;		line 566 in file "lcd_functions.c"
  4165 ;; Parameters:    Size  Location     Type
  4166 ;;		None
  4167 ;; Auto vars:     Size  Location     Type
  4168 ;;		None
  4169 ;; Return value:  Size  Location     Type
  4170 ;;		None               void
  4171 ;; Registers used:
  4172 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4173 ;; Tracked objects:
  4174 ;;		On entry : 0/0
  4175 ;;		On exit  : 0/0
  4176 ;;		Unchanged: 0/0
  4177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4178 ;;      Params:         0       0       0       0       0       0       0       0       0
  4179 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4180 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4181 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4182 ;;Total ram usage:        1 bytes
  4183 ;; Hardware stack levels used:    1
  4184 ;; Hardware stack levels required when called:    4
  4185 ;; This function calls:
  4186 ;;		_LCDGotoXY
  4187 ;;		_LCDLoadCostum
  4188 ;;		_LCDWriteString
  4189 ;; This function is called by:
  4190 ;;		_lcd_update
  4191 ;; This function uses a non-reentrant model
  4192 ;;
  4193                           
  4194                           	psect	text7
  4195  000F96                     __ptext7:
  4196                           	opt stack 0
  4197  000F96                     _lcd_connection:
  4198                           	opt stack 25
  4199                           
  4200                           ;lcd_functions.c: 567: scrs_cnt++;
  4201                           
  4202                           ;incstack = 0
  4203  000F96  2A2A               	incf	_scrs_cnt,f,c
  4204                           
  4205                           ;lcd_functions.c: 568: if (scrs_cnt == scrs_speed) {
  4206  000F98  5051               	movf	_scrs_speed,w,c
  4207  000F9A  182A               	xorwf	_scrs_cnt,w,c
  4208  000F9C  A4D8               	btfss	status,2,c
  4209  000F9E  D0C4               	goto	l748
  4210                           
  4211                           ;lcd_functions.c: 569: LCDLoadCostum(3);
  4212  000FA0  0E03               	movlw	3
  4213  000FA2  EC95  F008         	call	_LCDLoadCostum
  4214                           
  4215                           ;lcd_functions.c: 571: { LCDGotoXY(0,0); LCDWriteString("%0");};
  4216  000FA6  0E00               	movlw	0
  4217  000FA8  6E46               	movwf	LCDGotoXY@y,c
  4218  000FAA  0E00               	movlw	0
  4219  000FAC  EC6F  F00D         	call	_LCDGotoXY
  4220  000FB0  0EDA               	movlw	low STR_40
  4221  000FB2  6E46               	movwf	LCDWriteString@msg,c
  4222  000FB4  0E7F               	movlw	high STR_40
  4223  000FB6  6E47               	movwf	LCDWriteString@msg+1,c
  4224  000FB8  ECD3  F009         	call	_LCDWriteString	;wreg free
  4225                           
  4226                           ;lcd_functions.c: 572: { LCDGotoXY(1,0); LCDWriteString("%1");};
  4227  000FBC  0E00               	movlw	0
  4228  000FBE  6E46               	movwf	LCDGotoXY@y,c
  4229  000FC0  0E01               	movlw	1
  4230  000FC2  EC6F  F00D         	call	_LCDGotoXY
  4231  000FC6  0EDD               	movlw	low STR_41
  4232  000FC8  6E46               	movwf	LCDWriteString@msg,c
  4233  000FCA  0E7F               	movlw	high STR_41
  4234  000FCC  6E47               	movwf	LCDWriteString@msg+1,c
  4235  000FCE  ECD3  F009         	call	_LCDWriteString	;wreg free
  4236                           
  4237                           ;lcd_functions.c: 573: { LCDGotoXY(0,1); LCDWriteString("%4");};
  4238  000FD2  0E01               	movlw	1
  4239  000FD4  6E46               	movwf	LCDGotoXY@y,c
  4240  000FD6  0E00               	movlw	0
  4241  000FD8  EC6F  F00D         	call	_LCDGotoXY
  4242  000FDC  0EE6               	movlw	low STR_42
  4243  000FDE  6E46               	movwf	LCDWriteString@msg,c
  4244  000FE0  0E7F               	movlw	high STR_42
  4245  000FE2  6E47               	movwf	LCDWriteString@msg+1,c
  4246  000FE4  ECD3  F009         	call	_LCDWriteString	;wreg free
  4247                           
  4248                           ;lcd_functions.c: 574: { LCDGotoXY(1,1); LCDWriteString(" ");};
  4249  000FE8  0E01               	movlw	1
  4250  000FEA  6E46               	movwf	LCDGotoXY@y,c
  4251  000FEC  0E01               	movlw	1
  4252  000FEE  EC6F  F00D         	call	_LCDGotoXY
  4253  000FF2  0EAE               	movlw	low (STR_21+15)
  4254  000FF4  6E46               	movwf	LCDWriteString@msg,c
  4255  000FF6  0E7E               	movlw	high (STR_21+15)
  4256  000FF8  6E47               	movwf	LCDWriteString@msg+1,c
  4257  000FFA  ECD3  F009         	call	_LCDWriteString	;wreg free
  4258                           
  4259                           ;lcd_functions.c: 575: { LCDGotoXY(2,1); LCDWriteString("%5");};
  4260  000FFE  0E01               	movlw	1
  4261  001000  6E46               	movwf	LCDGotoXY@y,c
  4262  001002  0E02               	movlw	2
  4263  001004  EC6F  F00D         	call	_LCDGotoXY
  4264  001008  0EEC               	movlw	low STR_44
  4265  00100A  6E46               	movwf	LCDWriteString@msg,c
  4266  00100C  0E7F               	movlw	high STR_44
  4267  00100E  6E47               	movwf	LCDWriteString@msg+1,c
  4268  001010  ECD3  F009         	call	_LCDWriteString	;wreg free
  4269                           
  4270                           ;lcd_functions.c: 577: { LCDGotoXY(14,0); LCDWriteString("%2");};
  4271  001014  0E00               	movlw	0
  4272  001016  6E46               	movwf	LCDGotoXY@y,c
  4273  001018  0E0E               	movlw	14
  4274  00101A  EC6F  F00D         	call	_LCDGotoXY
  4275  00101E  0EE0               	movlw	low STR_45
  4276  001020  6E46               	movwf	LCDWriteString@msg,c
  4277  001022  0E7F               	movlw	high STR_45
  4278  001024  6E47               	movwf	LCDWriteString@msg+1,c
  4279  001026  ECD3  F009         	call	_LCDWriteString	;wreg free
  4280                           
  4281                           ;lcd_functions.c: 578: { LCDGotoXY(15,0); LCDWriteString("%3");};
  4282  00102A  0E00               	movlw	0
  4283  00102C  6E46               	movwf	LCDGotoXY@y,c
  4284  00102E  0E0F               	movlw	15
  4285  001030  EC6F  F00D         	call	_LCDGotoXY
  4286  001034  0EE3               	movlw	low STR_46
  4287  001036  6E46               	movwf	LCDWriteString@msg,c
  4288  001038  0E7F               	movlw	high STR_46
  4289  00103A  6E47               	movwf	LCDWriteString@msg+1,c
  4290  00103C  ECD3  F009         	call	_LCDWriteString	;wreg free
  4291                           
  4292                           ;lcd_functions.c: 579: { LCDGotoXY(14,1); LCDWriteString("%6");};
  4293  001040  0E01               	movlw	1
  4294  001042  6E46               	movwf	LCDGotoXY@y,c
  4295  001044  0E0E               	movlw	14
  4296  001046  EC6F  F00D         	call	_LCDGotoXY
  4297  00104A  0EEF               	movlw	low STR_47
  4298  00104C  6E46               	movwf	LCDWriteString@msg,c
  4299  00104E  0E7F               	movlw	high STR_47
  4300  001050  6E47               	movwf	LCDWriteString@msg+1,c
  4301  001052  ECD3  F009         	call	_LCDWriteString	;wreg free
  4302                           
  4303                           ;lcd_functions.c: 580: { LCDGotoXY(15,1); LCDWriteString("%7");};
  4304  001056  0E01               	movlw	1
  4305  001058  6E46               	movwf	LCDGotoXY@y,c
  4306  00105A  0E0F               	movlw	15
  4307  00105C  EC6F  F00D         	call	_LCDGotoXY
  4308  001060  0EF2               	movlw	low STR_48
  4309  001062  6E46               	movwf	LCDWriteString@msg,c
  4310  001064  0E7F               	movlw	high STR_48
  4311  001066  6E47               	movwf	LCDWriteString@msg+1,c
  4312  001068  ECD3  F009         	call	_LCDWriteString	;wreg free
  4313                           
  4314                           ;lcd_functions.c: 581: { LCDGotoXY(13,1); LCDWriteString("%5");};
  4315  00106C  0E01               	movlw	1
  4316  00106E  6E46               	movwf	LCDGotoXY@y,c
  4317  001070  0E0D               	movlw	13
  4318  001072  EC6F  F00D         	call	_LCDGotoXY
  4319  001076  0EEC               	movlw	low STR_44
  4320  001078  6E46               	movwf	LCDWriteString@msg,c
  4321  00107A  0E7F               	movlw	high STR_44
  4322  00107C  6E47               	movwf	LCDWriteString@msg+1,c
  4323  00107E  ECD3  F009         	call	_LCDWriteString	;wreg free
  4324                           
  4325                           ;lcd_functions.c: 583: if(i%4) {
  4326  001082  C021  F049         	movff	_i,??_lcd_connection
  4327  001086  0E03               	movlw	3
  4328  001088  1649               	andwf	??_lcd_connection,f,c
  4329  00108A  B4D8               	btfsc	status,2,c
  4330  00108C  D00C               	goto	l4993
  4331                           
  4332                           ;lcd_functions.c: 584: { LCDGotoXY(2,0); LCDWriteString(" Connecting");};
  4333  00108E  0E00               	movlw	0
  4334  001090  6E46               	movwf	LCDGotoXY@y,c
  4335  001092  0E02               	movlw	2
  4336  001094  EC6F  F00D         	call	_LCDGotoXY
  4337  001098  0E61               	movlw	low STR_50
  4338  00109A  6E46               	movwf	LCDWriteString@msg,c
  4339  00109C  0E7F               	movlw	high STR_50
  4340  00109E  6E47               	movwf	LCDWriteString@msg+1,c
  4341  0010A0  ECD3  F009         	call	_LCDWriteString	;wreg free
  4342                           
  4343                           ;lcd_functions.c: 585: } else {
  4344  0010A4  D00C               	goto	l4997
  4345  0010A6                     l4993:
  4346                           
  4347                           ;lcd_functions.c: 586: { LCDGotoXY(3,0); LCDWriteString("           ");};
  4348  0010A6  0E00               	movlw	0
  4349  0010A8  6E46               	movwf	LCDGotoXY@y,c
  4350  0010AA  0E03               	movlw	3
  4351  0010AC  EC6F  F00D         	call	_LCDGotoXY
  4352  0010B0  0EA4               	movlw	low (STR_21+5)
  4353  0010B2  6E46               	movwf	LCDWriteString@msg,c
  4354  0010B4  0E7E               	movlw	high (STR_21+5)
  4355  0010B6  6E47               	movwf	LCDWriteString@msg+1,c
  4356  0010B8  ECD3  F009         	call	_LCDWriteString	;wreg free
  4357  0010BC  D000               	goto	l4997
  4358  0010BE                     l4997:
  4359                           
  4360                           ;lcd_functions.c: 587: }
  4361                           ;lcd_functions.c: 588: if(j) {
  4362  0010BE  5024               	movf	_j,w,c
  4363  0010C0  B4D8               	btfsc	status,2,c
  4364  0010C2  D00D               	goto	l5003
  4365                           
  4366                           ;lcd_functions.c: 589: { LCDGotoXY(2+i,1); LCDWriteString("\176");};
  4367  0010C4  0E01               	movlw	1
  4368  0010C6  6E46               	movwf	LCDGotoXY@y,c
  4369  0010C8  5021               	movf	_i,w,c
  4370  0010CA  0F02               	addlw	2
  4371  0010CC  EC6F  F00D         	call	_LCDGotoXY
  4372  0010D0  0EFA               	movlw	low STR_52
  4373  0010D2  6E46               	movwf	LCDWriteString@msg,c
  4374  0010D4  0E7F               	movlw	high STR_52
  4375  0010D6  6E47               	movwf	LCDWriteString@msg+1,c
  4376  0010D8  ECD3  F009         	call	_LCDWriteString	;wreg free
  4377                           
  4378                           ;lcd_functions.c: 590: } else {
  4379  0010DC  D00D               	goto	l5007
  4380  0010DE                     l5003:
  4381                           
  4382                           ;lcd_functions.c: 591: { LCDGotoXY(2+i,1); LCDWriteString("\177");};
  4383  0010DE  0E01               	movlw	1
  4384  0010E0  6E46               	movwf	LCDGotoXY@y,c
  4385  0010E2  5021               	movf	_i,w,c
  4386  0010E4  0F02               	addlw	2
  4387  0010E6  EC6F  F00D         	call	_LCDGotoXY
  4388  0010EA  0EFC               	movlw	low STR_53
  4389  0010EC  6E46               	movwf	LCDWriteString@msg,c
  4390  0010EE  0E7F               	movlw	high STR_53
  4391  0010F0  6E47               	movwf	LCDWriteString@msg+1,c
  4392  0010F2  ECD3  F009         	call	_LCDWriteString	;wreg free
  4393  0010F6  D000               	goto	l5007
  4394  0010F8                     l5007:
  4395                           
  4396                           ;lcd_functions.c: 592: }
  4397                           ;lcd_functions.c: 594: if (i == 11 || i == 0) {
  4398  0010F8  0E0B               	movlw	11
  4399  0010FA  1821               	xorwf	_i,w,c
  4400  0010FC  B4D8               	btfsc	status,2,c
  4401  0010FE  D003               	goto	l5011
  4402  001100  5021               	movf	_i,w,c
  4403  001102  A4D8               	btfss	status,2,c
  4404  001104  D007               	goto	l743
  4405  001106                     l5011:
  4406                           
  4407                           ;lcd_functions.c: 595: j = !j;
  4408  001106  5024               	movf	_j,w,c
  4409  001108  A4D8               	btfss	status,2,c
  4410  00110A  D002               	goto	u4170
  4411  00110C  0E01               	movlw	1
  4412  00110E  D001               	goto	u4180
  4413  001110                     u4170:
  4414  001110  0E00               	movlw	0
  4415  001112                     u4180:
  4416  001112  6E24               	movwf	_j,c
  4417  001114                     l743:
  4418                           
  4419                           ;lcd_functions.c: 596: }
  4420                           ;lcd_functions.c: 598: if (j) {
  4421  001114  5024               	movf	_j,w,c
  4422  001116  B4D8               	btfsc	status,2,c
  4423  001118  D002               	goto	l5015
  4424                           
  4425                           ;lcd_functions.c: 599: i++;
  4426  00111A  2A21               	incf	_i,f,c
  4427                           
  4428                           ;lcd_functions.c: 600: } else {
  4429  00111C  D002               	goto	l5017
  4430  00111E                     l5015:
  4431                           
  4432                           ;lcd_functions.c: 601: i--;
  4433  00111E  0621               	decf	_i,f,c
  4434  001120  D000               	goto	l5017
  4435  001122                     l5017:
  4436                           
  4437                           ;lcd_functions.c: 602: }
  4438                           ;lcd_functions.c: 603: scrs_cnt = 0;
  4439  001122  0E00               	movlw	0
  4440  001124  6E2A               	movwf	_scrs_cnt,c
  4441  001126  D000               	goto	l748
  4442  001128                     l748:
  4443  001128  0012               	return		;funcret
  4444  00112A                     __end_of_lcd_connection:
  4445                           	opt stack 0
  4446                           tblptru	equ	0xFF8
  4447                           tblptrh	equ	0xFF7
  4448                           tblptrl	equ	0xFF6
  4449                           tablat	equ	0xFF5
  4450                           prodh	equ	0xFF4
  4451                           prodl	equ	0xFF3
  4452                           intcon	equ	0xFF2
  4453                           postinc0	equ	0xFEE
  4454                           wreg	equ	0xFE8
  4455                           postdec1	equ	0xFE5
  4456                           plusw1	equ	0xFE3
  4457                           fsr1l	equ	0xFE1
  4458                           indf2	equ	0xFDF
  4459                           plusw2	equ	0xFDB
  4460                           fsr2h	equ	0xFDA
  4461                           fsr2l	equ	0xFD9
  4462                           status	equ	0xFD8
  4463                           
  4464 ;; *************** function _lcd_sub_menu_tetten *****************
  4465 ;; Defined at:
  4466 ;;		line 385 in file "lcd_functions.c"
  4467 ;; Parameters:    Size  Location     Type
  4468 ;;		None
  4469 ;; Auto vars:     Size  Location     Type
  4470 ;;		None
  4471 ;; Return value:  Size  Location     Type
  4472 ;;		None               void
  4473 ;; Registers used:
  4474 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4475 ;; Tracked objects:
  4476 ;;		On entry : 0/0
  4477 ;;		On exit  : 0/0
  4478 ;;		Unchanged: 0/0
  4479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4480 ;;      Params:         0       0       0       0       0       0       0       0       0
  4481 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4482 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4483 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4484 ;;Total ram usage:        0 bytes
  4485 ;; Hardware stack levels used:    1
  4486 ;; Hardware stack levels required when called:    5
  4487 ;; This function calls:
  4488 ;;		_lcd_screensaver
  4489 ;; This function is called by:
  4490 ;;		_lcd_main_menu_fsm
  4491 ;; This function uses a non-reentrant model
  4492 ;;
  4493                           
  4494                           	psect	text8
  4495  001BFE                     __ptext8:
  4496                           	opt stack 0
  4497  001BFE                     _lcd_sub_menu_tetten:
  4498                           	opt stack 24
  4499                           
  4500                           ;lcd_functions.c: 386: lcd_screensaver();
  4501                           
  4502                           ;incstack = 0
  4503  001BFE  ECE6  F006         	call	_lcd_screensaver	;wreg free
  4504  001C02  0012               	return		;funcret
  4505  001C04                     __end_of_lcd_sub_menu_tetten:
  4506                           	opt stack 0
  4507                           tblptru	equ	0xFF8
  4508                           tblptrh	equ	0xFF7
  4509                           tblptrl	equ	0xFF6
  4510                           tablat	equ	0xFF5
  4511                           prodh	equ	0xFF4
  4512                           prodl	equ	0xFF3
  4513                           intcon	equ	0xFF2
  4514                           postinc0	equ	0xFEE
  4515                           wreg	equ	0xFE8
  4516                           postdec1	equ	0xFE5
  4517                           plusw1	equ	0xFE3
  4518                           fsr1l	equ	0xFE1
  4519                           indf2	equ	0xFDF
  4520                           plusw2	equ	0xFDB
  4521                           fsr2h	equ	0xFDA
  4522                           fsr2l	equ	0xFD9
  4523                           status	equ	0xFD8
  4524                           
  4525 ;; *************** function _lcd_screensaver *****************
  4526 ;; Defined at:
  4527 ;;		line 607 in file "lcd_functions.c"
  4528 ;; Parameters:    Size  Location     Type
  4529 ;;		None
  4530 ;; Auto vars:     Size  Location     Type
  4531 ;;		None
  4532 ;; Return value:  Size  Location     Type
  4533 ;;		None               void
  4534 ;; Registers used:
  4535 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4536 ;; Tracked objects:
  4537 ;;		On entry : 0/0
  4538 ;;		On exit  : 0/0
  4539 ;;		Unchanged: 0/0
  4540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4541 ;;      Params:         0       0       0       0       0       0       0       0       0
  4542 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4543 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4544 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4545 ;;Total ram usage:        0 bytes
  4546 ;; Hardware stack levels used:    1
  4547 ;; Hardware stack levels required when called:    4
  4548 ;; This function calls:
  4549 ;;		_LCDByte
  4550 ;;		_LCDGotoXY
  4551 ;;		_LCDLoadCostum
  4552 ;;		_LCDWriteString
  4553 ;; This function is called by:
  4554 ;;		_lcd_sub_menu_tetten
  4555 ;; This function uses a non-reentrant model
  4556 ;;
  4557                           
  4558                           	psect	text9
  4559  000DCC                     __ptext9:
  4560                           	opt stack 0
  4561  000DCC                     _lcd_screensaver:
  4562                           	opt stack 24
  4563                           
  4564                           ;lcd_functions.c: 608: scrs_cnt++;
  4565                           
  4566                           ;incstack = 0
  4567  000DCC  2A2A               	incf	_scrs_cnt,f,c
  4568                           
  4569                           ;lcd_functions.c: 609: if (scrs_cnt == scrs_speed) {
  4570  000DCE  5051               	movf	_scrs_speed,w,c
  4571  000DD0  182A               	xorwf	_scrs_cnt,w,c
  4572  000DD2  A4D8               	btfss	status,2,c
  4573  000DD4  D0DF               	goto	l766
  4574                           
  4575                           ;lcd_functions.c: 610: if ((i == 0) || (i == 4) || (i == 8)) {
  4576  000DD6  5021               	movf	_i,w,c
  4577  000DD8  B4D8               	btfsc	status,2,c
  4578  000DDA  D008               	goto	l4857
  4579  000DDC  0E04               	movlw	4
  4580  000DDE  1821               	xorwf	_i,w,c
  4581  000DE0  B4D8               	btfsc	status,2,c
  4582  000DE2  D004               	goto	l4857
  4583  000DE4  0E08               	movlw	8
  4584  000DE6  1821               	xorwf	_i,w,c
  4585  000DE8  A4D8               	btfss	status,2,c
  4586  000DEA  D004               	goto	l4859
  4587  000DEC                     l4857:
  4588                           
  4589                           ;lcd_functions.c: 611: LCDLoadCostum(2);
  4590  000DEC  0E02               	movlw	2
  4591  000DEE  EC95  F008         	call	_LCDLoadCostum
  4592  000DF2  D000               	goto	l4859
  4593  000DF4                     l4859:
  4594                           
  4595                           ;lcd_functions.c: 612: }
  4596                           ;lcd_functions.c: 613: if ((i == 1) || (i == 3) || (i == 5) || (i == 7) || (i == 9)) {
  4597  000DF4  0421               	decf	_i,w,c
  4598  000DF6  B4D8               	btfsc	status,2,c
  4599  000DF8  D010               	goto	l4869
  4600  000DFA  0E03               	movlw	3
  4601  000DFC  1821               	xorwf	_i,w,c
  4602  000DFE  B4D8               	btfsc	status,2,c
  4603  000E00  D00C               	goto	l4869
  4604  000E02  0E05               	movlw	5
  4605  000E04  1821               	xorwf	_i,w,c
  4606  000E06  B4D8               	btfsc	status,2,c
  4607  000E08  D008               	goto	l4869
  4608  000E0A  0E07               	movlw	7
  4609  000E0C  1821               	xorwf	_i,w,c
  4610  000E0E  B4D8               	btfsc	status,2,c
  4611  000E10  D004               	goto	l4869
  4612  000E12  0E09               	movlw	9
  4613  000E14  1821               	xorwf	_i,w,c
  4614  000E16  A4D8               	btfss	status,2,c
  4615  000E18  D004               	goto	l4871
  4616  000E1A                     l4869:
  4617                           
  4618                           ;lcd_functions.c: 614: LCDLoadCostum(1);
  4619  000E1A  0E01               	movlw	1
  4620  000E1C  EC95  F008         	call	_LCDLoadCostum
  4621  000E20  D000               	goto	l4871
  4622  000E22                     l4871:
  4623                           
  4624                           ;lcd_functions.c: 615: }
  4625                           ;lcd_functions.c: 616: if ((i == 2) || (i == 6) || (i == 10)) {
  4626  000E22  0E02               	movlw	2
  4627  000E24  1821               	xorwf	_i,w,c
  4628  000E26  B4D8               	btfsc	status,2,c
  4629  000E28  D008               	goto	l4877
  4630  000E2A  0E06               	movlw	6
  4631  000E2C  1821               	xorwf	_i,w,c
  4632  000E2E  B4D8               	btfsc	status,2,c
  4633  000E30  D004               	goto	l4877
  4634  000E32  0E0A               	movlw	10
  4635  000E34  1821               	xorwf	_i,w,c
  4636  000E36  A4D8               	btfss	status,2,c
  4637  000E38  D004               	goto	l4879
  4638  000E3A                     l4877:
  4639                           
  4640                           ;lcd_functions.c: 617: LCDLoadCostum(0);
  4641  000E3A  0E00               	movlw	0
  4642  000E3C  EC95  F008         	call	_LCDLoadCostum
  4643  000E40  D000               	goto	l4879
  4644  000E42                     l4879:
  4645                           
  4646                           ;lcd_functions.c: 618: }
  4647                           ;lcd_functions.c: 620: (LCDByte(0b00000001,0));
  4648  000E42  0E00               	movlw	0
  4649  000E44  6E40               	movwf	LCDByte@isdata,c
  4650  000E46  0E01               	movlw	1
  4651  000E48  ECB1  F00C         	call	_LCDByte
  4652                           
  4653                           ;lcd_functions.c: 621: { LCDGotoXY(i,0); LCDWriteString("%0");};
  4654  000E4C  0E00               	movlw	0
  4655  000E4E  6E46               	movwf	LCDGotoXY@y,c
  4656  000E50  5021               	movf	_i,w,c
  4657  000E52  EC6F  F00D         	call	_LCDGotoXY
  4658  000E56  0EDA               	movlw	low STR_40
  4659  000E58  6E46               	movwf	LCDWriteString@msg,c
  4660  000E5A  0E7F               	movlw	high STR_40
  4661  000E5C  6E47               	movwf	LCDWriteString@msg+1,c
  4662  000E5E  ECD3  F009         	call	_LCDWriteString	;wreg free
  4663                           
  4664                           ;lcd_functions.c: 622: { LCDGotoXY(i + 1,0); LCDWriteString("%1");};
  4665  000E62  0E00               	movlw	0
  4666  000E64  6E46               	movwf	LCDGotoXY@y,c
  4667  000E66  2821               	incf	_i,w,c
  4668  000E68  EC6F  F00D         	call	_LCDGotoXY
  4669  000E6C  0EDD               	movlw	low STR_41
  4670  000E6E  6E46               	movwf	LCDWriteString@msg,c
  4671  000E70  0E7F               	movlw	high STR_41
  4672  000E72  6E47               	movwf	LCDWriteString@msg+1,c
  4673  000E74  ECD3  F009         	call	_LCDWriteString	;wreg free
  4674                           
  4675                           ;lcd_functions.c: 623: { LCDGotoXY(i + 2,0); LCDWriteString("%2");};
  4676  000E78  0E00               	movlw	0
  4677  000E7A  6E46               	movwf	LCDGotoXY@y,c
  4678  000E7C  5021               	movf	_i,w,c
  4679  000E7E  0F02               	addlw	2
  4680  000E80  EC6F  F00D         	call	_LCDGotoXY
  4681  000E84  0EE0               	movlw	low STR_45
  4682  000E86  6E46               	movwf	LCDWriteString@msg,c
  4683  000E88  0E7F               	movlw	high STR_45
  4684  000E8A  6E47               	movwf	LCDWriteString@msg+1,c
  4685  000E8C  ECD3  F009         	call	_LCDWriteString	;wreg free
  4686                           
  4687                           ;lcd_functions.c: 625: { LCDGotoXY(i,1); LCDWriteString("%3");};
  4688  000E90  0E01               	movlw	1
  4689  000E92  6E46               	movwf	LCDGotoXY@y,c
  4690  000E94  5021               	movf	_i,w,c
  4691  000E96  EC6F  F00D         	call	_LCDGotoXY
  4692  000E9A  0EE3               	movlw	low STR_46
  4693  000E9C  6E46               	movwf	LCDWriteString@msg,c
  4694  000E9E  0E7F               	movlw	high STR_46
  4695  000EA0  6E47               	movwf	LCDWriteString@msg+1,c
  4696  000EA2  ECD3  F009         	call	_LCDWriteString	;wreg free
  4697                           
  4698                           ;lcd_functions.c: 626: { LCDGotoXY(i + 1,1); LCDWriteString("%4");};
  4699  000EA6  0E01               	movlw	1
  4700  000EA8  6E46               	movwf	LCDGotoXY@y,c
  4701  000EAA  2821               	incf	_i,w,c
  4702  000EAC  EC6F  F00D         	call	_LCDGotoXY
  4703  000EB0  0EE6               	movlw	low STR_42
  4704  000EB2  6E46               	movwf	LCDWriteString@msg,c
  4705  000EB4  0E7F               	movlw	high STR_42
  4706  000EB6  6E47               	movwf	LCDWriteString@msg+1,c
  4707  000EB8  ECD3  F009         	call	_LCDWriteString	;wreg free
  4708                           
  4709                           ;lcd_functions.c: 627: { LCDGotoXY(i + 2,1); LCDWriteString("%5");};
  4710  000EBC  0E01               	movlw	1
  4711  000EBE  6E46               	movwf	LCDGotoXY@y,c
  4712  000EC0  5021               	movf	_i,w,c
  4713  000EC2  0F02               	addlw	2
  4714  000EC4  EC6F  F00D         	call	_LCDGotoXY
  4715  000EC8  0EEC               	movlw	low STR_44
  4716  000ECA  6E46               	movwf	LCDWriteString@msg,c
  4717  000ECC  0E7F               	movlw	high STR_44
  4718  000ECE  6E47               	movwf	LCDWriteString@msg+1,c
  4719  000ED0  ECD3  F009         	call	_LCDWriteString	;wreg free
  4720                           
  4721                           ;lcd_functions.c: 630: { LCDGotoXY(i + 3,0); LCDWriteString("%0");};
  4722  000ED4  0E00               	movlw	0
  4723  000ED6  6E46               	movwf	LCDGotoXY@y,c
  4724  000ED8  5021               	movf	_i,w,c
  4725  000EDA  0F03               	addlw	3
  4726  000EDC  EC6F  F00D         	call	_LCDGotoXY
  4727  000EE0  0EDA               	movlw	low STR_40
  4728  000EE2  6E46               	movwf	LCDWriteString@msg,c
  4729  000EE4  0E7F               	movlw	high STR_40
  4730  000EE6  6E47               	movwf	LCDWriteString@msg+1,c
  4731  000EE8  ECD3  F009         	call	_LCDWriteString	;wreg free
  4732                           
  4733                           ;lcd_functions.c: 631: { LCDGotoXY(i + 4,0); LCDWriteString("%1");};
  4734  000EEC  0E00               	movlw	0
  4735  000EEE  6E46               	movwf	LCDGotoXY@y,c
  4736  000EF0  5021               	movf	_i,w,c
  4737  000EF2  0F04               	addlw	4
  4738  000EF4  EC6F  F00D         	call	_LCDGotoXY
  4739  000EF8  0EDD               	movlw	low STR_41
  4740  000EFA  6E46               	movwf	LCDWriteString@msg,c
  4741  000EFC  0E7F               	movlw	high STR_41
  4742  000EFE  6E47               	movwf	LCDWriteString@msg+1,c
  4743  000F00  ECD3  F009         	call	_LCDWriteString	;wreg free
  4744                           
  4745                           ;lcd_functions.c: 632: { LCDGotoXY(i + 5,0); LCDWriteString("%2");};
  4746  000F04  0E00               	movlw	0
  4747  000F06  6E46               	movwf	LCDGotoXY@y,c
  4748  000F08  5021               	movf	_i,w,c
  4749  000F0A  0F05               	addlw	5
  4750  000F0C  EC6F  F00D         	call	_LCDGotoXY
  4751  000F10  0EE0               	movlw	low STR_45
  4752  000F12  6E46               	movwf	LCDWriteString@msg,c
  4753  000F14  0E7F               	movlw	high STR_45
  4754  000F16  6E47               	movwf	LCDWriteString@msg+1,c
  4755  000F18  ECD3  F009         	call	_LCDWriteString	;wreg free
  4756                           
  4757                           ;lcd_functions.c: 634: { LCDGotoXY(i + 3,1); LCDWriteString("%3");};
  4758  000F1C  0E01               	movlw	1
  4759  000F1E  6E46               	movwf	LCDGotoXY@y,c
  4760  000F20  5021               	movf	_i,w,c
  4761  000F22  0F03               	addlw	3
  4762  000F24  EC6F  F00D         	call	_LCDGotoXY
  4763  000F28  0EE3               	movlw	low STR_46
  4764  000F2A  6E46               	movwf	LCDWriteString@msg,c
  4765  000F2C  0E7F               	movlw	high STR_46
  4766  000F2E  6E47               	movwf	LCDWriteString@msg+1,c
  4767  000F30  ECD3  F009         	call	_LCDWriteString	;wreg free
  4768                           
  4769                           ;lcd_functions.c: 635: { LCDGotoXY(i + 4,1); LCDWriteString("%4");};
  4770  000F34  0E01               	movlw	1
  4771  000F36  6E46               	movwf	LCDGotoXY@y,c
  4772  000F38  5021               	movf	_i,w,c
  4773  000F3A  0F04               	addlw	4
  4774  000F3C  EC6F  F00D         	call	_LCDGotoXY
  4775  000F40  0EE6               	movlw	low STR_42
  4776  000F42  6E46               	movwf	LCDWriteString@msg,c
  4777  000F44  0E7F               	movlw	high STR_42
  4778  000F46  6E47               	movwf	LCDWriteString@msg+1,c
  4779  000F48  ECD3  F009         	call	_LCDWriteString	;wreg free
  4780                           
  4781                           ;lcd_functions.c: 636: { LCDGotoXY(i + 5,1); LCDWriteString("%5");};
  4782  000F4C  0E01               	movlw	1
  4783  000F4E  6E46               	movwf	LCDGotoXY@y,c
  4784  000F50  5021               	movf	_i,w,c
  4785  000F52  0F05               	addlw	5
  4786  000F54  EC6F  F00D         	call	_LCDGotoXY
  4787  000F58  0EEC               	movlw	low STR_44
  4788  000F5A  6E46               	movwf	LCDWriteString@msg,c
  4789  000F5C  0E7F               	movlw	high STR_44
  4790  000F5E  6E47               	movwf	LCDWriteString@msg+1,c
  4791  000F60  ECD3  F009         	call	_LCDWriteString	;wreg free
  4792                           
  4793                           ;lcd_functions.c: 638: if (i == 10 || i == 0) {
  4794  000F64  0E0A               	movlw	10
  4795  000F66  1821               	xorwf	_i,w,c
  4796  000F68  B4D8               	btfsc	status,2,c
  4797  000F6A  D003               	goto	l4933
  4798  000F6C  5021               	movf	_i,w,c
  4799  000F6E  A4D8               	btfss	status,2,c
  4800  000F70  D007               	goto	l761
  4801  000F72                     l4933:
  4802                           
  4803                           ;lcd_functions.c: 639: j = !j;
  4804  000F72  5024               	movf	_j,w,c
  4805  000F74  A4D8               	btfss	status,2,c
  4806  000F76  D002               	goto	u4090
  4807  000F78  0E01               	movlw	1
  4808  000F7A  D001               	goto	u4100
  4809  000F7C                     u4090:
  4810  000F7C  0E00               	movlw	0
  4811  000F7E                     u4100:
  4812  000F7E  6E24               	movwf	_j,c
  4813  000F80                     l761:
  4814                           
  4815                           ;lcd_functions.c: 640: }
  4816                           ;lcd_functions.c: 642: if (j) {
  4817  000F80  5024               	movf	_j,w,c
  4818  000F82  B4D8               	btfsc	status,2,c
  4819  000F84  D002               	goto	l4937
  4820                           
  4821                           ;lcd_functions.c: 643: i++;
  4822  000F86  2A21               	incf	_i,f,c
  4823                           
  4824                           ;lcd_functions.c: 644: } else {
  4825  000F88  D002               	goto	l4939
  4826  000F8A                     l4937:
  4827                           
  4828                           ;lcd_functions.c: 645: i--;
  4829  000F8A  0621               	decf	_i,f,c
  4830  000F8C  D000               	goto	l4939
  4831  000F8E                     l4939:
  4832                           
  4833                           ;lcd_functions.c: 646: }
  4834                           ;lcd_functions.c: 648: scrs_cnt = 0;
  4835  000F8E  0E00               	movlw	0
  4836  000F90  6E2A               	movwf	_scrs_cnt,c
  4837  000F92  D000               	goto	l766
  4838  000F94                     l766:
  4839  000F94  0012               	return		;funcret
  4840  000F96                     __end_of_lcd_screensaver:
  4841                           	opt stack 0
  4842                           tblptru	equ	0xFF8
  4843                           tblptrh	equ	0xFF7
  4844                           tblptrl	equ	0xFF6
  4845                           tablat	equ	0xFF5
  4846                           prodh	equ	0xFF4
  4847                           prodl	equ	0xFF3
  4848                           intcon	equ	0xFF2
  4849                           postinc0	equ	0xFEE
  4850                           wreg	equ	0xFE8
  4851                           postdec1	equ	0xFE5
  4852                           plusw1	equ	0xFE3
  4853                           fsr1l	equ	0xFE1
  4854                           indf2	equ	0xFDF
  4855                           plusw2	equ	0xFDB
  4856                           fsr2h	equ	0xFDA
  4857                           fsr2l	equ	0xFD9
  4858                           status	equ	0xFD8
  4859                           
  4860 ;; *************** function _LCDLoadCostum *****************
  4861 ;; Defined at:
  4862 ;;		line 258 in file "lcd_hd44780.c"
  4863 ;; Parameters:    Size  Location     Type
  4864 ;;  select          1    wreg     unsigned char 
  4865 ;; Auto vars:     Size  Location     Type
  4866 ;;  select          1   23[COMRAM] unsigned char 
  4867 ;;  __i             1   24[COMRAM] unsigned char 
  4868 ;; Return value:  Size  Location     Type
  4869 ;;		None               void
  4870 ;; Registers used:
  4871 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4872 ;; Tracked objects:
  4873 ;;		On entry : 0/0
  4874 ;;		On exit  : 0/0
  4875 ;;		Unchanged: 0/0
  4876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4877 ;;      Params:         0       0       0       0       0       0       0       0       0
  4878 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4879 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4880 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4881 ;;Total ram usage:        2 bytes
  4882 ;; Hardware stack levels used:    1
  4883 ;; Hardware stack levels required when called:    3
  4884 ;; This function calls:
  4885 ;;		_LCDByte
  4886 ;; This function is called by:
  4887 ;;		_lcd_connection
  4888 ;;		_lcd_screensaver
  4889 ;; This function uses a non-reentrant model
  4890 ;;
  4891                           
  4892                           	psect	text10
  4893  00112A                     __ptext10:
  4894                           	opt stack 0
  4895  00112A                     _LCDLoadCostum:
  4896                           	opt stack 25
  4897                           
  4898                           ;incstack = 0
  4899                           ;LCDLoadCostum@select stored from wreg
  4900  00112A  6E46               	movwf	LCDLoadCostum@select,c
  4901                           
  4902                           ;lcd_hd44780.c: 260: (LCDByte(0b01000000,0));
  4903  00112C  0E00               	movlw	0
  4904  00112E  6E40               	movwf	LCDByte@isdata,c
  4905  001130  0E40               	movlw	64
  4906  001132  ECB1  F00C         	call	_LCDByte
  4907                           
  4908                           ;lcd_hd44780.c: 261: uint8_t __i;
  4909                           ;lcd_hd44780.c: 262: switch (select) {
  4910  001136  D08A               	goto	l4681
  4911  001138                     l4607:
  4912                           
  4913                           ;lcd_hd44780.c: 264: for (__i = 0; __i<sizeof (__costum0); __i++)
  4914  001138  0E00               	movlw	0
  4915  00113A  6E47               	movwf	LCDLoadCostum@__i,c
  4916  00113C                     l4609:
  4917  00113C  0E3F               	movlw	63
  4918  00113E  6447               	cpfsgt	LCDLoadCostum@__i,c
  4919  001140  D001               	goto	l4613
  4920  001142  D095               	goto	l160
  4921  001144                     l4613:
  4922                           
  4923                           ;lcd_hd44780.c: 265: (LCDByte(__costum0[__i],1));
  4924  001144  0E01               	movlw	1
  4925  001146  6E40               	movwf	LCDByte@isdata,c
  4926  001148  5047               	movf	LCDLoadCostum@__i,w,c
  4927  00114A  0D01               	mullw	1
  4928  00114C  0E5B               	movlw	low ___costum0
  4929  00114E  24F3               	addwf	prodl,w,c
  4930  001150  6EF6               	movwf	tblptrl,c
  4931  001152  0E7D               	movlw	high ___costum0
  4932  001154  20F4               	addwfc	prodh,w,c
  4933  001156  6EF7               	movwf	tblptrh,c
  4934  001158                     	if	0	;There are less than 3 active tblptr bytes
  4935  001158                     	endif
  4936  001158  0008               	tblrd		*
  4937  00115A  50F5               	movf	tablat,w,c
  4938  00115C  ECB1  F00C         	call	_LCDByte
  4939  001160  2A47               	incf	LCDLoadCostum@__i,f,c
  4940  001162  D7EC               	goto	l4609
  4941                           
  4942                           ;lcd_hd44780.c: 266: break;
  4943  001164  D084               	goto	l160
  4944  001166                     l4619:
  4945                           
  4946                           ;lcd_hd44780.c: 269: for (__i = 0; __i<sizeof (__costum1); __i++)
  4947  001166  0E00               	movlw	0
  4948  001168  6E47               	movwf	LCDLoadCostum@__i,c
  4949  00116A                     l4621:
  4950  00116A  0E3F               	movlw	63
  4951  00116C  6447               	cpfsgt	LCDLoadCostum@__i,c
  4952  00116E  D001               	goto	l4625
  4953  001170  D07E               	goto	l160
  4954  001172                     l4625:
  4955                           
  4956                           ;lcd_hd44780.c: 270: (LCDByte(__costum1[__i],1));
  4957  001172  0E01               	movlw	1
  4958  001174  6E40               	movwf	LCDByte@isdata,c
  4959  001176  5047               	movf	LCDLoadCostum@__i,w,c
  4960  001178  0D01               	mullw	1
  4961  00117A  0E9B               	movlw	low ___costum1
  4962  00117C  24F3               	addwf	prodl,w,c
  4963  00117E  6EF6               	movwf	tblptrl,c
  4964  001180  0E7D               	movlw	high ___costum1
  4965  001182  20F4               	addwfc	prodh,w,c
  4966  001184  6EF7               	movwf	tblptrh,c
  4967  001186                     	if	0	;There are less than 3 active tblptr bytes
  4968  001186                     	endif
  4969  001186  0008               	tblrd		*
  4970  001188  50F5               	movf	tablat,w,c
  4971  00118A  ECB1  F00C         	call	_LCDByte
  4972  00118E  2A47               	incf	LCDLoadCostum@__i,f,c
  4973  001190  D7EC               	goto	l4621
  4974                           
  4975                           ;lcd_hd44780.c: 271: break;
  4976  001192  D06D               	goto	l160
  4977  001194                     l4631:
  4978                           
  4979                           ;lcd_hd44780.c: 274: for (__i = 0; __i<sizeof (__costum2); __i++)
  4980  001194  0E00               	movlw	0
  4981  001196  6E47               	movwf	LCDLoadCostum@__i,c
  4982  001198                     l4633:
  4983  001198  0E3F               	movlw	63
  4984  00119A  6447               	cpfsgt	LCDLoadCostum@__i,c
  4985  00119C  D001               	goto	l4637
  4986  00119E  D067               	goto	l160
  4987  0011A0                     l4637:
  4988                           
  4989                           ;lcd_hd44780.c: 275: (LCDByte(__costum2[__i],1));
  4990  0011A0  0E01               	movlw	1
  4991  0011A2  6E40               	movwf	LCDByte@isdata,c
  4992  0011A4  5047               	movf	LCDLoadCostum@__i,w,c
  4993  0011A6  0D01               	mullw	1
  4994  0011A8  0EDB               	movlw	low ___costum2
  4995  0011AA  24F3               	addwf	prodl,w,c
  4996  0011AC  6EF6               	movwf	tblptrl,c
  4997  0011AE  0E7D               	movlw	high ___costum2
  4998  0011B0  20F4               	addwfc	prodh,w,c
  4999  0011B2  6EF7               	movwf	tblptrh,c
  5000  0011B4                     	if	0	;There are less than 3 active tblptr bytes
  5001  0011B4                     	endif
  5002  0011B4  0008               	tblrd		*
  5003  0011B6  50F5               	movf	tablat,w,c
  5004  0011B8  ECB1  F00C         	call	_LCDByte
  5005  0011BC  2A47               	incf	LCDLoadCostum@__i,f,c
  5006  0011BE  D7EC               	goto	l4633
  5007                           
  5008                           ;lcd_hd44780.c: 276: break;
  5009  0011C0  D056               	goto	l160
  5010  0011C2                     l4643:
  5011                           
  5012                           ;lcd_hd44780.c: 279: for (__i = 0; __i<sizeof (__costum3); __i++)
  5013  0011C2  0E00               	movlw	0
  5014  0011C4  6E47               	movwf	LCDLoadCostum@__i,c
  5015  0011C6                     l4645:
  5016  0011C6  0E3F               	movlw	63
  5017  0011C8  6447               	cpfsgt	LCDLoadCostum@__i,c
  5018  0011CA  D001               	goto	l4649
  5019  0011CC  D050               	goto	l160
  5020  0011CE                     l4649:
  5021                           
  5022                           ;lcd_hd44780.c: 280: (LCDByte(__costum3[__i],1));
  5023  0011CE  0E01               	movlw	1
  5024  0011D0  6E40               	movwf	LCDByte@isdata,c
  5025  0011D2  5047               	movf	LCDLoadCostum@__i,w,c
  5026  0011D4  0D01               	mullw	1
  5027  0011D6  0E1B               	movlw	low ___costum3
  5028  0011D8  24F3               	addwf	prodl,w,c
  5029  0011DA  6EF6               	movwf	tblptrl,c
  5030  0011DC  0E7E               	movlw	high ___costum3
  5031  0011DE  20F4               	addwfc	prodh,w,c
  5032  0011E0  6EF7               	movwf	tblptrh,c
  5033  0011E2                     	if	0	;There are less than 3 active tblptr bytes
  5034  0011E2                     	endif
  5035  0011E2  0008               	tblrd		*
  5036  0011E4  50F5               	movf	tablat,w,c
  5037  0011E6  ECB1  F00C         	call	_LCDByte
  5038  0011EA  2A47               	incf	LCDLoadCostum@__i,f,c
  5039  0011EC  D7EC               	goto	l4645
  5040                           
  5041                           ;lcd_hd44780.c: 281: break;
  5042  0011EE  D03F               	goto	l160
  5043  0011F0                     l4655:
  5044                           
  5045                           ;lcd_hd44780.c: 284: for (__i = 0; __i<sizeof (__costum4); __i++)
  5046  0011F0  0E00               	movlw	0
  5047  0011F2  6E47               	movwf	LCDLoadCostum@__i,c
  5048  0011F4                     l4657:
  5049  0011F4  0E3F               	movlw	63
  5050  0011F6  6447               	cpfsgt	LCDLoadCostum@__i,c
  5051  0011F8  D001               	goto	l4661
  5052  0011FA  D039               	goto	l160
  5053  0011FC                     l4661:
  5054                           
  5055                           ;lcd_hd44780.c: 285: (LCDByte(__costum4[__i],1));
  5056  0011FC  0E01               	movlw	1
  5057  0011FE  6E40               	movwf	LCDByte@isdata,c
  5058  001200  5047               	movf	LCDLoadCostum@__i,w,c
  5059  001202  0D01               	mullw	1
  5060  001204  0E5B               	movlw	low ___costum4
  5061  001206  24F3               	addwf	prodl,w,c
  5062  001208  6EF6               	movwf	tblptrl,c
  5063  00120A  0E7E               	movlw	high ___costum4
  5064  00120C  20F4               	addwfc	prodh,w,c
  5065  00120E  6EF7               	movwf	tblptrh,c
  5066  001210                     	if	0	;There are less than 3 active tblptr bytes
  5067  001210                     	endif
  5068  001210  0008               	tblrd		*
  5069  001212  50F5               	movf	tablat,w,c
  5070  001214  ECB1  F00C         	call	_LCDByte
  5071  001218  2A47               	incf	LCDLoadCostum@__i,f,c
  5072  00121A  D7EC               	goto	l4657
  5073                           
  5074                           ;lcd_hd44780.c: 286: break;
  5075  00121C  D028               	goto	l160
  5076  00121E                     l4667:
  5077                           
  5078                           ;lcd_hd44780.c: 289: for (__i = 0; __i<sizeof (__costum0); __i++)
  5079  00121E  0E00               	movlw	0
  5080  001220  6E47               	movwf	LCDLoadCostum@__i,c
  5081  001222                     l4669:
  5082  001222  0E3F               	movlw	63
  5083  001224  6447               	cpfsgt	LCDLoadCostum@__i,c
  5084  001226  D001               	goto	l4673
  5085  001228  D022               	goto	l160
  5086  00122A                     l4673:
  5087                           
  5088                           ;lcd_hd44780.c: 290: (LCDByte(__costum0[__i],1));
  5089  00122A  0E01               	movlw	1
  5090  00122C  6E40               	movwf	LCDByte@isdata,c
  5091  00122E  5047               	movf	LCDLoadCostum@__i,w,c
  5092  001230  0D01               	mullw	1
  5093  001232  0E5B               	movlw	low ___costum0
  5094  001234  24F3               	addwf	prodl,w,c
  5095  001236  6EF6               	movwf	tblptrl,c
  5096  001238  0E7D               	movlw	high ___costum0
  5097  00123A  20F4               	addwfc	prodh,w,c
  5098  00123C  6EF7               	movwf	tblptrh,c
  5099  00123E                     	if	0	;There are less than 3 active tblptr bytes
  5100  00123E                     	endif
  5101  00123E  0008               	tblrd		*
  5102  001240  50F5               	movf	tablat,w,c
  5103  001242  ECB1  F00C         	call	_LCDByte
  5104  001246  2A47               	incf	LCDLoadCostum@__i,f,c
  5105  001248  D7EC               	goto	l4669
  5106                           
  5107                           ;lcd_hd44780.c: 292: }
  5108                           
  5109                           ;lcd_hd44780.c: 291: break;
  5110  00124A  D011               	goto	l160
  5111  00124C                     l4681:
  5112  00124C  5046               	movf	LCDLoadCostum@select,w,c
  5113                           
  5114                           ; Switch size 1, requested type "space"
  5115                           ; Number of cases is 5, Range of values is 0 to 4
  5116                           ; switch strategies available:
  5117                           ; Name         Instructions Cycles
  5118                           ; simple_byte           16     9 (average)
  5119                           ;	Chosen strategy is simple_byte
  5120  00124E  0A00               	xorlw	0	; case 0
  5121  001250  B4D8               	btfsc	status,2,c
  5122  001252  D772               	goto	l4607
  5123  001254  0A01               	xorlw	1	; case 1
  5124  001256  B4D8               	btfsc	status,2,c
  5125  001258  D786               	goto	l4619
  5126  00125A  0A03               	xorlw	3	; case 2
  5127  00125C  B4D8               	btfsc	status,2,c
  5128  00125E  D79A               	goto	l4631
  5129  001260  0A01               	xorlw	1	; case 3
  5130  001262  B4D8               	btfsc	status,2,c
  5131  001264  D7AE               	goto	l4643
  5132  001266  0A07               	xorlw	7	; case 4
  5133  001268  B4D8               	btfsc	status,2,c
  5134  00126A  D7C2               	goto	l4655
  5135  00126C  D7D8               	goto	l4667
  5136  00126E                     l160:
  5137  00126E  0012               	return		;funcret
  5138  001270                     __end_of_LCDLoadCostum:
  5139                           	opt stack 0
  5140                           tblptru	equ	0xFF8
  5141                           tblptrh	equ	0xFF7
  5142                           tblptrl	equ	0xFF6
  5143                           tablat	equ	0xFF5
  5144                           prodh	equ	0xFF4
  5145                           prodl	equ	0xFF3
  5146                           intcon	equ	0xFF2
  5147                           postinc0	equ	0xFEE
  5148                           wreg	equ	0xFE8
  5149                           postdec1	equ	0xFE5
  5150                           plusw1	equ	0xFE3
  5151                           fsr1l	equ	0xFE1
  5152                           indf2	equ	0xFDF
  5153                           plusw2	equ	0xFDB
  5154                           fsr2h	equ	0xFDA
  5155                           fsr2l	equ	0xFD9
  5156                           status	equ	0xFD8
  5157                           
  5158 ;; *************** function _lcd_sub_menu_metronoom *****************
  5159 ;; Defined at:
  5160 ;;		line 255 in file "lcd_functions.c"
  5161 ;; Parameters:    Size  Location     Type
  5162 ;;		None
  5163 ;; Auto vars:     Size  Location     Type
  5164 ;;		None
  5165 ;; Return value:  Size  Location     Type
  5166 ;;		None               void
  5167 ;; Registers used:
  5168 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5169 ;; Tracked objects:
  5170 ;;		On entry : 0/0
  5171 ;;		On exit  : 0/0
  5172 ;;		Unchanged: 0/0
  5173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5174 ;;      Params:         0       0       0       0       0       0       0       0       0
  5175 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5176 ;;      Temps:          0       2       0       0       0       0       0       0       0
  5177 ;;      Totals:         0       2       0       0       0       0       0       0       0
  5178 ;;Total ram usage:        2 bytes
  5179 ;; Hardware stack levels used:    1
  5180 ;; Hardware stack levels required when called:    4
  5181 ;; This function calls:
  5182 ;;		_LCDGotoXY
  5183 ;;		_LCDWriteInt
  5184 ;;		_LCDWriteString
  5185 ;;		_SerialTransmit
  5186 ;;		___lwdiv
  5187 ;; This function is called by:
  5188 ;;		_lcd_main_menu_fsm
  5189 ;; This function uses a non-reentrant model
  5190 ;;
  5191                           
  5192                           	psect	text11
  5193  00069E                     __ptext11:
  5194                           	opt stack 0
  5195  00069E                     _lcd_sub_menu_metronoom:
  5196                           	opt stack 25
  5197                           
  5198                           ;lcd_functions.c: 256: switch (inputs) {
  5199                           
  5200                           ;incstack = 0
  5201  00069E  D009               	goto	l5139
  5202                           
  5203                           ;lcd_functions.c: 260: break;
  5204                           
  5205                           ;lcd_functions.c: 259: case 0x01:
  5206                           
  5207                           ;lcd_functions.c: 258: break;
  5208                           
  5209                           ;lcd_functions.c: 257: case 0x02:
  5210  0006A0  D0AE               	goto	l5231
  5211  0006A2                     l5131:
  5212                           
  5213                           ;lcd_functions.c: 262: if(sub_menu_metronoom < 5)
  5214  0006A2  0E05               	movlw	5
  5215  0006A4  604D               	cpfslt	_sub_menu_metronoom,c
  5216  0006A6  D002               	goto	l5135
  5217                           
  5218                           ;lcd_functions.c: 263: sub_menu_metronoom++;
  5219  0006A8  2A4D               	incf	_sub_menu_metronoom,f,c
  5220  0006AA  D0A9               	goto	l5231
  5221  0006AC                     l5135:
  5222                           
  5223                           ;lcd_functions.c: 264: else
  5224                           ;lcd_functions.c: 265: sub_menu_metronoom = smM1;
  5225  0006AC  0E01               	movlw	1
  5226  0006AE  6E4D               	movwf	_sub_menu_metronoom,c
  5227                           
  5228                           ;lcd_functions.c: 271: }
  5229                           
  5230                           ;lcd_functions.c: 270: break;
  5231                           
  5232                           ;lcd_functions.c: 269: default:
  5233                           
  5234                           ;lcd_functions.c: 268: break;
  5235                           
  5236                           ;lcd_functions.c: 267: case 0x08:
  5237                           
  5238                           ;lcd_functions.c: 266: break;
  5239  0006B0  D0A6               	goto	l5231
  5240  0006B2                     l5139:
  5241  0006B2  5023               	movf	_inputs,w,c
  5242                           
  5243                           ; Switch size 1, requested type "space"
  5244                           ; Number of cases is 4, Range of values is 1 to 8
  5245                           ; switch strategies available:
  5246                           ; Name         Instructions Cycles
  5247                           ; simple_byte           13     7 (average)
  5248                           ;	Chosen strategy is simple_byte
  5249  0006B4  0A01               	xorlw	1	; case 1
  5250  0006B6  B4D8               	btfsc	status,2,c
  5251  0006B8  D0A2               	goto	l5231
  5252  0006BA  0A03               	xorlw	3	; case 2
  5253  0006BC  B4D8               	btfsc	status,2,c
  5254  0006BE  D09F               	goto	l5231
  5255  0006C0  0A06               	xorlw	6	; case 4
  5256  0006C2  B4D8               	btfsc	status,2,c
  5257  0006C4  D7EE               	goto	l5131
  5258  0006C6  0A0C               	xorlw	12	; case 8
  5259                           
  5260                           ;lcd_functions.c: 273: switch (sub_menu_metronoom) {
  5261  0006C8  D09A               	goto	l5231
  5262  0006CA                     l5141:
  5263                           
  5264                           ;lcd_functions.c: 275: { LCDGotoXY(9,1); LCDWriteString("^      ");};
  5265  0006CA  0E01               	movlw	1
  5266  0006CC  6E46               	movwf	LCDGotoXY@y,c
  5267  0006CE  0E09               	movlw	9
  5268  0006D0  EC6F  F00D         	call	_LCDGotoXY
  5269  0006D4  0EB5               	movlw	low STR_1
  5270  0006D6  6E46               	movwf	LCDWriteString@msg,c
  5271  0006D8  0E7F               	movlw	high STR_1
  5272  0006DA  6E47               	movwf	LCDWriteString@msg+1,c
  5273  0006DC  ECD3  F009         	call	_LCDWriteString	;wreg free
  5274                           
  5275                           ;lcd_functions.c: 276: switch (inputs) {
  5276  0006E0  D00E               	goto	l5159
  5277  0006E2                     l5145:
  5278                           
  5279                           ;lcd_functions.c: 278: send = 1;
  5280  0006E2  0E01               	movlw	1
  5281  0006E4  6E2B               	movwf	_send,c
  5282                           
  5283                           ;lcd_functions.c: 279: if(m1 < 4)
  5284  0006E6  0E04               	movlw	4
  5285  0006E8  604C               	cpfslt	_m1,c
  5286  0006EA  D097               	goto	l5233
  5287                           
  5288                           ;lcd_functions.c: 280: m1++;
  5289  0006EC  2A4C               	incf	_m1,f,c
  5290                           
  5291                           ;lcd_functions.c: 281: break;
  5292  0006EE  D095               	goto	l5233
  5293  0006F0                     l5151:
  5294                           
  5295                           ;lcd_functions.c: 283: send = 1;
  5296  0006F0  0E01               	movlw	1
  5297  0006F2  6E2B               	movwf	_send,c
  5298                           
  5299                           ;lcd_functions.c: 284: if(m1 > 1)
  5300  0006F4  0E01               	movlw	1
  5301  0006F6  644C               	cpfsgt	_m1,c
  5302  0006F8  D090               	goto	l5233
  5303                           
  5304                           ;lcd_functions.c: 285: m1--;
  5305  0006FA  064C               	decf	_m1,f,c
  5306                           
  5307                           ;lcd_functions.c: 289: }
  5308                           
  5309                           ;lcd_functions.c: 288: break;
  5310                           
  5311                           ;lcd_functions.c: 287: default:
  5312                           
  5313                           ;lcd_functions.c: 286: break;
  5314  0006FC  D08E               	goto	l5233
  5315  0006FE                     l5159:
  5316  0006FE  5023               	movf	_inputs,w,c
  5317                           
  5318                           ; Switch size 1, requested type "space"
  5319                           ; Number of cases is 2, Range of values is 1 to 2
  5320                           ; switch strategies available:
  5321                           ; Name         Instructions Cycles
  5322                           ; simple_byte            7     4 (average)
  5323                           ;	Chosen strategy is simple_byte
  5324  000700  0A01               	xorlw	1	; case 1
  5325  000702  B4D8               	btfsc	status,2,c
  5326  000704  D7F5               	goto	l5151
  5327  000706  0A03               	xorlw	3	; case 2
  5328  000708  B4D8               	btfsc	status,2,c
  5329  00070A  D7EB               	goto	l5145
  5330                           
  5331                           ;lcd_functions.c: 290: break;
  5332  00070C  D086               	goto	l5233
  5333  00070E                     l5161:
  5334                           
  5335                           ;lcd_functions.c: 293: { LCDGotoXY(9,1); LCDWriteString("    ^  ");};
  5336  00070E  0E01               	movlw	1
  5337  000710  6E46               	movwf	LCDGotoXY@y,c
  5338  000712  0E09               	movlw	9
  5339  000714  EC6F  F00D         	call	_LCDGotoXY
  5340  000718  0EBD               	movlw	low STR_2
  5341  00071A  6E46               	movwf	LCDWriteString@msg,c
  5342  00071C  0E7F               	movlw	high STR_2
  5343  00071E  6E47               	movwf	LCDWriteString@msg+1,c
  5344  000720  ECD3  F009         	call	_LCDWriteString	;wreg free
  5345                           
  5346                           ;lcd_functions.c: 294: switch (inputs) {
  5347  000724  D014               	goto	l5183
  5348  000726                     l5165:
  5349                           
  5350                           ;lcd_functions.c: 296: send = 1;
  5351  000726  0E01               	movlw	1
  5352  000728  6E2B               	movwf	_send,c
  5353                           
  5354                           ;lcd_functions.c: 297: if(t1 < 3)
  5355  00072A  0E03               	movlw	3
  5356  00072C  604E               	cpfslt	_t1,c
  5357  00072E  D002               	goto	l5171
  5358                           
  5359                           ;lcd_functions.c: 298: t1++;
  5360  000730  2A4E               	incf	_t1,f,c
  5361  000732  D073               	goto	l5233
  5362  000734                     l5171:
  5363                           
  5364                           ;lcd_functions.c: 299: else
  5365                           ;lcd_functions.c: 300: t1 = 1;
  5366  000734  0E01               	movlw	1
  5367  000736  D009               	goto	L5
  5368                           
  5369                           ;lcd_functions.c: 301: break;
  5370  000738  D070               	goto	l5233
  5371  00073A                     l5173:
  5372                           
  5373                           ;lcd_functions.c: 303: send = 1;
  5374  00073A  0E01               	movlw	1
  5375  00073C  6E2B               	movwf	_send,c
  5376                           
  5377                           ;lcd_functions.c: 304: if(t1 > 1)
  5378  00073E  0E01               	movlw	1
  5379  000740  644E               	cpfsgt	_t1,c
  5380  000742  D002               	goto	l5179
  5381                           
  5382                           ;lcd_functions.c: 305: t1--;
  5383  000744  064E               	decf	_t1,f,c
  5384  000746  D069               	goto	l5233
  5385  000748                     l5179:
  5386                           
  5387                           ;lcd_functions.c: 306: else
  5388                           ;lcd_functions.c: 307: t1 = 3;
  5389  000748  0E03               	movlw	3
  5390  00074A                     L5:
  5391  00074A  6E4E               	movwf	_t1,c
  5392                           
  5393                           ;lcd_functions.c: 311: }
  5394                           
  5395                           ;lcd_functions.c: 310: break;
  5396                           
  5397                           ;lcd_functions.c: 309: default:
  5398                           
  5399                           ;lcd_functions.c: 308: break;
  5400  00074C  D066               	goto	l5233
  5401  00074E                     l5183:
  5402  00074E  5023               	movf	_inputs,w,c
  5403                           
  5404                           ; Switch size 1, requested type "space"
  5405                           ; Number of cases is 2, Range of values is 1 to 2
  5406                           ; switch strategies available:
  5407                           ; Name         Instructions Cycles
  5408                           ; simple_byte            7     4 (average)
  5409                           ;	Chosen strategy is simple_byte
  5410  000750  0A01               	xorlw	1	; case 1
  5411  000752  B4D8               	btfsc	status,2,c
  5412  000754  D7F2               	goto	l5173
  5413  000756  0A03               	xorlw	3	; case 2
  5414  000758  B4D8               	btfsc	status,2,c
  5415  00075A  D7E5               	goto	l5165
  5416                           
  5417                           ;lcd_functions.c: 312: break;
  5418  00075C  D05E               	goto	l5233
  5419  00075E                     l5185:
  5420                           
  5421                           ;lcd_functions.c: 315: { LCDGotoXY(9,1); LCDWriteString("     ^ ");};
  5422  00075E  0E01               	movlw	1
  5423  000760  6E46               	movwf	LCDGotoXY@y,c
  5424  000762  0E09               	movlw	9
  5425  000764  EC6F  F00D         	call	_LCDGotoXY
  5426  000768  0EC5               	movlw	low STR_3
  5427  00076A  6E46               	movwf	LCDWriteString@msg,c
  5428  00076C  0E7F               	movlw	high STR_3
  5429  00076E  6E47               	movwf	LCDWriteString@msg+1,c
  5430  000770  ECD3  F009         	call	_LCDWriteString	;wreg free
  5431                           
  5432                           ;lcd_functions.c: 316: switch (inputs) {
  5433  000774  D014               	goto	l5205
  5434  000776                     l5189:
  5435                           
  5436                           ;lcd_functions.c: 318: send = 1;
  5437  000776  0E01               	movlw	1
  5438  000778  6E2B               	movwf	_send,c
  5439                           
  5440                           ;lcd_functions.c: 319: if(t2 < 9)
  5441  00077A  0E09               	movlw	9
  5442  00077C  604F               	cpfslt	_t2,c
  5443  00077E  D002               	goto	l5195
  5444                           
  5445                           ;lcd_functions.c: 320: t2++;
  5446  000780  2A4F               	incf	_t2,f,c
  5447  000782  D04B               	goto	l5233
  5448  000784                     l5195:
  5449                           
  5450                           ;lcd_functions.c: 321: else
  5451                           ;lcd_functions.c: 322: t2 = 0;
  5452  000784  0E00               	movlw	0
  5453  000786  D009               	goto	L6
  5454                           
  5455                           ;lcd_functions.c: 323: break;
  5456  000788  D048               	goto	l5233
  5457  00078A                     l5197:
  5458                           
  5459                           ;lcd_functions.c: 325: send = 1;
  5460  00078A  0E01               	movlw	1
  5461  00078C  6E2B               	movwf	_send,c
  5462                           
  5463                           ;lcd_functions.c: 326: if(t2 > 0)
  5464  00078E  504F               	movf	_t2,w,c
  5465  000790  B4D8               	btfsc	status,2,c
  5466  000792  D002               	goto	l5201
  5467                           
  5468                           ;lcd_functions.c: 327: t2--;
  5469  000794  064F               	decf	_t2,f,c
  5470  000796  D041               	goto	l5233
  5471  000798                     l5201:
  5472                           
  5473                           ;lcd_functions.c: 328: else
  5474                           ;lcd_functions.c: 329: t2 = 9;
  5475  000798  0E09               	movlw	9
  5476  00079A                     L6:
  5477  00079A  6E4F               	movwf	_t2,c
  5478                           
  5479                           ;lcd_functions.c: 333: }
  5480                           
  5481                           ;lcd_functions.c: 332: break;
  5482                           
  5483                           ;lcd_functions.c: 331: default:
  5484                           
  5485                           ;lcd_functions.c: 330: break;
  5486  00079C  D03E               	goto	l5233
  5487  00079E                     l5205:
  5488  00079E  5023               	movf	_inputs,w,c
  5489                           
  5490                           ; Switch size 1, requested type "space"
  5491                           ; Number of cases is 2, Range of values is 1 to 2
  5492                           ; switch strategies available:
  5493                           ; Name         Instructions Cycles
  5494                           ; simple_byte            7     4 (average)
  5495                           ;	Chosen strategy is simple_byte
  5496  0007A0  0A01               	xorlw	1	; case 1
  5497  0007A2  B4D8               	btfsc	status,2,c
  5498  0007A4  D7F2               	goto	l5197
  5499  0007A6  0A03               	xorlw	3	; case 2
  5500  0007A8  B4D8               	btfsc	status,2,c
  5501  0007AA  D7E5               	goto	l5189
  5502                           
  5503                           ;lcd_functions.c: 334: break;
  5504  0007AC  D036               	goto	l5233
  5505  0007AE                     l5207:
  5506                           
  5507                           ;lcd_functions.c: 337: { LCDGotoXY(9,1); LCDWriteString("      ^");};
  5508  0007AE  0E01               	movlw	1
  5509  0007B0  6E46               	movwf	LCDGotoXY@y,c
  5510  0007B2  0E09               	movlw	9
  5511  0007B4  EC6F  F00D         	call	_LCDGotoXY
  5512  0007B8  0ECD               	movlw	low STR_4
  5513  0007BA  6E46               	movwf	LCDWriteString@msg,c
  5514  0007BC  0E7F               	movlw	high STR_4
  5515  0007BE  6E47               	movwf	LCDWriteString@msg+1,c
  5516  0007C0  ECD3  F009         	call	_LCDWriteString	;wreg free
  5517                           
  5518                           ;lcd_functions.c: 338: switch (inputs) {
  5519  0007C4  D014               	goto	l5227
  5520  0007C6                     l5211:
  5521                           
  5522                           ;lcd_functions.c: 340: send = 1;
  5523  0007C6  0E01               	movlw	1
  5524  0007C8  6E2B               	movwf	_send,c
  5525                           
  5526                           ;lcd_functions.c: 341: if(t3 < 9)
  5527  0007CA  0E09               	movlw	9
  5528  0007CC  602D               	cpfslt	_t3,c
  5529  0007CE  D002               	goto	l5217
  5530                           
  5531                           ;lcd_functions.c: 342: t3++;
  5532  0007D0  2A2D               	incf	_t3,f,c
  5533  0007D2  D023               	goto	l5233
  5534  0007D4                     l5217:
  5535                           
  5536                           ;lcd_functions.c: 343: else
  5537                           ;lcd_functions.c: 344: t3 = 0;
  5538  0007D4  0E00               	movlw	0
  5539  0007D6  D009               	goto	L7
  5540                           
  5541                           ;lcd_functions.c: 345: break;
  5542  0007D8  D020               	goto	l5233
  5543  0007DA                     l5219:
  5544                           
  5545                           ;lcd_functions.c: 347: send = 1;
  5546  0007DA  0E01               	movlw	1
  5547  0007DC  6E2B               	movwf	_send,c
  5548                           
  5549                           ;lcd_functions.c: 348: if(t3 > 0)
  5550  0007DE  502D               	movf	_t3,w,c
  5551  0007E0  B4D8               	btfsc	status,2,c
  5552  0007E2  D002               	goto	l5223
  5553                           
  5554                           ;lcd_functions.c: 349: t3--;
  5555  0007E4  062D               	decf	_t3,f,c
  5556  0007E6  D019               	goto	l5233
  5557  0007E8                     l5223:
  5558                           
  5559                           ;lcd_functions.c: 350: else
  5560                           ;lcd_functions.c: 351: t3 = 9;
  5561  0007E8  0E09               	movlw	9
  5562  0007EA                     L7:
  5563  0007EA  6E2D               	movwf	_t3,c
  5564                           
  5565                           ;lcd_functions.c: 355: }
  5566                           
  5567                           ;lcd_functions.c: 354: break;
  5568                           
  5569                           ;lcd_functions.c: 353: default:
  5570                           
  5571                           ;lcd_functions.c: 352: break;
  5572  0007EC  D016               	goto	l5233
  5573  0007EE                     l5227:
  5574  0007EE  5023               	movf	_inputs,w,c
  5575                           
  5576                           ; Switch size 1, requested type "space"
  5577                           ; Number of cases is 2, Range of values is 1 to 2
  5578                           ; switch strategies available:
  5579                           ; Name         Instructions Cycles
  5580                           ; simple_byte            7     4 (average)
  5581                           ;	Chosen strategy is simple_byte
  5582  0007F0  0A01               	xorlw	1	; case 1
  5583  0007F2  B4D8               	btfsc	status,2,c
  5584  0007F4  D7F2               	goto	l5219
  5585  0007F6  0A03               	xorlw	3	; case 2
  5586  0007F8  B4D8               	btfsc	status,2,c
  5587  0007FA  D7E5               	goto	l5211
  5588                           
  5589                           ;lcd_functions.c: 360: }
  5590                           
  5591                           ;lcd_functions.c: 359: break;
  5592                           
  5593                           ;lcd_functions.c: 358: default:
  5594                           
  5595                           ;lcd_functions.c: 356: break;
  5596  0007FC  D00E               	goto	l5233
  5597  0007FE                     l5231:
  5598  0007FE  504D               	movf	_sub_menu_metronoom,w,c
  5599                           
  5600                           ; Switch size 1, requested type "space"
  5601                           ; Number of cases is 4, Range of values is 1 to 4
  5602                           ; switch strategies available:
  5603                           ; Name         Instructions Cycles
  5604                           ; simple_byte           13     7 (average)
  5605                           ;	Chosen strategy is simple_byte
  5606  000800  0A01               	xorlw	1	; case 1
  5607  000802  B4D8               	btfsc	status,2,c
  5608  000804  D762               	goto	l5141
  5609  000806  0A03               	xorlw	3	; case 2
  5610  000808  B4D8               	btfsc	status,2,c
  5611  00080A  D781               	goto	l5161
  5612  00080C  0A01               	xorlw	1	; case 3
  5613  00080E  B4D8               	btfsc	status,2,c
  5614  000810  D7A6               	goto	l5185
  5615  000812  0A07               	xorlw	7	; case 4
  5616  000814  B4D8               	btfsc	status,2,c
  5617  000816  D7CB               	goto	l5207
  5618  000818  D000               	goto	l5233
  5619  00081A                     l5233:
  5620                           
  5621                           ;lcd_functions.c: 361: { LCDGotoXY(9,0); LCDWriteInt(m1,1);};
  5622  00081A  0E00               	movlw	0
  5623  00081C  6E46               	movwf	LCDGotoXY@y,c
  5624  00081E  0E09               	movlw	9
  5625  000820  EC6F  F00D         	call	_LCDGotoXY
  5626  000824  C04C  F046         	movff	_m1,LCDWriteInt@val
  5627  000828  6A47               	clrf	LCDWriteInt@val+1,c
  5628  00082A  0E01               	movlw	1
  5629  00082C  6E48               	movwf	LCDWriteInt@field_length,c
  5630  00082E  EC38  F009         	call	_LCDWriteInt	;wreg free
  5631                           
  5632                           ;lcd_functions.c: 362: { LCDGotoXY(10,0); LCDWriteString("/4");};
  5633  000832  0E00               	movlw	0
  5634  000834  6E46               	movwf	LCDGotoXY@y,c
  5635  000836  0E0A               	movlw	10
  5636  000838  EC6F  F00D         	call	_LCDGotoXY
  5637  00083C  0EE9               	movlw	low STR_5
  5638  00083E  6E46               	movwf	LCDWriteString@msg,c
  5639  000840  0E7F               	movlw	high STR_5
  5640  000842  6E47               	movwf	LCDWriteString@msg+1,c
  5641  000844  ECD3  F009         	call	_LCDWriteString	;wreg free
  5642                           
  5643                           ;lcd_functions.c: 363: { LCDGotoXY(13,0); LCDWriteInt(t1,1);};
  5644  000848  0E00               	movlw	0
  5645  00084A  6E46               	movwf	LCDGotoXY@y,c
  5646  00084C  0E0D               	movlw	13
  5647  00084E  EC6F  F00D         	call	_LCDGotoXY
  5648  000852  C04E  F046         	movff	_t1,LCDWriteInt@val
  5649  000856  6A47               	clrf	LCDWriteInt@val+1,c
  5650  000858  0E01               	movlw	1
  5651  00085A  6E48               	movwf	LCDWriteInt@field_length,c
  5652  00085C  EC38  F009         	call	_LCDWriteInt	;wreg free
  5653                           
  5654                           ;lcd_functions.c: 364: { LCDGotoXY(14,0); LCDWriteInt(t2,1);};
  5655  000860  0E00               	movlw	0
  5656  000862  6E46               	movwf	LCDGotoXY@y,c
  5657  000864  0E0E               	movlw	14
  5658  000866  EC6F  F00D         	call	_LCDGotoXY
  5659  00086A  C04F  F046         	movff	_t2,LCDWriteInt@val
  5660  00086E  6A47               	clrf	LCDWriteInt@val+1,c
  5661  000870  0E01               	movlw	1
  5662  000872  6E48               	movwf	LCDWriteInt@field_length,c
  5663  000874  EC38  F009         	call	_LCDWriteInt	;wreg free
  5664                           
  5665                           ;lcd_functions.c: 365: { LCDGotoXY(15,0); LCDWriteInt(t3,1);};
  5666  000878  0E00               	movlw	0
  5667  00087A  6E46               	movwf	LCDGotoXY@y,c
  5668  00087C  0E0F               	movlw	15
  5669  00087E  EC6F  F00D         	call	_LCDGotoXY
  5670  000882  C02D  F046         	movff	_t3,LCDWriteInt@val
  5671  000886  6A47               	clrf	LCDWriteInt@val+1,c
  5672  000888  0E01               	movlw	1
  5673  00088A  6E48               	movwf	LCDWriteInt@field_length,c
  5674  00088C  EC38  F009         	call	_LCDWriteInt	;wreg free
  5675                           
  5676                           ;lcd_functions.c: 366: if(send) {
  5677  000890  502B               	movf	_send,w,c
  5678  000892  B4D8               	btfsc	status,2,c
  5679  000894  D025               	goto	l5271
  5680                           
  5681                           ;lcd_functions.c: 367: tempo = (t1*100 + t2*10 + t3);
  5682  000896  504E               	movf	_t1,w,c
  5683  000898  0D64               	mullw	100
  5684  00089A  CFF3 F09F          	movff	prodl,??_lcd_sub_menu_metronoom
  5685  00089E  CFF4 F0A0          	movff	prodh,??_lcd_sub_menu_metronoom+1
  5686  0008A2  504F               	movf	_t2,w,c
  5687  0008A4  0D0A               	mullw	10
  5688  0008A6  50F3               	movf	prodl,w,c
  5689  0008A8  0100               	movlb	0	; () banked
  5690  0008AA  279F               	addwf	??_lcd_sub_menu_metronoom& (0+255),f,b
  5691  0008AC  50F4               	movf	prodh,w,c
  5692  0008AE  0100               	movlb	0	; () banked
  5693  0008B0  23A0               	addwfc	(??_lcd_sub_menu_metronoom+1)& (0+255),f,b
  5694  0008B2  502D               	movf	_t3,w,c
  5695  0008B4  0100               	movlb	0	; () banked
  5696  0008B6  259F               	addwf	??_lcd_sub_menu_metronoom& (0+255),w,b
  5697  0008B8  6E4A               	movwf	_tempo,c
  5698  0008BA  0E00               	movlw	0
  5699  0008BC  0100               	movlb	0	; () banked
  5700  0008BE  21A0               	addwfc	(??_lcd_sub_menu_metronoom+1)& (0+255),w,b
  5701  0008C0  6E4B               	movwf	_tempo+1,c
  5702                           
  5703                           ; BSR set to: 0
  5704                           ;lcd_functions.c: 368: SerialTx.Command = lMENU;
  5705  0008C2  0E05               	movlw	5
  5706  0008C4  6E02               	movwf	_SerialTx+1,c
  5707                           
  5708                           ; BSR set to: 0
  5709                           ;lcd_functions.c: 369: SerialTx.Dat1 = mmMETRONOOM;
  5710  0008C6  0E03               	movlw	3
  5711  0008C8  6E04               	movwf	_SerialTx+3,c
  5712                           
  5713                           ; BSR set to: 0
  5714                           ;lcd_functions.c: 370: SerialTx.Dat2 = m1;
  5715  0008CA  C04C  F005         	movff	_m1,_SerialTx+4
  5716                           
  5717                           ; BSR set to: 0
  5718                           ;lcd_functions.c: 371: SerialTx.Dat3 = (tempo & 0xFF00)>>8;
  5719  0008CE  504B               	movf	_tempo+1,w,c
  5720  0008D0  6E06               	movwf	_SerialTx+5,c
  5721                           
  5722                           ; BSR set to: 0
  5723                           ;lcd_functions.c: 372: SerialTx.Dat4 = (tempo & 0x00FF);
  5724  0008D2  C04A  F007         	movff	_tempo,_SerialTx+6
  5725                           
  5726                           ; BSR set to: 0
  5727                           ;lcd_functions.c: 373: SerialTransmit();
  5728  0008D6  EC45  F00D         	call	_SerialTransmit	;wreg free
  5729                           
  5730                           ;lcd_functions.c: 374: send = 0;
  5731  0008DA  0E00               	movlw	0
  5732  0008DC  6E2B               	movwf	_send,c
  5733  0008DE  D000               	goto	l5271
  5734  0008E0                     l5271:
  5735                           
  5736                           ;lcd_functions.c: 375: }
  5737                           ;lcd_functions.c: 377: if(indicator_cnt >= (1200/(tempo<<2))) {
  5738  0008E0  0E04               	movlw	4
  5739  0008E2  6E3E               	movwf	___lwdiv@dividend+1,c
  5740  0008E4  0EB0               	movlw	176
  5741  0008E6  6E3D               	movwf	___lwdiv@dividend,c
  5742  0008E8  C04A  F09F         	movff	_tempo,??_lcd_sub_menu_metronoom
  5743  0008EC  C04B  F0A0         	movff	_tempo+1,??_lcd_sub_menu_metronoom+1
  5744  0008F0  0100               	movlb	0	; () banked
  5745  0008F2  90D8               	bcf	status,0,c
  5746  0008F4  379F               	rlcf	??_lcd_sub_menu_metronoom& (0+255),f,b
  5747  0008F6  37A0               	rlcf	(??_lcd_sub_menu_metronoom+1)& (0+255),f,b
  5748  0008F8  0100               	movlb	0	; () banked
  5749  0008FA  90D8               	bcf	status,0,c
  5750  0008FC  379F               	rlcf	??_lcd_sub_menu_metronoom& (0+255),f,b
  5751  0008FE  37A0               	rlcf	(??_lcd_sub_menu_metronoom+1)& (0+255),f,b
  5752  000900  C09F  F03F         	movff	??_lcd_sub_menu_metronoom,___lwdiv@divisor
  5753  000904  C0A0  F040         	movff	??_lcd_sub_menu_metronoom+1,___lwdiv@divisor+1
  5754  000908  EC17  F00D         	call	___lwdiv	;wreg free
  5755  00090C  503D               	movf	?___lwdiv,w,c
  5756  00090E  5C14               	subwf	_indicator_cnt,w,c
  5757  000910  503E               	movf	?___lwdiv+1,w,c
  5758  000912  5815               	subwfb	_indicator_cnt+1,w,c
  5759  000914  A0D8               	btfss	status,0,c
  5760  000916  D010               	goto	l5279
  5761                           
  5762                           ;lcd_functions.c: 378: { LCDGotoXY(1,1); LCDWriteString("****");};
  5763  000918  0E01               	movlw	1
  5764  00091A  6E46               	movwf	LCDGotoXY@y,c
  5765  00091C  0E01               	movlw	1
  5766  00091E  EC6F  F00D         	call	_LCDGotoXY
  5767  000922  0ED5               	movlw	low STR_6
  5768  000924  6E46               	movwf	LCDWriteString@msg,c
  5769  000926  0E7F               	movlw	high STR_6
  5770  000928  6E47               	movwf	LCDWriteString@msg+1,c
  5771  00092A  ECD3  F009         	call	_LCDWriteString	;wreg free
  5772                           
  5773                           ;lcd_functions.c: 379: indicator_cnt = 0;
  5774  00092E  0E00               	movlw	0
  5775  000930  6E15               	movwf	_indicator_cnt+1,c
  5776  000932  0E00               	movlw	0
  5777  000934  6E14               	movwf	_indicator_cnt,c
  5778  000936  D000               	goto	l5279
  5779  000938                     l5279:
  5780                           
  5781                           ;lcd_functions.c: 380: }
  5782                           ;lcd_functions.c: 381: indicator_cnt++;
  5783  000938  4A14               	infsnz	_indicator_cnt,f,c
  5784  00093A  2A15               	incf	_indicator_cnt+1,f,c
  5785  00093C  0012               	return		;funcret
  5786  00093E                     __end_of_lcd_sub_menu_metronoom:
  5787                           	opt stack 0
  5788                           tblptru	equ	0xFF8
  5789                           tblptrh	equ	0xFF7
  5790                           tblptrl	equ	0xFF6
  5791                           tablat	equ	0xFF5
  5792                           prodh	equ	0xFF4
  5793                           prodl	equ	0xFF3
  5794                           intcon	equ	0xFF2
  5795                           postinc0	equ	0xFEE
  5796                           wreg	equ	0xFE8
  5797                           postdec1	equ	0xFE5
  5798                           plusw1	equ	0xFE3
  5799                           fsr1l	equ	0xFE1
  5800                           indf2	equ	0xFDF
  5801                           plusw2	equ	0xFDB
  5802                           fsr2h	equ	0xFDA
  5803                           fsr2l	equ	0xFD9
  5804                           status	equ	0xFD8
  5805                           
  5806 ;; *************** function ___lwdiv *****************
  5807 ;; Defined at:
  5808 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwdiv.c"
  5809 ;; Parameters:    Size  Location     Type
  5810 ;;  dividend        2   14[COMRAM] unsigned int 
  5811 ;;  divisor         2   16[COMRAM] unsigned int 
  5812 ;; Auto vars:     Size  Location     Type
  5813 ;;  quotient        2   19[COMRAM] unsigned int 
  5814 ;;  counter         1   18[COMRAM] unsigned char 
  5815 ;; Return value:  Size  Location     Type
  5816 ;;                  2   14[COMRAM] unsigned int 
  5817 ;; Registers used:
  5818 ;;		wreg, status,2, status,0
  5819 ;; Tracked objects:
  5820 ;;		On entry : 0/0
  5821 ;;		On exit  : 0/0
  5822 ;;		Unchanged: 0/0
  5823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5824 ;;      Params:         4       0       0       0       0       0       0       0       0
  5825 ;;      Locals:         3       0       0       0       0       0       0       0       0
  5826 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5827 ;;      Totals:         7       0       0       0       0       0       0       0       0
  5828 ;;Total ram usage:        7 bytes
  5829 ;; Hardware stack levels used:    1
  5830 ;; Hardware stack levels required when called:    1
  5831 ;; This function calls:
  5832 ;;		Nothing
  5833 ;; This function is called by:
  5834 ;;		_lcd_sub_menu_metronoom
  5835 ;; This function uses a non-reentrant model
  5836 ;;
  5837                           
  5838                           	psect	text12
  5839  001A2E                     __ptext12:
  5840                           	opt stack 0
  5841  001A2E                     ___lwdiv:
  5842                           	opt stack 27
  5843                           
  5844                           ;incstack = 0
  5845  001A2E  0E00               	movlw	0
  5846  001A30  6E43               	movwf	___lwdiv@quotient+1,c
  5847  001A32  0E00               	movlw	0
  5848  001A34  6E42               	movwf	___lwdiv@quotient,c
  5849  001A36  503F               	movf	___lwdiv@divisor,w,c
  5850  001A38  1040               	iorwf	___lwdiv@divisor+1,w,c
  5851  001A3A  B4D8               	btfsc	status,2,c
  5852  001A3C  D021               	goto	l1298
  5853  001A3E  0E01               	movlw	1
  5854  001A40  6E41               	movwf	___lwdiv@counter,c
  5855  001A42  D005               	goto	l5027
  5856  001A44                     l5025:
  5857  001A44  90D8               	bcf	status,0,c
  5858  001A46  363F               	rlcf	___lwdiv@divisor,f,c
  5859  001A48  3640               	rlcf	___lwdiv@divisor+1,f,c
  5860  001A4A  2A41               	incf	___lwdiv@counter,f,c
  5861  001A4C  D000               	goto	l5027
  5862  001A4E                     l5027:
  5863  001A4E  BE40               	btfsc	___lwdiv@divisor+1,7,c
  5864  001A50  D002               	goto	l5029
  5865  001A52  D7F8               	goto	l5025
  5866  001A54  D000               	goto	l5029
  5867  001A56                     l5029:
  5868  001A56  90D8               	bcf	status,0,c
  5869  001A58  3642               	rlcf	___lwdiv@quotient,f,c
  5870  001A5A  3643               	rlcf	___lwdiv@quotient+1,f,c
  5871  001A5C  503F               	movf	___lwdiv@divisor,w,c
  5872  001A5E  5C3D               	subwf	___lwdiv@dividend,w,c
  5873  001A60  5040               	movf	___lwdiv@divisor+1,w,c
  5874  001A62  583E               	subwfb	___lwdiv@dividend+1,w,c
  5875  001A64  A0D8               	btfss	status,0,c
  5876  001A66  D006               	goto	l5037
  5877  001A68  503F               	movf	___lwdiv@divisor,w,c
  5878  001A6A  5E3D               	subwf	___lwdiv@dividend,f,c
  5879  001A6C  5040               	movf	___lwdiv@divisor+1,w,c
  5880  001A6E  5A3E               	subwfb	___lwdiv@dividend+1,f,c
  5881  001A70  8042               	bsf	___lwdiv@quotient,0,c
  5882  001A72  D000               	goto	l5037
  5883  001A74                     l5037:
  5884  001A74  90D8               	bcf	status,0,c
  5885  001A76  3240               	rrcf	___lwdiv@divisor+1,f,c
  5886  001A78  323F               	rrcf	___lwdiv@divisor,f,c
  5887  001A7A  2E41               	decfsz	___lwdiv@counter,f,c
  5888  001A7C  D7EC               	goto	l5029
  5889  001A7E  D000               	goto	l1298
  5890  001A80                     l1298:
  5891  001A80  C042  F03D         	movff	___lwdiv@quotient,?___lwdiv
  5892  001A84  C043  F03E         	movff	___lwdiv@quotient+1,?___lwdiv+1
  5893  001A88  0012               	return		;funcret
  5894  001A8A                     __end_of___lwdiv:
  5895                           	opt stack 0
  5896                           tblptru	equ	0xFF8
  5897                           tblptrh	equ	0xFF7
  5898                           tblptrl	equ	0xFF6
  5899                           tablat	equ	0xFF5
  5900                           prodh	equ	0xFF4
  5901                           prodl	equ	0xFF3
  5902                           intcon	equ	0xFF2
  5903                           postinc0	equ	0xFEE
  5904                           wreg	equ	0xFE8
  5905                           postdec1	equ	0xFE5
  5906                           plusw1	equ	0xFE3
  5907                           fsr1l	equ	0xFE1
  5908                           indf2	equ	0xFDF
  5909                           plusw2	equ	0xFDB
  5910                           fsr2h	equ	0xFDA
  5911                           fsr2l	equ	0xFD9
  5912                           status	equ	0xFD8
  5913                           
  5914 ;; *************** function _SerialTransmit *****************
  5915 ;; Defined at:
  5916 ;;		line 98 in file "../common_files/c/uart_m.c"
  5917 ;; Parameters:    Size  Location     Type
  5918 ;;		None
  5919 ;; Auto vars:     Size  Location     Type
  5920 ;;		None
  5921 ;; Return value:  Size  Location     Type
  5922 ;;		None               void
  5923 ;; Registers used:
  5924 ;;		wreg, status,2, status,0
  5925 ;; Tracked objects:
  5926 ;;		On entry : 0/0
  5927 ;;		On exit  : 0/0
  5928 ;;		Unchanged: 0/0
  5929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5930 ;;      Params:         0       0       0       0       0       0       0       0       0
  5931 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5932 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5933 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5934 ;;Total ram usage:        0 bytes
  5935 ;; Hardware stack levels used:    1
  5936 ;; Hardware stack levels required when called:    1
  5937 ;; This function calls:
  5938 ;;		Nothing
  5939 ;; This function is called by:
  5940 ;;		_main
  5941 ;;		_lcd_main_menu_fsm
  5942 ;;		_lcd_sub_menu_metronoom
  5943 ;; This function uses a non-reentrant model
  5944 ;;
  5945                           
  5946                           	psect	text13
  5947  001A8A                     __ptext13:
  5948                           	opt stack 0
  5949  001A8A                     _SerialTransmit:
  5950                           	opt stack 27
  5951                           
  5952                           ;uart_m.c: 99: TXREG = SerialTx.TransmitAddress + SerialTx.Command;
  5953                           
  5954                           ;incstack = 0
  5955  001A8A  5002               	movf	_SerialTx+1,w,c
  5956  001A8C  2401               	addwf	_SerialTx,w,c
  5957  001A8E  6EAD               	movwf	4013,c	;volatile
  5958                           
  5959                           ;uart_m.c: 100: while (TXSTAbits.TRMT == 0) {
  5960  001A90  D000               	goto	l64
  5961  001A92                     l64:
  5962  001A92  A2AC               	btfss	4012,1,c	;volatile
  5963  001A94  D7FE               	goto	l64
  5964                           
  5965                           ;uart_m.c: 101: }
  5966                           ;uart_m.c: 102: TXREG = SerialTx.Hardware;
  5967  001A96  C003  FFAD         	movff	_SerialTx+2,4013	;volatile
  5968                           
  5969                           ;uart_m.c: 103: while (TXSTAbits.TRMT == 0) {
  5970  001A9A  D000               	goto	l67
  5971  001A9C                     l67:
  5972  001A9C  A2AC               	btfss	4012,1,c	;volatile
  5973  001A9E  D7FE               	goto	l67
  5974                           
  5975                           ;uart_m.c: 104: }
  5976                           ;uart_m.c: 105: TXREG = SerialTx.Dat1;
  5977  001AA0  C004  FFAD         	movff	_SerialTx+3,4013	;volatile
  5978                           
  5979                           ;uart_m.c: 106: while (TXSTAbits.TRMT == 0) {
  5980  001AA4  D000               	goto	l70
  5981  001AA6                     l70:
  5982  001AA6  A2AC               	btfss	4012,1,c	;volatile
  5983  001AA8  D7FE               	goto	l70
  5984                           
  5985                           ;uart_m.c: 107: }
  5986                           ;uart_m.c: 108: TXREG = SerialTx.Dat2;
  5987  001AAA  C005  FFAD         	movff	_SerialTx+4,4013	;volatile
  5988                           
  5989                           ;uart_m.c: 109: while (TXSTAbits.TRMT == 0) {
  5990  001AAE  D000               	goto	l73
  5991  001AB0                     l73:
  5992  001AB0  A2AC               	btfss	4012,1,c	;volatile
  5993  001AB2  D7FE               	goto	l73
  5994                           
  5995                           ;uart_m.c: 110: }
  5996                           ;uart_m.c: 111: TXREG = SerialTx.Dat3;
  5997  001AB4  C006  FFAD         	movff	_SerialTx+5,4013	;volatile
  5998                           
  5999                           ;uart_m.c: 112: while (TXSTAbits.TRMT == 0) {
  6000  001AB8  D000               	goto	l76
  6001  001ABA                     l76:
  6002  001ABA  A2AC               	btfss	4012,1,c	;volatile
  6003  001ABC  D7FE               	goto	l76
  6004                           
  6005                           ;uart_m.c: 113: }
  6006                           ;uart_m.c: 114: TXREG = SerialTx.Dat4;
  6007  001ABE  C007  FFAD         	movff	_SerialTx+6,4013	;volatile
  6008                           
  6009                           ;uart_m.c: 115: while (TXSTAbits.TRMT == 0) {
  6010  001AC2  D000               	goto	l79
  6011  001AC4                     l79:
  6012  001AC4  A2AC               	btfss	4012,1,c	;volatile
  6013  001AC6  D7FE               	goto	l79
  6014                           
  6015                           ;uart_m.c: 116: }
  6016                           ;uart_m.c: 117: TXREG = SerialTx.Dat5;
  6017  001AC8  C008  FFAD         	movff	_SerialTx+7,4013	;volatile
  6018                           
  6019                           ;uart_m.c: 118: while (TXSTAbits.TRMT == 0) {
  6020  001ACC  D000               	goto	l82
  6021  001ACE                     l82:
  6022  001ACE  A2AC               	btfss	4012,1,c	;volatile
  6023  001AD0  D7FE               	goto	l82
  6024                           
  6025                           ;uart_m.c: 119: }
  6026                           ;uart_m.c: 120: TXREG = SerialTx.Dat6;
  6027  001AD2  C009  FFAD         	movff	_SerialTx+8,4013	;volatile
  6028                           
  6029                           ;uart_m.c: 121: while (TXSTAbits.TRMT == 0) {
  6030  001AD6  D000               	goto	l85
  6031  001AD8                     l85:
  6032  001AD8  A2AC               	btfss	4012,1,c	;volatile
  6033  001ADA  D7FE               	goto	l85
  6034  001ADC  0012               	return		;funcret
  6035  001ADE                     __end_of_SerialTransmit:
  6036                           	opt stack 0
  6037                           tblptru	equ	0xFF8
  6038                           tblptrh	equ	0xFF7
  6039                           tblptrl	equ	0xFF6
  6040                           tablat	equ	0xFF5
  6041                           prodh	equ	0xFF4
  6042                           prodl	equ	0xFF3
  6043                           intcon	equ	0xFF2
  6044                           postinc0	equ	0xFEE
  6045                           wreg	equ	0xFE8
  6046                           postdec1	equ	0xFE5
  6047                           plusw1	equ	0xFE3
  6048                           fsr1l	equ	0xFE1
  6049                           indf2	equ	0xFDF
  6050                           plusw2	equ	0xFDB
  6051                           fsr2h	equ	0xFDA
  6052                           fsr2l	equ	0xFD9
  6053                           status	equ	0xFD8
  6054                           
  6055 ;; *************** function _lcd_sub_menu_lcd *****************
  6056 ;; Defined at:
  6057 ;;		line 389 in file "lcd_functions.c"
  6058 ;; Parameters:    Size  Location     Type
  6059 ;;		None
  6060 ;; Auto vars:     Size  Location     Type
  6061 ;;		None
  6062 ;; Return value:  Size  Location     Type
  6063 ;;		None               void
  6064 ;; Registers used:
  6065 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6066 ;; Tracked objects:
  6067 ;;		On entry : 0/0
  6068 ;;		On exit  : 0/0
  6069 ;;		Unchanged: 0/0
  6070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6071 ;;      Params:         0       0       0       0       0       0       0       0       0
  6072 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6073 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6074 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6075 ;;Total ram usage:        1 bytes
  6076 ;; Hardware stack levels used:    1
  6077 ;; Hardware stack levels required when called:    4
  6078 ;; This function calls:
  6079 ;;		_LCDGotoXY
  6080 ;;		_LCDWriteInt
  6081 ;;		_LCDWriteString
  6082 ;; This function is called by:
  6083 ;;		_lcd_main_menu_fsm
  6084 ;; This function uses a non-reentrant model
  6085 ;;
  6086                           
  6087                           	psect	text14
  6088  000BAE                     __ptext14:
  6089                           	opt stack 0
  6090  000BAE                     _lcd_sub_menu_lcd:
  6091                           	opt stack 25
  6092                           
  6093                           ;lcd_functions.c: 390: switch (inputs) {
  6094                           
  6095                           ;incstack = 0
  6096  000BAE  D009               	goto	l5293
  6097                           
  6098                           ;lcd_functions.c: 394: break;
  6099                           
  6100                           ;lcd_functions.c: 393: case 0x01:
  6101                           
  6102                           ;lcd_functions.c: 392: break;
  6103                           
  6104                           ;lcd_functions.c: 391: case 0x02:
  6105  000BB0  D101               	goto	l5379
  6106  000BB2                     l5285:
  6107                           
  6108                           ;lcd_functions.c: 396: if(sub_menu_lcd < 2)
  6109  000BB2  0E02               	movlw	2
  6110  000BB4  602C               	cpfslt	_sub_menu_lcd,c
  6111  000BB6  D002               	goto	l5289
  6112                           
  6113                           ;lcd_functions.c: 397: sub_menu_lcd++;
  6114  000BB8  2A2C               	incf	_sub_menu_lcd,f,c
  6115  000BBA  D0FC               	goto	l5379
  6116  000BBC                     l5289:
  6117                           
  6118                           ;lcd_functions.c: 398: else
  6119                           ;lcd_functions.c: 399: sub_menu_lcd = smBRIGHTNESS;
  6120  000BBC  0E00               	movlw	0
  6121  000BBE  6E2C               	movwf	_sub_menu_lcd,c
  6122                           
  6123                           ;lcd_functions.c: 405: }
  6124                           
  6125                           ;lcd_functions.c: 404: break;
  6126                           
  6127                           ;lcd_functions.c: 403: default:
  6128                           
  6129                           ;lcd_functions.c: 402: break;
  6130                           
  6131                           ;lcd_functions.c: 401: case 0x08:
  6132                           
  6133                           ;lcd_functions.c: 400: break;
  6134  000BC0  D0F9               	goto	l5379
  6135  000BC2                     l5293:
  6136  000BC2  5023               	movf	_inputs,w,c
  6137                           
  6138                           ; Switch size 1, requested type "space"
  6139                           ; Number of cases is 4, Range of values is 1 to 8
  6140                           ; switch strategies available:
  6141                           ; Name         Instructions Cycles
  6142                           ; simple_byte           13     7 (average)
  6143                           ;	Chosen strategy is simple_byte
  6144  000BC4  0A01               	xorlw	1	; case 1
  6145  000BC6  B4D8               	btfsc	status,2,c
  6146  000BC8  D0F5               	goto	l5379
  6147  000BCA  0A03               	xorlw	3	; case 2
  6148  000BCC  B4D8               	btfsc	status,2,c
  6149  000BCE  D0F2               	goto	l5379
  6150  000BD0  0A06               	xorlw	6	; case 4
  6151  000BD2  B4D8               	btfsc	status,2,c
  6152  000BD4  D7EE               	goto	l5285
  6153  000BD6  0A0C               	xorlw	12	; case 8
  6154                           
  6155                           ;lcd_functions.c: 406: switch (sub_menu_lcd) {
  6156  000BD8  D0ED               	goto	l5379
  6157  000BDA                     l5295:
  6158                           
  6159                           ;lcd_functions.c: 408: { LCDGotoXY(2,1); LCDWriteString("<");};
  6160  000BDA  0E01               	movlw	1
  6161  000BDC  6E46               	movwf	LCDGotoXY@y,c
  6162  000BDE  0E02               	movlw	2
  6163  000BE0  EC6F  F00D         	call	_LCDGotoXY
  6164  000BE4  0EF8               	movlw	low STR_7
  6165  000BE6  6E46               	movwf	LCDWriteString@msg,c
  6166  000BE8  0E7F               	movlw	high STR_7
  6167  000BEA  6E47               	movwf	LCDWriteString@msg+1,c
  6168  000BEC  ECD3  F009         	call	_LCDWriteString	;wreg free
  6169                           
  6170                           ;lcd_functions.c: 409: { LCDGotoXY(9,1); LCDWriteString(" ");};
  6171  000BF0  0E01               	movlw	1
  6172  000BF2  6E46               	movwf	LCDGotoXY@y,c
  6173  000BF4  0E09               	movlw	9
  6174  000BF6  EC6F  F00D         	call	_LCDGotoXY
  6175  000BFA  0EAE               	movlw	low (STR_21+15)
  6176  000BFC  6E46               	movwf	LCDWriteString@msg,c
  6177  000BFE  0E7E               	movlw	high (STR_21+15)
  6178  000C00  6E47               	movwf	LCDWriteString@msg+1,c
  6179  000C02  ECD3  F009         	call	_LCDWriteString	;wreg free
  6180                           
  6181                           ;lcd_functions.c: 410: { LCDGotoXY(14,1); LCDWriteString(" ");};
  6182  000C06  0E01               	movlw	1
  6183  000C08  6E46               	movwf	LCDGotoXY@y,c
  6184  000C0A  0E0E               	movlw	14
  6185  000C0C  EC6F  F00D         	call	_LCDGotoXY
  6186  000C10  0EAE               	movlw	low (STR_21+15)
  6187  000C12  6E46               	movwf	LCDWriteString@msg,c
  6188  000C14  0E7E               	movlw	high (STR_21+15)
  6189  000C16  6E47               	movwf	LCDWriteString@msg+1,c
  6190  000C18  ECD3  F009         	call	_LCDWriteString	;wreg free
  6191                           
  6192                           ;lcd_functions.c: 411: switch (inputs) {
  6193  000C1C  D00A               	goto	l5315
  6194  000C1E                     l5305:
  6195                           
  6196                           ;lcd_functions.c: 413: if(brightness < 3)
  6197  000C1E  0E03               	movlw	3
  6198  000C20  6050               	cpfslt	_brightness,c
  6199  000C22  D00F               	goto	l5317
  6200                           
  6201                           ;lcd_functions.c: 414: brightness++;
  6202  000C24  2A50               	incf	_brightness,f,c
  6203                           
  6204                           ;lcd_functions.c: 415: break;
  6205  000C26  D00D               	goto	l5317
  6206  000C28                     l5309:
  6207                           
  6208                           ;lcd_functions.c: 417: if(brightness > 0)
  6209  000C28  5050               	movf	_brightness,w,c
  6210  000C2A  B4D8               	btfsc	status,2,c
  6211  000C2C  D00A               	goto	l5317
  6212                           
  6213                           ;lcd_functions.c: 418: brightness--;
  6214  000C2E  0650               	decf	_brightness,f,c
  6215                           
  6216                           ;lcd_functions.c: 422: }
  6217                           
  6218                           ;lcd_functions.c: 421: break;
  6219                           
  6220                           ;lcd_functions.c: 420: default:
  6221                           
  6222                           ;lcd_functions.c: 419: break;
  6223  000C30  D008               	goto	l5317
  6224  000C32                     l5315:
  6225  000C32  5023               	movf	_inputs,w,c
  6226                           
  6227                           ; Switch size 1, requested type "space"
  6228                           ; Number of cases is 2, Range of values is 1 to 2
  6229                           ; switch strategies available:
  6230                           ; Name         Instructions Cycles
  6231                           ; simple_byte            7     4 (average)
  6232                           ;	Chosen strategy is simple_byte
  6233  000C34  0A01               	xorlw	1	; case 1
  6234  000C36  B4D8               	btfsc	status,2,c
  6235  000C38  D7F7               	goto	l5309
  6236  000C3A  0A03               	xorlw	3	; case 2
  6237  000C3C  B4D8               	btfsc	status,2,c
  6238  000C3E  D7EF               	goto	l5305
  6239  000C40  D000               	goto	l5317
  6240  000C42                     l5317:
  6241                           
  6242                           ;lcd_functions.c: 423: { PORTB = (__brght[brightness]<<4);};
  6243  000C42  5050               	movf	_brightness,w,c
  6244  000C44  0D01               	mullw	1
  6245  000C46  0E9B               	movlw	low ___brght
  6246  000C48  24F3               	addwf	prodl,w,c
  6247  000C4A  6EF6               	movwf	tblptrl,c
  6248  000C4C  0E7E               	movlw	high ___brght
  6249  000C4E  20F4               	addwfc	prodh,w,c
  6250  000C50  6EF7               	movwf	tblptrh,c
  6251  000C52                     	if	0	;There are less than 3 active tblptr bytes
  6252  000C52                     	endif
  6253  000C52  0008               	tblrd		*
  6254  000C54  CFF5 F049          	movff	tablat,??_lcd_sub_menu_lcd
  6255  000C58  3849               	swapf	??_lcd_sub_menu_lcd,w,c
  6256  000C5A  0BF0               	andlw	240
  6257  000C5C  6E81               	movwf	3969,c	;volatile
  6258                           
  6259                           ;lcd_functions.c: 424: { LCDGotoXY(0,1); LCDWriteInt(brightness,2);};
  6260  000C5E  0E01               	movlw	1
  6261  000C60  6E46               	movwf	LCDGotoXY@y,c
  6262  000C62  0E00               	movlw	0
  6263  000C64  EC6F  F00D         	call	_LCDGotoXY
  6264  000C68  C050  F046         	movff	_brightness,LCDWriteInt@val
  6265  000C6C  6A47               	clrf	LCDWriteInt@val+1,c
  6266  000C6E  0E02               	movlw	2
  6267  000C70  6E48               	movwf	LCDWriteInt@field_length,c
  6268  000C72  EC38  F009         	call	_LCDWriteInt	;wreg free
  6269                           
  6270                           ;lcd_functions.c: 425: { LCDGotoXY(7,1); LCDWriteInt(scrs_speed,2);};
  6271  000C76  0E01               	movlw	1
  6272  000C78  6E46               	movwf	LCDGotoXY@y,c
  6273  000C7A  0E07               	movlw	7
  6274  000C7C  EC6F  F00D         	call	_LCDGotoXY
  6275  000C80  C051  F046         	movff	_scrs_speed,LCDWriteInt@val
  6276  000C84  6A47               	clrf	LCDWriteInt@val+1,c
  6277  000C86  0E02               	movlw	2
  6278  000C88  6E48               	movwf	LCDWriteInt@field_length,c
  6279  000C8A  EC38  F009         	call	_LCDWriteInt	;wreg free
  6280                           
  6281                           ;lcd_functions.c: 426: { LCDGotoXY(12,1); LCDWriteString("ON");};
  6282  000C8E  0E01               	movlw	1
  6283  000C90  6E46               	movwf	LCDGotoXY@y,c
  6284  000C92  0E0C               	movlw	12
  6285  000C94  EC6F  F00D         	call	_LCDGotoXY
  6286  000C98  0EF5               	movlw	low STR_10
  6287  000C9A  6E46               	movwf	LCDWriteString@msg,c
  6288  000C9C  0E7F               	movlw	high STR_10
  6289  000C9E  6E47               	movwf	LCDWriteString@msg+1,c
  6290  000CA0  ECD3  F009         	call	_LCDWriteString	;wreg free
  6291                           
  6292                           ;lcd_functions.c: 427: break;
  6293  000CA4  D092               	goto	l703
  6294  000CA6                     l5331:
  6295                           
  6296                           ;lcd_functions.c: 430: { LCDGotoXY(2,1); LCDWriteString(" ");};
  6297  000CA6  0E01               	movlw	1
  6298  000CA8  6E46               	movwf	LCDGotoXY@y,c
  6299  000CAA  0E02               	movlw	2
  6300  000CAC  EC6F  F00D         	call	_LCDGotoXY
  6301  000CB0  0EAE               	movlw	low (STR_21+15)
  6302  000CB2  6E46               	movwf	LCDWriteString@msg,c
  6303  000CB4  0E7E               	movlw	high (STR_21+15)
  6304  000CB6  6E47               	movwf	LCDWriteString@msg+1,c
  6305  000CB8  ECD3  F009         	call	_LCDWriteString	;wreg free
  6306                           
  6307                           ;lcd_functions.c: 431: { LCDGotoXY(9,1); LCDWriteString("<");};
  6308  000CBC  0E01               	movlw	1
  6309  000CBE  6E46               	movwf	LCDGotoXY@y,c
  6310  000CC0  0E09               	movlw	9
  6311  000CC2  EC6F  F00D         	call	_LCDGotoXY
  6312  000CC6  0EF8               	movlw	low STR_7
  6313  000CC8  6E46               	movwf	LCDWriteString@msg,c
  6314  000CCA  0E7F               	movlw	high STR_7
  6315  000CCC  6E47               	movwf	LCDWriteString@msg+1,c
  6316  000CCE  ECD3  F009         	call	_LCDWriteString	;wreg free
  6317                           
  6318                           ;lcd_functions.c: 432: { LCDGotoXY(14,1); LCDWriteString(" ");};
  6319  000CD2  0E01               	movlw	1
  6320  000CD4  6E46               	movwf	LCDGotoXY@y,c
  6321  000CD6  0E0E               	movlw	14
  6322  000CD8  EC6F  F00D         	call	_LCDGotoXY
  6323  000CDC  0EAE               	movlw	low (STR_21+15)
  6324  000CDE  6E46               	movwf	LCDWriteString@msg,c
  6325  000CE0  0E7E               	movlw	high (STR_21+15)
  6326  000CE2  6E47               	movwf	LCDWriteString@msg+1,c
  6327  000CE4  ECD3  F009         	call	_LCDWriteString	;wreg free
  6328                           
  6329                           ;lcd_functions.c: 433: switch (inputs) {
  6330  000CE8  D00C               	goto	l5351
  6331  000CEA                     l5341:
  6332                           
  6333                           ;lcd_functions.c: 435: if(scrs_speed < 50)
  6334  000CEA  0E32               	movlw	50
  6335  000CEC  6051               	cpfslt	_scrs_speed,c
  6336  000CEE  D011               	goto	l5353
  6337                           
  6338                           ;lcd_functions.c: 436: scrs_speed += 5;
  6339  000CF0  0E05               	movlw	5
  6340  000CF2  2651               	addwf	_scrs_speed,f,c
  6341                           
  6342                           ;lcd_functions.c: 437: break;
  6343  000CF4  D00E               	goto	l5353
  6344  000CF6                     l5345:
  6345                           
  6346                           ;lcd_functions.c: 439: if(scrs_speed > 10)
  6347  000CF6  0E0A               	movlw	10
  6348  000CF8  6451               	cpfsgt	_scrs_speed,c
  6349  000CFA  D00B               	goto	l5353
  6350                           
  6351                           ;lcd_functions.c: 440: scrs_speed -= 5;
  6352  000CFC  0E05               	movlw	5
  6353  000CFE  5E51               	subwf	_scrs_speed,f,c
  6354                           
  6355                           ;lcd_functions.c: 444: }
  6356                           
  6357                           ;lcd_functions.c: 443: break;
  6358                           
  6359                           ;lcd_functions.c: 442: default:
  6360                           
  6361                           ;lcd_functions.c: 441: break;
  6362  000D00  D008               	goto	l5353
  6363  000D02                     l5351:
  6364  000D02  5023               	movf	_inputs,w,c
  6365                           
  6366                           ; Switch size 1, requested type "space"
  6367                           ; Number of cases is 2, Range of values is 1 to 2
  6368                           ; switch strategies available:
  6369                           ; Name         Instructions Cycles
  6370                           ; simple_byte            7     4 (average)
  6371                           ;	Chosen strategy is simple_byte
  6372  000D04  0A01               	xorlw	1	; case 1
  6373  000D06  B4D8               	btfsc	status,2,c
  6374  000D08  D7F6               	goto	l5345
  6375  000D0A  0A03               	xorlw	3	; case 2
  6376  000D0C  B4D8               	btfsc	status,2,c
  6377  000D0E  D7ED               	goto	l5341
  6378  000D10  D000               	goto	l5353
  6379  000D12                     l5353:
  6380                           
  6381                           ;lcd_functions.c: 445: { LCDGotoXY(0,1); LCDWriteInt(brightness,2);};
  6382  000D12  0E01               	movlw	1
  6383  000D14  6E46               	movwf	LCDGotoXY@y,c
  6384  000D16  0E00               	movlw	0
  6385  000D18  EC6F  F00D         	call	_LCDGotoXY
  6386  000D1C  C050  F046         	movff	_brightness,LCDWriteInt@val
  6387  000D20  6A47               	clrf	LCDWriteInt@val+1,c
  6388  000D22  0E02               	movlw	2
  6389  000D24  6E48               	movwf	LCDWriteInt@field_length,c
  6390  000D26  EC38  F009         	call	_LCDWriteInt	;wreg free
  6391                           
  6392                           ;lcd_functions.c: 446: { LCDGotoXY(7,1); LCDWriteInt(scrs_speed,2);};
  6393  000D2A  0E01               	movlw	1
  6394  000D2C  6E46               	movwf	LCDGotoXY@y,c
  6395  000D2E  0E07               	movlw	7
  6396  000D30  EC6F  F00D         	call	_LCDGotoXY
  6397  000D34  C051  F046         	movff	_scrs_speed,LCDWriteInt@val
  6398  000D38  6A47               	clrf	LCDWriteInt@val+1,c
  6399  000D3A  0E02               	movlw	2
  6400  000D3C  6E48               	movwf	LCDWriteInt@field_length,c
  6401  000D3E  EC38  F009         	call	_LCDWriteInt	;wreg free
  6402                           
  6403                           ;lcd_functions.c: 447: { LCDGotoXY(12,1); LCDWriteString("ON");};
  6404  000D42  0E01               	movlw	1
  6405  000D44  6E46               	movwf	LCDGotoXY@y,c
  6406  000D46  0E0C               	movlw	12
  6407  000D48  EC6F  F00D         	call	_LCDGotoXY
  6408  000D4C  0EF5               	movlw	low STR_10
  6409  000D4E  6E46               	movwf	LCDWriteString@msg,c
  6410  000D50  0E7F               	movlw	high STR_10
  6411  000D52  6E47               	movwf	LCDWriteString@msg+1,c
  6412  000D54  ECD3  F009         	call	_LCDWriteString	;wreg free
  6413                           
  6414                           ;lcd_functions.c: 448: break;
  6415  000D58  D038               	goto	l703
  6416                           
  6417                           ;lcd_functions.c: 451: switch (inputs) {
  6418                           
  6419                           ;lcd_functions.c: 450: case smLED:
  6420  000D5A  D002               	goto	l5365
  6421  000D5C                     l700:
  6422                           
  6423                           ;lcd_functions.c: 456: PORTAbits.RA5 = !PORTAbits.RA5;
  6424  000D5C  7A80               	btg	3968,5,c	;volatile
  6425                           
  6426                           ;lcd_functions.c: 460: }
  6427                           
  6428                           ;lcd_functions.c: 459: break;
  6429                           
  6430                           ;lcd_functions.c: 458: default:
  6431                           
  6432                           ;lcd_functions.c: 457: break;
  6433  000D5E  D008               	goto	l5367
  6434  000D60                     l5365:
  6435  000D60  5023               	movf	_inputs,w,c
  6436                           
  6437                           ; Switch size 1, requested type "space"
  6438                           ; Number of cases is 2, Range of values is 1 to 2
  6439                           ; switch strategies available:
  6440                           ; Name         Instructions Cycles
  6441                           ; simple_byte            7     4 (average)
  6442                           ;	Chosen strategy is simple_byte
  6443  000D62  0A01               	xorlw	1	; case 1
  6444  000D64  B4D8               	btfsc	status,2,c
  6445  000D66  D7FA               	goto	l700
  6446  000D68  0A03               	xorlw	3	; case 2
  6447  000D6A  B4D8               	btfsc	status,2,c
  6448  000D6C  D7F7               	goto	l700
  6449  000D6E  D000               	goto	l5367
  6450  000D70                     l5367:
  6451                           
  6452                           ;lcd_functions.c: 461: { LCDGotoXY(2,1); LCDWriteString(" ");};
  6453  000D70  0E01               	movlw	1
  6454  000D72  6E46               	movwf	LCDGotoXY@y,c
  6455  000D74  0E02               	movlw	2
  6456  000D76  EC6F  F00D         	call	_LCDGotoXY
  6457  000D7A  0EAE               	movlw	low (STR_21+15)
  6458  000D7C  6E46               	movwf	LCDWriteString@msg,c
  6459  000D7E  0E7E               	movlw	high (STR_21+15)
  6460  000D80  6E47               	movwf	LCDWriteString@msg+1,c
  6461  000D82  ECD3  F009         	call	_LCDWriteString	;wreg free
  6462                           
  6463                           ;lcd_functions.c: 462: { LCDGotoXY(9,1); LCDWriteString(" ");};
  6464  000D86  0E01               	movlw	1
  6465  000D88  6E46               	movwf	LCDGotoXY@y,c
  6466  000D8A  0E09               	movlw	9
  6467  000D8C  EC6F  F00D         	call	_LCDGotoXY
  6468  000D90  0EAE               	movlw	low (STR_21+15)
  6469  000D92  6E46               	movwf	LCDWriteString@msg,c
  6470  000D94  0E7E               	movlw	high (STR_21+15)
  6471  000D96  6E47               	movwf	LCDWriteString@msg+1,c
  6472  000D98  ECD3  F009         	call	_LCDWriteString	;wreg free
  6473                           
  6474                           ;lcd_functions.c: 463: { LCDGotoXY(14,1); LCDWriteString("<");};
  6475  000D9C  0E01               	movlw	1
  6476  000D9E  6E46               	movwf	LCDGotoXY@y,c
  6477  000DA0  0E0E               	movlw	14
  6478  000DA2  EC6F  F00D         	call	_LCDGotoXY
  6479  000DA6  0EF8               	movlw	low STR_7
  6480  000DA8  6E46               	movwf	LCDWriteString@msg,c
  6481  000DAA  0E7F               	movlw	high STR_7
  6482  000DAC  6E47               	movwf	LCDWriteString@msg+1,c
  6483  000DAE  ECD3  F009         	call	_LCDWriteString	;wreg free
  6484                           
  6485                           ;lcd_functions.c: 468: }
  6486                           
  6487                           ;lcd_functions.c: 467: break;
  6488                           
  6489                           ;lcd_functions.c: 466: default:
  6490                           
  6491                           ;lcd_functions.c: 464: break;
  6492  000DB2  D00B               	goto	l703
  6493  000DB4                     l5379:
  6494  000DB4  502C               	movf	_sub_menu_lcd,w,c
  6495                           
  6496                           ; Switch size 1, requested type "space"
  6497                           ; Number of cases is 3, Range of values is 0 to 2
  6498                           ; switch strategies available:
  6499                           ; Name         Instructions Cycles
  6500                           ; simple_byte           10     6 (average)
  6501                           ;	Chosen strategy is simple_byte
  6502  000DB6  0A00               	xorlw	0	; case 0
  6503  000DB8  B4D8               	btfsc	status,2,c
  6504  000DBA  D70F               	goto	l5295
  6505  000DBC  0A01               	xorlw	1	; case 1
  6506  000DBE  B4D8               	btfsc	status,2,c
  6507  000DC0  D772               	goto	l5331
  6508  000DC2  0A03               	xorlw	3	; case 2
  6509  000DC4  B4D8               	btfsc	status,2,c
  6510  000DC6  D7CC               	goto	l5365
  6511  000DC8  D000               	goto	l703
  6512  000DCA                     l703:
  6513  000DCA  0012               	return		;funcret
  6514  000DCC                     __end_of_lcd_sub_menu_lcd:
  6515                           	opt stack 0
  6516                           tblptru	equ	0xFF8
  6517                           tblptrh	equ	0xFF7
  6518                           tblptrl	equ	0xFF6
  6519                           tablat	equ	0xFF5
  6520                           prodh	equ	0xFF4
  6521                           prodl	equ	0xFF3
  6522                           intcon	equ	0xFF2
  6523                           postinc0	equ	0xFEE
  6524                           wreg	equ	0xFE8
  6525                           postdec1	equ	0xFE5
  6526                           plusw1	equ	0xFE3
  6527                           fsr1l	equ	0xFE1
  6528                           indf2	equ	0xFDF
  6529                           plusw2	equ	0xFDB
  6530                           fsr2h	equ	0xFDA
  6531                           fsr2l	equ	0xFD9
  6532                           status	equ	0xFD8
  6533                           
  6534 ;; *************** function _LCDWriteString *****************
  6535 ;; Defined at:
  6536 ;;		line 296 in file "lcd_hd44780.c"
  6537 ;; Parameters:    Size  Location     Type
  6538 ;;  msg             2   23[COMRAM] PTR const unsigned char 
  6539 ;;		 -> STR_71(17), STR_70(17), STR_69(12), STR_68(12), 
  6540 ;;		 -> STR_67(17), STR_66(17), STR_65(3), STR_64(3), 
  6541 ;;		 -> STR_63(3), STR_62(3), STR_61(3), STR_60(3), 
  6542 ;;		 -> STR_59(3), STR_58(3), STR_57(3), STR_56(3), 
  6543 ;;		 -> STR_55(3), STR_54(3), STR_53(2), STR_52(2), 
  6544 ;;		 -> STR_51(12), STR_50(12), STR_49(3), STR_48(3), 
  6545 ;;		 -> STR_47(3), STR_46(3), STR_45(3), STR_44(3), 
  6546 ;;		 -> STR_43(2), STR_42(3), STR_41(3), STR_40(3), 
  6547 ;;		 -> lcd_start_up@start(6), STR_39(17), STR_38(9), STR_37(17), 
  6548 ;;		 -> STR_36(9), STR_35(9), STR_34(9), STR_33(9), 
  6549 ;;		 -> STR_32(9), STR_31(9), STR_30(9), STR_29(9), 
  6550 ;;		 -> STR_28(9), STR_27(9), STR_26(9), STR_25(9), 
  6551 ;;		 -> STR_24(9), STR_23(17), STR_22(17), STR_21(17), 
  6552 ;;		 -> STR_20(17), STR_19(17), STR_18(17), STR_17(2), 
  6553 ;;		 -> STR_16(2), STR_15(2), STR_14(3), STR_13(2), 
  6554 ;;		 -> STR_12(2), STR_11(2), STR_10(3), STR_9(2), 
  6555 ;;		 -> STR_8(2), STR_7(2), STR_6(5), STR_5(3), 
  6556 ;;		 -> STR_4(8), STR_3(8), STR_2(8), STR_1(8), 
  6557 ;; Auto vars:     Size  Location     Type
  6558 ;;  cc              1   25[COMRAM] char 
  6559 ;; Return value:  Size  Location     Type
  6560 ;;		None               void
  6561 ;; Registers used:
  6562 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6563 ;; Tracked objects:
  6564 ;;		On entry : 0/0
  6565 ;;		On exit  : 0/0
  6566 ;;		Unchanged: 0/0
  6567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6568 ;;      Params:         2       0       0       0       0       0       0       0       0
  6569 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6570 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6571 ;;      Totals:         3       0       0       0       0       0       0       0       0
  6572 ;;Total ram usage:        3 bytes
  6573 ;; Hardware stack levels used:    1
  6574 ;; Hardware stack levels required when called:    3
  6575 ;; This function calls:
  6576 ;;		_LCDByte
  6577 ;; This function is called by:
  6578 ;;		_lcd_sub_menu_metronoom
  6579 ;;		_lcd_sub_menu_lcd
  6580 ;;		_lcd_update
  6581 ;;		_lcd_start_up
  6582 ;;		_lcd_connection
  6583 ;;		_lcd_screensaver
  6584 ;;		_lcd_time_out
  6585 ;; This function uses a non-reentrant model
  6586 ;;
  6587                           
  6588                           	psect	text15
  6589  0013A6                     __ptext15:
  6590                           	opt stack 0
  6591  0013A6                     _LCDWriteString:
  6592                           	opt stack 25
  6593                           
  6594                           ;lcd_hd44780.c: 325: while (*msg != '\0') {
  6595                           
  6596                           ;incstack = 0
  6597  0013A6  D066               	goto	l4705
  6598  0013A8                     l4685:
  6599                           
  6600                           ;lcd_hd44780.c: 327: if (*msg == '%') {
  6601  0013A8  C046  FFF6         	movff	LCDWriteString@msg,tblptrl
  6602  0013AC  C047  FFF7         	movff	LCDWriteString@msg+1,tblptrh
  6603  0013B0  6AF8               	clrf	tblptru,c
  6604  0013B2  0E07               	movlw	(high __ramtop+-1)
  6605  0013B4  64F7               	cpfsgt	tblptrh,c
  6606  0013B6  D003               	bra	u3587
  6607  0013B8  0008               	tblrd		*
  6608  0013BA  50F5               	movf	tablat,w,c
  6609  0013BC  D005               	bra	u3580
  6610  0013BE                     u3587:
  6611  0013BE  CFF6 FFE9          	movff	tblptrl,fsr0l
  6612  0013C2  CFF7 FFEA          	movff	tblptrh,fsr0h
  6613  0013C6  50EF               	movf	indf0,w,c
  6614  0013C8                     u3580:
  6615  0013C8  0A25               	xorlw	37
  6616  0013CA  A4D8               	btfss	status,2,c
  6617  0013CC  D03B               	goto	l4701
  6618                           
  6619                           ;lcd_hd44780.c: 328: msg++;
  6620  0013CE  4A46               	infsnz	LCDWriteString@msg,f,c
  6621  0013D0  2A47               	incf	LCDWriteString@msg+1,f,c
  6622                           
  6623                           ;lcd_hd44780.c: 329: int8_t cc = *msg - '0';
  6624  0013D2  C046  FFF6         	movff	LCDWriteString@msg,tblptrl
  6625  0013D6  C047  FFF7         	movff	LCDWriteString@msg+1,tblptrh
  6626  0013DA  6AF8               	clrf	tblptru,c
  6627  0013DC  0E07               	movlw	(high __ramtop+-1)
  6628  0013DE  64F7               	cpfsgt	tblptrh,c
  6629  0013E0  D003               	bra	u3607
  6630  0013E2  0008               	tblrd		*
  6631  0013E4  50F5               	movf	tablat,w,c
  6632  0013E6  D005               	bra	u3600
  6633  0013E8                     u3607:
  6634  0013E8  CFF6 FFE9          	movff	tblptrl,fsr0l
  6635  0013EC  CFF7 FFEA          	movff	tblptrh,fsr0h
  6636  0013F0  50EF               	movf	indf0,w,c
  6637  0013F2                     u3600:
  6638  0013F2  0FD0               	addlw	208
  6639  0013F4  6E48               	movwf	LCDWriteString@cc,c
  6640                           
  6641                           ;lcd_hd44780.c: 331: if (cc >= 0 && cc <= 7) {
  6642  0013F6  BE48               	btfsc	LCDWriteString@cc,7,c
  6643  0013F8  D00B               	goto	l4697
  6644  0013FA  5048               	movf	LCDWriteString@cc,w,c
  6645  0013FC  0A80               	xorlw	128
  6646  0013FE  0F78               	addlw	-136
  6647  001400  B0D8               	btfsc	status,0,c
  6648  001402  D006               	goto	l4697
  6649                           
  6650                           ;lcd_hd44780.c: 332: (LCDByte(cc,1));
  6651  001404  0E01               	movlw	1
  6652  001406  6E40               	movwf	LCDByte@isdata,c
  6653  001408  5048               	movf	LCDWriteString@cc,w,c
  6654  00140A  ECB1  F00C         	call	_LCDByte
  6655                           
  6656                           ;lcd_hd44780.c: 333: } else {
  6657  00140E  D02F               	goto	l4703
  6658  001410                     l4697:
  6659                           
  6660                           ;lcd_hd44780.c: 334: (LCDByte('%',1));
  6661  001410  0E01               	movlw	1
  6662  001412  6E40               	movwf	LCDByte@isdata,c
  6663  001414  0E25               	movlw	37
  6664  001416  ECB1  F00C         	call	_LCDByte
  6665                           
  6666                           ;lcd_hd44780.c: 335: (LCDByte(*msg,1));
  6667  00141A  0E01               	movlw	1
  6668  00141C  6E40               	movwf	LCDByte@isdata,c
  6669  00141E  C046  FFF6         	movff	LCDWriteString@msg,tblptrl
  6670  001422  C047  FFF7         	movff	LCDWriteString@msg+1,tblptrh
  6671  001426  6AF8               	clrf	tblptru,c
  6672  001428  0E07               	movlw	(high __ramtop+-1)
  6673  00142A  64F7               	cpfsgt	tblptrh,c
  6674  00142C  D003               	bra	u3637
  6675  00142E  0008               	tblrd		*
  6676  001430  50F5               	movf	tablat,w,c
  6677  001432  D005               	bra	u3630
  6678  001434                     u3637:
  6679  001434  CFF6 FFE9          	movff	tblptrl,fsr0l
  6680  001438  CFF7 FFEA          	movff	tblptrh,fsr0h
  6681  00143C  50EF               	movf	indf0,w,c
  6682  00143E                     u3630:
  6683  00143E  ECB1  F00C         	call	_LCDByte
  6684                           
  6685                           ;lcd_hd44780.c: 336: }
  6686                           ;lcd_hd44780.c: 337: } else {
  6687  001442  D015               	goto	l4703
  6688  001444                     l4701:
  6689                           
  6690                           ;lcd_hd44780.c: 338: (LCDByte(*msg,1));
  6691  001444  0E01               	movlw	1
  6692  001446  6E40               	movwf	LCDByte@isdata,c
  6693  001448  C046  FFF6         	movff	LCDWriteString@msg,tblptrl
  6694  00144C  C047  FFF7         	movff	LCDWriteString@msg+1,tblptrh
  6695  001450  6AF8               	clrf	tblptru,c
  6696  001452  0E07               	movlw	(high __ramtop+-1)
  6697  001454  64F7               	cpfsgt	tblptrh,c
  6698  001456  D003               	bra	u3647
  6699  001458  0008               	tblrd		*
  6700  00145A  50F5               	movf	tablat,w,c
  6701  00145C  D005               	bra	u3640
  6702  00145E                     u3647:
  6703  00145E  CFF6 FFE9          	movff	tblptrl,fsr0l
  6704  001462  CFF7 FFEA          	movff	tblptrh,fsr0h
  6705  001466  50EF               	movf	indf0,w,c
  6706  001468                     u3640:
  6707  001468  ECB1  F00C         	call	_LCDByte
  6708  00146C  D000               	goto	l4703
  6709  00146E                     l4703:
  6710                           
  6711                           ;lcd_hd44780.c: 339: }
  6712                           ;lcd_hd44780.c: 340: msg++;
  6713  00146E  4A46               	infsnz	LCDWriteString@msg,f,c
  6714  001470  2A47               	incf	LCDWriteString@msg+1,f,c
  6715  001472  D000               	goto	l4705
  6716  001474                     l4705:
  6717  001474  C046  FFF6         	movff	LCDWriteString@msg,tblptrl
  6718  001478  C047  FFF7         	movff	LCDWriteString@msg+1,tblptrh
  6719  00147C  6AF8               	clrf	tblptru,c
  6720  00147E  0E07               	movlw	(high __ramtop+-1)
  6721  001480  64F7               	cpfsgt	tblptrh,c
  6722  001482  D003               	bra	u3657
  6723  001484  0008               	tblrd		*
  6724  001486  50F5               	movf	tablat,w,c
  6725  001488  D005               	bra	u3650
  6726  00148A                     u3657:
  6727  00148A  CFF6 FFE9          	movff	tblptrl,fsr0l
  6728  00148E  CFF7 FFEA          	movff	tblptrh,fsr0h
  6729  001492  50EF               	movf	indf0,w,c
  6730  001494                     u3650:
  6731  001494  0900               	iorlw	0
  6732  001496  A4D8               	btfss	status,2,c
  6733  001498  D787               	goto	l4685
  6734  00149A  0012               	return		;funcret
  6735  00149C                     __end_of_LCDWriteString:
  6736                           	opt stack 0
  6737                           tblptru	equ	0xFF8
  6738                           tblptrh	equ	0xFF7
  6739                           tblptrl	equ	0xFF6
  6740                           tablat	equ	0xFF5
  6741                           prodh	equ	0xFF4
  6742                           prodl	equ	0xFF3
  6743                           intcon	equ	0xFF2
  6744                           indf0	equ	0xFEF
  6745                           postinc0	equ	0xFEE
  6746                           fsr0h	equ	0xFEA
  6747                           fsr0l	equ	0xFE9
  6748                           wreg	equ	0xFE8
  6749                           postdec1	equ	0xFE5
  6750                           plusw1	equ	0xFE3
  6751                           fsr1l	equ	0xFE1
  6752                           indf2	equ	0xFDF
  6753                           plusw2	equ	0xFDB
  6754                           fsr2h	equ	0xFDA
  6755                           fsr2l	equ	0xFD9
  6756                           status	equ	0xFD8
  6757                           
  6758 ;; *************** function _LCDWriteInt *****************
  6759 ;; Defined at:
  6760 ;;		line 383 in file "lcd_hd44780.c"
  6761 ;; Parameters:    Size  Location     Type
  6762 ;;  val             2   23[COMRAM] int 
  6763 ;;  field_length    1   25[COMRAM] char 
  6764 ;; Auto vars:     Size  Location     Type
  6765 ;;  str             5    2[BANK0 ] unsigned char [5]
  6766 ;;  i               2    9[BANK0 ] int 
  6767 ;;  j               2    7[BANK0 ] int 
  6768 ;; Return value:  Size  Location     Type
  6769 ;;		None               void
  6770 ;; Registers used:
  6771 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6772 ;; Tracked objects:
  6773 ;;		On entry : 0/0
  6774 ;;		On exit  : 0/0
  6775 ;;		Unchanged: 0/0
  6776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6777 ;;      Params:         3       0       0       0       0       0       0       0       0
  6778 ;;      Locals:         0       9       0       0       0       0       0       0       0
  6779 ;;      Temps:          0       2       0       0       0       0       0       0       0
  6780 ;;      Totals:         3      11       0       0       0       0       0       0       0
  6781 ;;Total ram usage:       14 bytes
  6782 ;; Hardware stack levels used:    1
  6783 ;; Hardware stack levels required when called:    3
  6784 ;; This function calls:
  6785 ;;		_LCDByte
  6786 ;;		___awdiv
  6787 ;;		___awmod
  6788 ;; This function is called by:
  6789 ;;		_main
  6790 ;;		_lcd_sub_menu_metronoom
  6791 ;;		_lcd_sub_menu_lcd
  6792 ;; This function uses a non-reentrant model
  6793 ;;
  6794                           
  6795                           	psect	text16
  6796  001270                     __ptext16:
  6797                           	opt stack 0
  6798  001270                     _LCDWriteInt:
  6799                           	opt stack 25
  6800                           
  6801                           ;lcd_hd44780.c: 395: char str[5] = {0, 0, 0, 0, 0};
  6802                           
  6803                           ;incstack = 0
  6804  001270  EE20  F079         	lfsr	2,LCDWriteInt@F4932
  6805  001274  EE10  F096         	lfsr	1,LCDWriteInt@str
  6806  001278  0E04               	movlw	4
  6807  00127A                     u3881:
  6808  00127A  CFDB FFE3          	movff	plusw2,plusw1
  6809  00127E  06E8               	decf	wreg,f,c
  6810  001280  E2FC               	bc	u3881
  6811                           
  6812                           ;lcd_hd44780.c: 396: int i = 4, j = 0;
  6813  001282  0E00               	movlw	0
  6814  001284  0100               	movlb	0	; () banked
  6815  001286  6F9E               	movwf	(LCDWriteInt@i+1)& (0+255),b
  6816  001288  0E04               	movlw	4
  6817  00128A  6F9D               	movwf	LCDWriteInt@i& (0+255),b
  6818                           
  6819                           ; BSR set to: 0
  6820  00128C  0E00               	movlw	0
  6821  00128E  0100               	movlb	0	; () banked
  6822  001290  6F9C               	movwf	(LCDWriteInt@j+1)& (0+255),b
  6823  001292  0E00               	movlw	0
  6824  001294  6F9B               	movwf	LCDWriteInt@j& (0+255),b
  6825                           
  6826                           ; BSR set to: 0
  6827                           ;lcd_hd44780.c: 399: if (val < 0) {
  6828  001296  AE47               	btfss	LCDWriteInt@val+1,7,c
  6829  001298  D031               	goto	l4825
  6830                           
  6831                           ; BSR set to: 0
  6832                           ;lcd_hd44780.c: 400: (LCDByte('-',1));
  6833  00129A  0E01               	movlw	1
  6834  00129C  6E40               	movwf	LCDByte@isdata,c
  6835  00129E  0E2D               	movlw	45
  6836  0012A0  ECB1  F00C         	call	_LCDByte
  6837                           
  6838                           ;lcd_hd44780.c: 401: val = val*-1;
  6839  0012A4  6C46               	negf	LCDWriteInt@val,c
  6840  0012A6  1E47               	comf	LCDWriteInt@val+1,f,c
  6841  0012A8  B0D8               	btfsc	status,0,c
  6842  0012AA  2A47               	incf	LCDWriteInt@val+1,f,c
  6843                           
  6844                           ;lcd_hd44780.c: 402: }
  6845                           ;lcd_hd44780.c: 404: while (val) {
  6846  0012AC  D027               	goto	l4825
  6847  0012AE                     l4819:
  6848                           
  6849                           ;lcd_hd44780.c: 405: str[i] = val % 10;
  6850  0012AE  0E96               	movlw	low LCDWriteInt@str
  6851  0012B0  0100               	movlb	0	; () banked
  6852  0012B2  259D               	addwf	LCDWriteInt@i& (0+255),w,b
  6853  0012B4  6ED9               	movwf	fsr2l,c
  6854  0012B6  0E00               	movlw	high LCDWriteInt@str
  6855  0012B8  0100               	movlb	0	; () banked
  6856  0012BA  219E               	addwfc	(LCDWriteInt@i+1)& (0+255),w,b
  6857  0012BC  6EDA               	movwf	fsr2h,c
  6858  0012BE  C046  F03D         	movff	LCDWriteInt@val,___awmod@dividend
  6859  0012C2  C047  F03E         	movff	LCDWriteInt@val+1,___awmod@dividend+1
  6860  0012C6  0E00               	movlw	0
  6861  0012C8  6E40               	movwf	___awmod@divisor+1,c
  6862  0012CA  0E0A               	movlw	10
  6863  0012CC  6E3F               	movwf	___awmod@divisor,c
  6864  0012CE  EC38  F00C         	call	___awmod	;wreg free
  6865  0012D2  503D               	movf	?___awmod,w,c
  6866  0012D4  6EDF               	movwf	indf2,c
  6867                           
  6868                           ;lcd_hd44780.c: 406: val = val / 10;
  6869  0012D6  C046  F03D         	movff	LCDWriteInt@val,___awdiv@dividend
  6870  0012DA  C047  F03E         	movff	LCDWriteInt@val+1,___awdiv@dividend+1
  6871  0012DE  0E00               	movlw	0
  6872  0012E0  6E40               	movwf	___awdiv@divisor+1,c
  6873  0012E2  0E0A               	movlw	10
  6874  0012E4  6E3F               	movwf	___awdiv@divisor,c
  6875  0012E6  EC1B  F00B         	call	___awdiv	;wreg free
  6876  0012EA  C03D  F046         	movff	?___awdiv,LCDWriteInt@val
  6877  0012EE  C03E  F047         	movff	?___awdiv+1,LCDWriteInt@val+1
  6878                           
  6879                           ;lcd_hd44780.c: 407: i--;
  6880  0012F2  0100               	movlb	0	; () banked
  6881  0012F4  079D               	decf	LCDWriteInt@i& (0+255),f,b
  6882  0012F6  A0D8               	btfss	status,0,c
  6883  0012F8  079E               	decf	(LCDWriteInt@i+1)& (0+255),f,b
  6884  0012FA  D000               	goto	l4825
  6885  0012FC                     l4825:
  6886  0012FC  5046               	movf	LCDWriteInt@val,w,c
  6887  0012FE  1047               	iorwf	LCDWriteInt@val+1,w,c
  6888  001300  A4D8               	btfss	status,2,c
  6889  001302  D7D5               	goto	l4819
  6890                           
  6891                           ;lcd_hd44780.c: 408: }
  6892                           ;lcd_hd44780.c: 409: if (field_length == -1)
  6893  001304  2848               	incf	LCDWriteInt@field_length,w,c
  6894  001306  B4D8               	btfsc	status,2,c
  6895  001308  D006               	goto	l4833
  6896  00130A  D012               	goto	l4835
  6897                           
  6898                           ;lcd_hd44780.c: 410: while (str[j] == 0) j++;
  6899  00130C  D004               	goto	l4833
  6900  00130E                     l4831:
  6901  00130E  0100               	movlb	0	; () banked
  6902  001310  4B9B               	infsnz	LCDWriteInt@j& (0+255),f,b
  6903  001312  2B9C               	incf	(LCDWriteInt@j+1)& (0+255),f,b
  6904  001314  D000               	goto	l4833
  6905  001316                     l4833:
  6906  001316  0E96               	movlw	low LCDWriteInt@str
  6907  001318  0100               	movlb	0	; () banked
  6908  00131A  259B               	addwf	LCDWriteInt@j& (0+255),w,b
  6909  00131C  6ED9               	movwf	fsr2l,c
  6910  00131E  0E00               	movlw	high LCDWriteInt@str
  6911  001320  0100               	movlb	0	; () banked
  6912  001322  219C               	addwfc	(LCDWriteInt@j+1)& (0+255),w,b
  6913  001324  6EDA               	movwf	fsr2h,c
  6914  001326  50DF               	movf	indf2,w,c
  6915  001328  A4D8               	btfss	status,2,c
  6916  00132A  D018               	goto	l4837
  6917  00132C  D7F0               	goto	l4831
  6918                           
  6919                           ; BSR set to: 0
  6920  00132E  D016               	goto	l4837
  6921  001330                     l4835:
  6922                           
  6923                           ;lcd_hd44780.c: 411: else
  6924                           ;lcd_hd44780.c: 412: j = 5 - field_length;
  6925  001330  C048  F094         	movff	LCDWriteInt@field_length,??_LCDWriteInt
  6926  001334  0100               	movlb	0	; () banked
  6927  001336  6B95               	clrf	(??_LCDWriteInt+1)& (0+255),b
  6928  001338  BF94               	btfsc	??_LCDWriteInt& (0+255),7,b
  6929  00133A  0795               	decf	(??_LCDWriteInt+1)& (0+255),f,b
  6930  00133C  0100               	movlb	0	; () banked
  6931  00133E  1F94               	comf	??_LCDWriteInt& (0+255),f,b
  6932  001340  1F95               	comf	(??_LCDWriteInt+1)& (0+255),f,b
  6933  001342  4B94               	infsnz	??_LCDWriteInt& (0+255),f,b
  6934  001344  2B95               	incf	(??_LCDWriteInt+1)& (0+255),f,b
  6935  001346  0E05               	movlw	5
  6936  001348  0100               	movlb	0	; () banked
  6937  00134A  2594               	addwf	??_LCDWriteInt& (0+255),w,b
  6938  00134C  0100               	movlb	0	; () banked
  6939  00134E  6F9B               	movwf	LCDWriteInt@j& (0+255),b
  6940  001350  0E00               	movlw	0
  6941  001352  0100               	movlb	0	; () banked
  6942  001354  2195               	addwfc	(??_LCDWriteInt+1)& (0+255),w,b
  6943  001356  0100               	movlb	0	; () banked
  6944  001358  6F9C               	movwf	(LCDWriteInt@j+1)& (0+255),b
  6945  00135A  D000               	goto	l4837
  6946  00135C                     l4837:
  6947                           
  6948                           ; BSR set to: 0
  6949                           ;lcd_hd44780.c: 415: for (i = j; i < 5; i++) {
  6950  00135C  C09B  F09D         	movff	LCDWriteInt@j,LCDWriteInt@i
  6951  001360  C09C  F09E         	movff	LCDWriteInt@j+1,LCDWriteInt@i+1
  6952  001364  0100               	movlb	0	; () banked
  6953  001366  BF9E               	btfsc	(LCDWriteInt@i+1)& (0+255),7,b
  6954  001368  D00A               	goto	l4841
  6955  00136A  0100               	movlb	0	; () banked
  6956  00136C  519E               	movf	(LCDWriteInt@i+1)& (0+255),w,b
  6957  00136E  E11A               	bnz	l197
  6958  001370  0E05               	movlw	5
  6959  001372  0100               	movlb	0	; () banked
  6960  001374  5D9D               	subwf	LCDWriteInt@i& (0+255),w,b
  6961  001376  B0D8               	btfsc	status,0,c
  6962  001378  D015               	goto	l197
  6963  00137A  D001               	goto	l4841
  6964                           
  6965                           ; BSR set to: 0
  6966  00137C  D013               	goto	l197
  6967  00137E                     l4841:
  6968                           
  6969                           ; BSR set to: 0
  6970                           ;lcd_hd44780.c: 416: (LCDByte(48 + str[i],1));
  6971  00137E  0E01               	movlw	1
  6972  001380  6E40               	movwf	LCDByte@isdata,c
  6973  001382  0E96               	movlw	low LCDWriteInt@str
  6974  001384  0100               	movlb	0	; () banked
  6975  001386  259D               	addwf	LCDWriteInt@i& (0+255),w,b
  6976  001388  6ED9               	movwf	fsr2l,c
  6977  00138A  0E00               	movlw	high LCDWriteInt@str
  6978  00138C  0100               	movlb	0	; () banked
  6979  00138E  219E               	addwfc	(LCDWriteInt@i+1)& (0+255),w,b
  6980  001390  6EDA               	movwf	fsr2h,c
  6981  001392  50DF               	movf	indf2,w,c
  6982  001394  0F30               	addlw	48
  6983  001396  ECB1  F00C         	call	_LCDByte
  6984  00139A  0100               	movlb	0	; () banked
  6985  00139C  4B9D               	infsnz	LCDWriteInt@i& (0+255),f,b
  6986  00139E  2B9E               	incf	(LCDWriteInt@i+1)& (0+255),f,b
  6987  0013A0  D7E1               	goto	L8
  6988                           
  6989                           ; BSR set to: 0
  6990  0013A2  D000               	goto	l197
  6991  0013A4                     l197:
  6992                           
  6993                           ; BSR set to: 0
  6994  0013A4  0012               	return		;funcret
  6995  0013A6                     __end_of_LCDWriteInt:
  6996                           	opt stack 0
  6997                           tblptru	equ	0xFF8
  6998                           tblptrh	equ	0xFF7
  6999                           tblptrl	equ	0xFF6
  7000                           tablat	equ	0xFF5
  7001                           prodh	equ	0xFF4
  7002                           prodl	equ	0xFF3
  7003                           intcon	equ	0xFF2
  7004                           indf0	equ	0xFEF
  7005                           postinc0	equ	0xFEE
  7006                           fsr0h	equ	0xFEA
  7007                           fsr0l	equ	0xFE9
  7008                           wreg	equ	0xFE8
  7009                           postdec1	equ	0xFE5
  7010                           plusw1	equ	0xFE3
  7011                           fsr1l	equ	0xFE1
  7012                           indf2	equ	0xFDF
  7013                           plusw2	equ	0xFDB
  7014                           fsr2h	equ	0xFDA
  7015                           fsr2l	equ	0xFD9
  7016                           status	equ	0xFD8
  7017                           
  7018 ;; *************** function ___awmod *****************
  7019 ;; Defined at:
  7020 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awmod.c"
  7021 ;; Parameters:    Size  Location     Type
  7022 ;;  dividend        2   14[COMRAM] int 
  7023 ;;  divisor         2   16[COMRAM] int 
  7024 ;; Auto vars:     Size  Location     Type
  7025 ;;  sign            1   19[COMRAM] unsigned char 
  7026 ;;  counter         1   18[COMRAM] unsigned char 
  7027 ;; Return value:  Size  Location     Type
  7028 ;;                  2   14[COMRAM] int 
  7029 ;; Registers used:
  7030 ;;		wreg, status,2, status,0
  7031 ;; Tracked objects:
  7032 ;;		On entry : 0/0
  7033 ;;		On exit  : 0/0
  7034 ;;		Unchanged: 0/0
  7035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7036 ;;      Params:         4       0       0       0       0       0       0       0       0
  7037 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7038 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7039 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7040 ;;Total ram usage:        6 bytes
  7041 ;; Hardware stack levels used:    1
  7042 ;; Hardware stack levels required when called:    1
  7043 ;; This function calls:
  7044 ;;		Nothing
  7045 ;; This function is called by:
  7046 ;;		_LCDWriteInt
  7047 ;; This function uses a non-reentrant model
  7048 ;;
  7049                           
  7050                           	psect	text17
  7051  001870                     __ptext17:
  7052                           	opt stack 0
  7053  001870                     ___awmod:
  7054                           	opt stack 26
  7055                           
  7056                           ; BSR set to: 0
  7057                           ;incstack = 0
  7058  001870  0E00               	movlw	0
  7059  001872  6E42               	movwf	___awmod@sign,c
  7060  001874  AE3E               	btfss	___awmod@dividend+1,7,c
  7061  001876  D007               	goto	l4777
  7062  001878  6C3D               	negf	___awmod@dividend,c
  7063  00187A  1E3E               	comf	___awmod@dividend+1,f,c
  7064  00187C  B0D8               	btfsc	status,0,c
  7065  00187E  2A3E               	incf	___awmod@dividend+1,f,c
  7066  001880  0E01               	movlw	1
  7067  001882  6E42               	movwf	___awmod@sign,c
  7068  001884  D000               	goto	l4777
  7069  001886                     l4777:
  7070  001886  AE40               	btfss	___awmod@divisor+1,7,c
  7071  001888  D005               	goto	l4781
  7072  00188A  6C3F               	negf	___awmod@divisor,c
  7073  00188C  1E40               	comf	___awmod@divisor+1,f,c
  7074  00188E  B0D8               	btfsc	status,0,c
  7075  001890  2A40               	incf	___awmod@divisor+1,f,c
  7076  001892  D000               	goto	l4781
  7077  001894                     l4781:
  7078  001894  503F               	movf	___awmod@divisor,w,c
  7079  001896  1040               	iorwf	___awmod@divisor+1,w,c
  7080  001898  B4D8               	btfsc	status,2,c
  7081  00189A  D01D               	goto	l4797
  7082  00189C  0E01               	movlw	1
  7083  00189E  6E41               	movwf	___awmod@counter,c
  7084  0018A0  D005               	goto	l4787
  7085  0018A2                     l4785:
  7086  0018A2  90D8               	bcf	status,0,c
  7087  0018A4  363F               	rlcf	___awmod@divisor,f,c
  7088  0018A6  3640               	rlcf	___awmod@divisor+1,f,c
  7089  0018A8  2A41               	incf	___awmod@counter,f,c
  7090  0018AA  D000               	goto	l4787
  7091  0018AC                     l4787:
  7092  0018AC  BE40               	btfsc	___awmod@divisor+1,7,c
  7093  0018AE  D002               	goto	l4789
  7094  0018B0  D7F8               	goto	l4785
  7095  0018B2  D000               	goto	l4789
  7096  0018B4                     l4789:
  7097  0018B4  503F               	movf	___awmod@divisor,w,c
  7098  0018B6  5C3D               	subwf	___awmod@dividend,w,c
  7099  0018B8  5040               	movf	___awmod@divisor+1,w,c
  7100  0018BA  583E               	subwfb	___awmod@dividend+1,w,c
  7101  0018BC  A0D8               	btfss	status,0,c
  7102  0018BE  D005               	goto	l4793
  7103  0018C0  503F               	movf	___awmod@divisor,w,c
  7104  0018C2  5E3D               	subwf	___awmod@dividend,f,c
  7105  0018C4  5040               	movf	___awmod@divisor+1,w,c
  7106  0018C6  5A3E               	subwfb	___awmod@dividend+1,f,c
  7107  0018C8  D000               	goto	l4793
  7108  0018CA                     l4793:
  7109  0018CA  90D8               	bcf	status,0,c
  7110  0018CC  3240               	rrcf	___awmod@divisor+1,f,c
  7111  0018CE  323F               	rrcf	___awmod@divisor,f,c
  7112  0018D0  2E41               	decfsz	___awmod@counter,f,c
  7113  0018D2  D7F0               	goto	l4789
  7114  0018D4  D000               	goto	l4797
  7115  0018D6                     l4797:
  7116  0018D6  5042               	movf	___awmod@sign,w,c
  7117  0018D8  B4D8               	btfsc	status,2,c
  7118  0018DA  D005               	goto	l4801
  7119  0018DC  6C3D               	negf	___awmod@dividend,c
  7120  0018DE  1E3E               	comf	___awmod@dividend+1,f,c
  7121  0018E0  B0D8               	btfsc	status,0,c
  7122  0018E2  2A3E               	incf	___awmod@dividend+1,f,c
  7123  0018E4  D000               	goto	l4801
  7124  0018E6                     l4801:
  7125  0018E6  C03D  F03D         	movff	___awmod@dividend,?___awmod
  7126  0018EA  C03E  F03E         	movff	___awmod@dividend+1,?___awmod+1
  7127  0018EE  D000               	goto	l986
  7128  0018F0                     l986:
  7129  0018F0  0012               	return		;funcret
  7130  0018F2                     __end_of___awmod:
  7131                           	opt stack 0
  7132                           tblptru	equ	0xFF8
  7133                           tblptrh	equ	0xFF7
  7134                           tblptrl	equ	0xFF6
  7135                           tablat	equ	0xFF5
  7136                           prodh	equ	0xFF4
  7137                           prodl	equ	0xFF3
  7138                           intcon	equ	0xFF2
  7139                           indf0	equ	0xFEF
  7140                           postinc0	equ	0xFEE
  7141                           fsr0h	equ	0xFEA
  7142                           fsr0l	equ	0xFE9
  7143                           wreg	equ	0xFE8
  7144                           postdec1	equ	0xFE5
  7145                           plusw1	equ	0xFE3
  7146                           fsr1l	equ	0xFE1
  7147                           indf2	equ	0xFDF
  7148                           plusw2	equ	0xFDB
  7149                           fsr2h	equ	0xFDA
  7150                           fsr2l	equ	0xFD9
  7151                           status	equ	0xFD8
  7152                           
  7153 ;; *************** function ___awdiv *****************
  7154 ;; Defined at:
  7155 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awdiv.c"
  7156 ;; Parameters:    Size  Location     Type
  7157 ;;  dividend        2   14[COMRAM] int 
  7158 ;;  divisor         2   16[COMRAM] int 
  7159 ;; Auto vars:     Size  Location     Type
  7160 ;;  quotient        2   20[COMRAM] int 
  7161 ;;  sign            1   19[COMRAM] unsigned char 
  7162 ;;  counter         1   18[COMRAM] unsigned char 
  7163 ;; Return value:  Size  Location     Type
  7164 ;;                  2   14[COMRAM] int 
  7165 ;; Registers used:
  7166 ;;		wreg, status,2, status,0
  7167 ;; Tracked objects:
  7168 ;;		On entry : 0/0
  7169 ;;		On exit  : 0/0
  7170 ;;		Unchanged: 0/0
  7171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7172 ;;      Params:         4       0       0       0       0       0       0       0       0
  7173 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7174 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7175 ;;      Totals:         8       0       0       0       0       0       0       0       0
  7176 ;;Total ram usage:        8 bytes
  7177 ;; Hardware stack levels used:    1
  7178 ;; Hardware stack levels required when called:    1
  7179 ;; This function calls:
  7180 ;;		Nothing
  7181 ;; This function is called by:
  7182 ;;		_LCDWriteInt
  7183 ;; This function uses a non-reentrant model
  7184 ;;
  7185                           
  7186                           	psect	text18
  7187  001636                     __ptext18:
  7188                           	opt stack 0
  7189  001636                     ___awdiv:
  7190                           	opt stack 26
  7191                           
  7192                           ;incstack = 0
  7193  001636  0E00               	movlw	0
  7194  001638  6E42               	movwf	___awdiv@sign,c
  7195  00163A  AE40               	btfss	___awdiv@divisor+1,7,c
  7196  00163C  D007               	goto	l4733
  7197  00163E  6C3F               	negf	___awdiv@divisor,c
  7198  001640  1E40               	comf	___awdiv@divisor+1,f,c
  7199  001642  B0D8               	btfsc	status,0,c
  7200  001644  2A40               	incf	___awdiv@divisor+1,f,c
  7201  001646  0E01               	movlw	1
  7202  001648  6E42               	movwf	___awdiv@sign,c
  7203  00164A  D000               	goto	l4733
  7204  00164C                     l4733:
  7205  00164C  AE3E               	btfss	___awdiv@dividend+1,7,c
  7206  00164E  D007               	goto	l4739
  7207  001650  6C3D               	negf	___awdiv@dividend,c
  7208  001652  1E3E               	comf	___awdiv@dividend+1,f,c
  7209  001654  B0D8               	btfsc	status,0,c
  7210  001656  2A3E               	incf	___awdiv@dividend+1,f,c
  7211  001658  0E01               	movlw	1
  7212  00165A  1A42               	xorwf	___awdiv@sign,f,c
  7213  00165C  D000               	goto	l4739
  7214  00165E                     l4739:
  7215  00165E  0E00               	movlw	0
  7216  001660  6E44               	movwf	___awdiv@quotient+1,c
  7217  001662  0E00               	movlw	0
  7218  001664  6E43               	movwf	___awdiv@quotient,c
  7219  001666  503F               	movf	___awdiv@divisor,w,c
  7220  001668  1040               	iorwf	___awdiv@divisor+1,w,c
  7221  00166A  B4D8               	btfsc	status,2,c
  7222  00166C  D021               	goto	l4761
  7223  00166E  0E01               	movlw	1
  7224  001670  6E41               	movwf	___awdiv@counter,c
  7225  001672  D005               	goto	l4747
  7226  001674                     l4745:
  7227  001674  90D8               	bcf	status,0,c
  7228  001676  363F               	rlcf	___awdiv@divisor,f,c
  7229  001678  3640               	rlcf	___awdiv@divisor+1,f,c
  7230  00167A  2A41               	incf	___awdiv@counter,f,c
  7231  00167C  D000               	goto	l4747
  7232  00167E                     l4747:
  7233  00167E  BE40               	btfsc	___awdiv@divisor+1,7,c
  7234  001680  D002               	goto	l4749
  7235  001682  D7F8               	goto	l4745
  7236  001684  D000               	goto	l4749
  7237  001686                     l4749:
  7238  001686  90D8               	bcf	status,0,c
  7239  001688  3643               	rlcf	___awdiv@quotient,f,c
  7240  00168A  3644               	rlcf	___awdiv@quotient+1,f,c
  7241  00168C  503F               	movf	___awdiv@divisor,w,c
  7242  00168E  5C3D               	subwf	___awdiv@dividend,w,c
  7243  001690  5040               	movf	___awdiv@divisor+1,w,c
  7244  001692  583E               	subwfb	___awdiv@dividend+1,w,c
  7245  001694  A0D8               	btfss	status,0,c
  7246  001696  D006               	goto	l4757
  7247  001698  503F               	movf	___awdiv@divisor,w,c
  7248  00169A  5E3D               	subwf	___awdiv@dividend,f,c
  7249  00169C  5040               	movf	___awdiv@divisor+1,w,c
  7250  00169E  5A3E               	subwfb	___awdiv@dividend+1,f,c
  7251  0016A0  8043               	bsf	___awdiv@quotient,0,c
  7252  0016A2  D000               	goto	l4757
  7253  0016A4                     l4757:
  7254  0016A4  90D8               	bcf	status,0,c
  7255  0016A6  3240               	rrcf	___awdiv@divisor+1,f,c
  7256  0016A8  323F               	rrcf	___awdiv@divisor,f,c
  7257  0016AA  2E41               	decfsz	___awdiv@counter,f,c
  7258  0016AC  D7EC               	goto	l4749
  7259  0016AE  D000               	goto	l4761
  7260  0016B0                     l4761:
  7261  0016B0  5042               	movf	___awdiv@sign,w,c
  7262  0016B2  B4D8               	btfsc	status,2,c
  7263  0016B4  D005               	goto	l4765
  7264  0016B6  6C43               	negf	___awdiv@quotient,c
  7265  0016B8  1E44               	comf	___awdiv@quotient+1,f,c
  7266  0016BA  B0D8               	btfsc	status,0,c
  7267  0016BC  2A44               	incf	___awdiv@quotient+1,f,c
  7268  0016BE  D000               	goto	l4765
  7269  0016C0                     l4765:
  7270  0016C0  C043  F03D         	movff	___awdiv@quotient,?___awdiv
  7271  0016C4  C044  F03E         	movff	___awdiv@quotient+1,?___awdiv+1
  7272  0016C8  D000               	goto	l973
  7273  0016CA                     l973:
  7274  0016CA  0012               	return		;funcret
  7275  0016CC                     __end_of___awdiv:
  7276                           	opt stack 0
  7277                           tblptru	equ	0xFF8
  7278                           tblptrh	equ	0xFF7
  7279                           tblptrl	equ	0xFF6
  7280                           tablat	equ	0xFF5
  7281                           prodh	equ	0xFF4
  7282                           prodl	equ	0xFF3
  7283                           intcon	equ	0xFF2
  7284                           indf0	equ	0xFEF
  7285                           postinc0	equ	0xFEE
  7286                           fsr0h	equ	0xFEA
  7287                           fsr0l	equ	0xFE9
  7288                           wreg	equ	0xFE8
  7289                           postdec1	equ	0xFE5
  7290                           plusw1	equ	0xFE3
  7291                           fsr1l	equ	0xFE1
  7292                           indf2	equ	0xFDF
  7293                           plusw2	equ	0xFDB
  7294                           fsr2h	equ	0xFDA
  7295                           fsr2l	equ	0xFD9
  7296                           status	equ	0xFD8
  7297                           
  7298 ;; *************** function _LCDGotoXY *****************
  7299 ;; Defined at:
  7300 ;;		line 491 in file "lcd_hd44780.c"
  7301 ;; Parameters:    Size  Location     Type
  7302 ;;  x               1    wreg     unsigned char 
  7303 ;;  y               1   23[COMRAM] unsigned char 
  7304 ;; Auto vars:     Size  Location     Type
  7305 ;;  x               1   24[COMRAM] unsigned char 
  7306 ;; Return value:  Size  Location     Type
  7307 ;;		None               void
  7308 ;; Registers used:
  7309 ;;		wreg, status,2, status,0, cstack
  7310 ;; Tracked objects:
  7311 ;;		On entry : 0/0
  7312 ;;		On exit  : 0/0
  7313 ;;		Unchanged: 0/0
  7314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7315 ;;      Params:         1       0       0       0       0       0       0       0       0
  7316 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7317 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7318 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7319 ;;Total ram usage:        2 bytes
  7320 ;; Hardware stack levels used:    1
  7321 ;; Hardware stack levels required when called:    3
  7322 ;; This function calls:
  7323 ;;		_LCDByte
  7324 ;; This function is called by:
  7325 ;;		_main
  7326 ;;		_lcd_sub_menu_metronoom
  7327 ;;		_lcd_sub_menu_lcd
  7328 ;;		_lcd_update
  7329 ;;		_lcd_start_up
  7330 ;;		_lcd_connection
  7331 ;;		_lcd_screensaver
  7332 ;;		_lcd_time_out
  7333 ;;		_LCDWriteSmartString
  7334 ;; This function uses a non-reentrant model
  7335 ;;
  7336                           
  7337                           	psect	text19
  7338  001ADE                     __ptext19:
  7339                           	opt stack 0
  7340  001ADE                     _LCDGotoXY:
  7341                           	opt stack 25
  7342                           
  7343                           ;incstack = 0
  7344                           ;LCDGotoXY@x stored from wreg
  7345  001ADE  6E47               	movwf	LCDGotoXY@x,c
  7346                           
  7347                           ;lcd_hd44780.c: 492: if (x >= 20) return;
  7348  001AE0  0E13               	movlw	19
  7349  001AE2  6447               	cpfsgt	LCDGotoXY@x,c
  7350  001AE4  D00A               	goto	l4719
  7351  001AE6  D01D               	goto	l230
  7352                           
  7353                           ;lcd_hd44780.c: 496: switch (y) {
  7354  001AE8  D008               	goto	l4719
  7355                           
  7356                           ;lcd_hd44780.c: 498: break;
  7357                           
  7358                           ;lcd_hd44780.c: 497: case 0:
  7359  001AEA  D015               	goto	l4721
  7360  001AEC                     l4711:
  7361                           
  7362                           ;lcd_hd44780.c: 500: x |= 0b01000000;
  7363  001AEC  8C47               	bsf	LCDGotoXY@x,6,c
  7364                           
  7365                           ;lcd_hd44780.c: 501: break;
  7366  001AEE  D013               	goto	l4721
  7367  001AF0                     l4713:
  7368                           
  7369                           ;lcd_hd44780.c: 503: x += 0x14;
  7370  001AF0  0E14               	movlw	20
  7371  001AF2  D001               	goto	L9
  7372  001AF4                     l4715:
  7373                           
  7374                           ;lcd_hd44780.c: 506: x += 0x54;
  7375  001AF4  0E54               	movlw	84
  7376  001AF6                     L9:
  7377  001AF6  2647               	addwf	LCDGotoXY@x,f,c
  7378                           
  7379                           ;lcd_hd44780.c: 508: }
  7380                           
  7381                           ;lcd_hd44780.c: 507: break;
  7382  001AF8  D00E               	goto	l4721
  7383  001AFA                     l4719:
  7384  001AFA  5046               	movf	LCDGotoXY@y,w,c
  7385                           
  7386                           ; Switch size 1, requested type "space"
  7387                           ; Number of cases is 4, Range of values is 0 to 3
  7388                           ; switch strategies available:
  7389                           ; Name         Instructions Cycles
  7390                           ; simple_byte           13     7 (average)
  7391                           ;	Chosen strategy is simple_byte
  7392  001AFC  0A00               	xorlw	0	; case 0
  7393  001AFE  B4D8               	btfsc	status,2,c
  7394  001B00  D00A               	goto	l4721
  7395  001B02  0A01               	xorlw	1	; case 1
  7396  001B04  B4D8               	btfsc	status,2,c
  7397  001B06  D7F2               	goto	l4711
  7398  001B08  0A03               	xorlw	3	; case 2
  7399  001B0A  B4D8               	btfsc	status,2,c
  7400  001B0C  D7F1               	goto	l4713
  7401  001B0E  0A01               	xorlw	1	; case 3
  7402  001B10  B4D8               	btfsc	status,2,c
  7403  001B12  D7F0               	goto	l4715
  7404  001B14  D000               	goto	l4721
  7405  001B16                     l4721:
  7406                           
  7407                           ;lcd_hd44780.c: 529: x |= 0b10000000;
  7408  001B16  8E47               	bsf	LCDGotoXY@x,7,c
  7409                           
  7410                           ;lcd_hd44780.c: 530: (LCDByte(x,0));
  7411  001B18  0E00               	movlw	0
  7412  001B1A  6E40               	movwf	LCDByte@isdata,c
  7413  001B1C  5047               	movf	LCDGotoXY@x,w,c
  7414  001B1E  ECB1  F00C         	call	_LCDByte
  7415  001B22                     l230:
  7416  001B22  0012               	return		;funcret
  7417  001B24                     __end_of_LCDGotoXY:
  7418                           	opt stack 0
  7419                           tblptru	equ	0xFF8
  7420                           tblptrh	equ	0xFF7
  7421                           tblptrl	equ	0xFF6
  7422                           tablat	equ	0xFF5
  7423                           prodh	equ	0xFF4
  7424                           prodl	equ	0xFF3
  7425                           intcon	equ	0xFF2
  7426                           indf0	equ	0xFEF
  7427                           postinc0	equ	0xFEE
  7428                           fsr0h	equ	0xFEA
  7429                           fsr0l	equ	0xFE9
  7430                           wreg	equ	0xFE8
  7431                           postdec1	equ	0xFE5
  7432                           plusw1	equ	0xFE3
  7433                           fsr1l	equ	0xFE1
  7434                           indf2	equ	0xFDF
  7435                           plusw2	equ	0xFDB
  7436                           fsr2h	equ	0xFDA
  7437                           fsr2l	equ	0xFD9
  7438                           status	equ	0xFD8
  7439                           
  7440 ;; *************** function _init_timer0 *****************
  7441 ;; Defined at:
  7442 ;;		line 7 in file "../common_files/c/timer0.c"
  7443 ;; Parameters:    Size  Location     Type
  7444 ;;  eight_bit       1    wreg     unsigned char 
  7445 ;;  presc           1   14[COMRAM] unsigned char 
  7446 ;;  presc_val       1   15[COMRAM] unsigned char 
  7447 ;; Auto vars:     Size  Location     Type
  7448 ;;  eight_bit       1   16[COMRAM] unsigned char 
  7449 ;; Return value:  Size  Location     Type
  7450 ;;		None               void
  7451 ;; Registers used:
  7452 ;;		wreg, status,2, status,0
  7453 ;; Tracked objects:
  7454 ;;		On entry : 0/0
  7455 ;;		On exit  : 0/0
  7456 ;;		Unchanged: 0/0
  7457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7458 ;;      Params:         2       0       0       0       0       0       0       0       0
  7459 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7460 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7461 ;;      Totals:         3       0       0       0       0       0       0       0       0
  7462 ;;Total ram usage:        3 bytes
  7463 ;; Hardware stack levels used:    1
  7464 ;; Hardware stack levels required when called:    1
  7465 ;; This function calls:
  7466 ;;		Nothing
  7467 ;; This function is called by:
  7468 ;;		_main
  7469 ;; This function uses a non-reentrant model
  7470 ;;
  7471                           
  7472                           	psect	text20
  7473  001B5A                     __ptext20:
  7474                           	opt stack 0
  7475  001B5A                     _init_timer0:
  7476                           	opt stack 29
  7477                           
  7478                           ;incstack = 0
  7479                           ;init_timer0@eight_bit stored from wreg
  7480  001B5A  6E3F               	movwf	init_timer0@eight_bit,c
  7481                           
  7482                           ;timer0.c: 8: T0CONbits.TMR0ON = 0;
  7483  001B5C  9ED5               	bcf	4053,7,c	;volatile
  7484                           
  7485                           ;timer0.c: 9: T0CONbits.T08BIT = eight_bit;
  7486  001B5E  B03F               	btfsc	init_timer0@eight_bit,0,c
  7487  001B60  D002               	bra	u2725
  7488  001B62  9CD5               	bcf	4053,6,c	;volatile
  7489  001B64  D001               	bra	u2726
  7490  001B66                     u2725:
  7491  001B66  8CD5               	bsf	4053,6,c	;volatile
  7492  001B68                     u2726:
  7493                           
  7494                           ;timer0.c: 10: T0CONbits.T0CS = 0;
  7495  001B68  9AD5               	bcf	4053,5,c	;volatile
  7496                           
  7497                           ;timer0.c: 11: T0CONbits.T0CS = 0;
  7498  001B6A  9AD5               	bcf	4053,5,c	;volatile
  7499                           
  7500                           ;timer0.c: 12: T0CONbits.PSA = presc;
  7501  001B6C  B03D               	btfsc	init_timer0@presc,0,c
  7502  001B6E  D002               	bra	u2735
  7503  001B70  96D5               	bcf	4053,3,c	;volatile
  7504  001B72  D001               	bra	u2736
  7505  001B74                     u2735:
  7506  001B74  86D5               	bsf	4053,3,c	;volatile
  7507  001B76                     u2736:
  7508                           
  7509                           ;timer0.c: 13: T0CONbits.T0PS = presc_val;
  7510  001B76  50D5               	movf	4053,w,c	;volatile
  7511  001B78  183E               	xorwf	init_timer0@presc_val,w,c
  7512  001B7A  0BF8               	andlw	-8
  7513  001B7C  183E               	xorwf	init_timer0@presc_val,w,c
  7514  001B7E  6ED5               	movwf	4053,c	;volatile
  7515                           
  7516                           ;timer0.c: 15: TMR0L = 0;
  7517  001B80  0E00               	movlw	0
  7518  001B82  6ED6               	movwf	4054,c	;volatile
  7519                           
  7520                           ;timer0.c: 16: T0CONbits.TMR0ON = 1;
  7521  001B84  8ED5               	bsf	4053,7,c	;volatile
  7522  001B86  0012               	return		;funcret
  7523  001B88                     __end_of_init_timer0:
  7524                           	opt stack 0
  7525                           tblptru	equ	0xFF8
  7526                           tblptrh	equ	0xFF7
  7527                           tblptrl	equ	0xFF6
  7528                           tablat	equ	0xFF5
  7529                           prodh	equ	0xFF4
  7530                           prodl	equ	0xFF3
  7531                           intcon	equ	0xFF2
  7532                           indf0	equ	0xFEF
  7533                           postinc0	equ	0xFEE
  7534                           fsr0h	equ	0xFEA
  7535                           fsr0l	equ	0xFE9
  7536                           wreg	equ	0xFE8
  7537                           postdec1	equ	0xFE5
  7538                           plusw1	equ	0xFE3
  7539                           fsr1l	equ	0xFE1
  7540                           indf2	equ	0xFDF
  7541                           plusw2	equ	0xFDB
  7542                           fsr2h	equ	0xFDA
  7543                           fsr2l	equ	0xFD9
  7544                           status	equ	0xFD8
  7545                           
  7546 ;; *************** function _init_pic *****************
  7547 ;; Defined at:
  7548 ;;		line 26 in file "main_lcd.c"
  7549 ;; Parameters:    Size  Location     Type
  7550 ;;		None
  7551 ;; Auto vars:     Size  Location     Type
  7552 ;;		None
  7553 ;; Return value:  Size  Location     Type
  7554 ;;		None               void
  7555 ;; Registers used:
  7556 ;;		wreg, status,2, cstack
  7557 ;; Tracked objects:
  7558 ;;		On entry : 0/0
  7559 ;;		On exit  : 0/0
  7560 ;;		Unchanged: 0/0
  7561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7562 ;;      Params:         0       0       0       0       0       0       0       0       0
  7563 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7564 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7565 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7566 ;;Total ram usage:        0 bytes
  7567 ;; Hardware stack levels used:    1
  7568 ;; Hardware stack levels required when called:    2
  7569 ;; This function calls:
  7570 ;;		_init_uart_m
  7571 ;; This function is called by:
  7572 ;;		_main
  7573 ;; This function uses a non-reentrant model
  7574 ;;
  7575                           
  7576                           	psect	text21
  7577  001B24                     __ptext21:
  7578                           	opt stack 0
  7579  001B24                     _init_pic:
  7580                           	opt stack 28
  7581                           
  7582                           ;main_lcd.c: 27: TRISA = 0x00;
  7583                           
  7584                           ;incstack = 0
  7585  001B24  0E00               	movlw	0
  7586  001B26  6E92               	movwf	3986,c	;volatile
  7587                           
  7588                           ;main_lcd.c: 28: TRISB = 0x0F;
  7589  001B28  0E0F               	movlw	15
  7590  001B2A  6E93               	movwf	3987,c	;volatile
  7591                           
  7592                           ;main_lcd.c: 29: TRISC = 0x00;
  7593  001B2C  0E00               	movlw	0
  7594  001B2E  6E94               	movwf	3988,c	;volatile
  7595                           
  7596                           ;main_lcd.c: 31: ADCON1bits.PCFG = 0b1111;
  7597  001B30  80C1               	bsf	4033,0,c	;volatile
  7598  001B32  82C1               	bsf	4033,1,c	;volatile
  7599  001B34  84C1               	bsf	4033,2,c	;volatile
  7600  001B36  86C1               	bsf	4033,3,c	;volatile
  7601                           
  7602                           ;main_lcd.c: 32: init_uart_m(12, 0, 0);
  7603  001B38  0E00               	movlw	0
  7604  001B3A  6E3E               	movwf	init_uart_m@baud+1,c
  7605  001B3C  0E0C               	movlw	12
  7606  001B3E  6E3D               	movwf	init_uart_m@baud,c
  7607  001B40  0E00               	movlw	0
  7608  001B42  6E3F               	movwf	init_uart_m@TX_inv,c
  7609  001B44  0E00               	movlw	0
  7610  001B46  6E40               	movwf	init_uart_m@RX_inv,c
  7611  001B48  ECC4  F00D         	call	_init_uart_m	;wreg free
  7612                           
  7613                           ;main_lcd.c: 34: PIR1bits.RCIF = 0;
  7614  001B4C  9A9E               	bcf	3998,5,c	;volatile
  7615                           
  7616                           ;main_lcd.c: 35: PIE1bits.RCIE = 1;
  7617  001B4E  8A9D               	bsf	3997,5,c	;volatile
  7618                           
  7619                           ;main_lcd.c: 36: INTCONbits.PEIE = 0;
  7620  001B50  9CF2               	bcf	intcon,6,c	;volatile
  7621                           
  7622                           ;main_lcd.c: 38: brightness = 1;
  7623  001B52  0E01               	movlw	1
  7624  001B54  6E50               	movwf	_brightness,c
  7625                           
  7626                           ;main_lcd.c: 39: (PORTAbits.RA5 = 0);
  7627  001B56  9A80               	bcf	3968,5,c	;volatile
  7628  001B58  0012               	return		;funcret
  7629  001B5A                     __end_of_init_pic:
  7630                           	opt stack 0
  7631                           tblptru	equ	0xFF8
  7632                           tblptrh	equ	0xFF7
  7633                           tblptrl	equ	0xFF6
  7634                           tablat	equ	0xFF5
  7635                           prodh	equ	0xFF4
  7636                           prodl	equ	0xFF3
  7637                           intcon	equ	0xFF2
  7638                           indf0	equ	0xFEF
  7639                           postinc0	equ	0xFEE
  7640                           fsr0h	equ	0xFEA
  7641                           fsr0l	equ	0xFE9
  7642                           wreg	equ	0xFE8
  7643                           postdec1	equ	0xFE5
  7644                           plusw1	equ	0xFE3
  7645                           fsr1l	equ	0xFE1
  7646                           indf2	equ	0xFDF
  7647                           plusw2	equ	0xFDB
  7648                           fsr2h	equ	0xFDA
  7649                           fsr2l	equ	0xFD9
  7650                           status	equ	0xFD8
  7651                           
  7652 ;; *************** function _init_uart_m *****************
  7653 ;; Defined at:
  7654 ;;		line 9 in file "../common_files/c/uart_m.c"
  7655 ;; Parameters:    Size  Location     Type
  7656 ;;  baud            2   14[COMRAM] int 
  7657 ;;  TX_inv          1   16[COMRAM] unsigned char 
  7658 ;;  RX_inv          1   17[COMRAM] unsigned char 
  7659 ;; Auto vars:     Size  Location     Type
  7660 ;;		None
  7661 ;; Return value:  Size  Location     Type
  7662 ;;		None               void
  7663 ;; Registers used:
  7664 ;;		None
  7665 ;; Tracked objects:
  7666 ;;		On entry : 0/0
  7667 ;;		On exit  : 0/0
  7668 ;;		Unchanged: 0/0
  7669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7670 ;;      Params:         4       0       0       0       0       0       0       0       0
  7671 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7672 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7673 ;;      Totals:         4       0       0       0       0       0       0       0       0
  7674 ;;Total ram usage:        4 bytes
  7675 ;; Hardware stack levels used:    1
  7676 ;; Hardware stack levels required when called:    1
  7677 ;; This function calls:
  7678 ;;		Nothing
  7679 ;; This function is called by:
  7680 ;;		_init_pic
  7681 ;; This function uses a non-reentrant model
  7682 ;;
  7683                           
  7684                           	psect	text22
  7685  001B88                     __ptext22:
  7686                           	opt stack 0
  7687  001B88                     _init_uart_m:
  7688                           	opt stack 28
  7689                           
  7690                           ;uart_m.c: 18: SPBRG = baud;
  7691                           
  7692                           ;incstack = 0
  7693  001B88  C03D  FFAF         	movff	init_uart_m@baud,4015	;volatile
  7694                           
  7695                           ;uart_m.c: 21: TXSTAbits.CSRC = 0;
  7696  001B8C  9EAC               	bcf	4012,7,c	;volatile
  7697                           
  7698                           ;uart_m.c: 22: TXSTAbits.BRGH = 0;
  7699  001B8E  94AC               	bcf	4012,2,c	;volatile
  7700                           
  7701                           ;uart_m.c: 23: TXSTAbits.TXEN = 0;
  7702  001B90  9AAC               	bcf	4012,5,c	;volatile
  7703                           
  7704                           ;uart_m.c: 24: TXSTAbits.TX9 = 0;
  7705  001B92  9CAC               	bcf	4012,6,c	;volatile
  7706                           
  7707                           ;uart_m.c: 25: TXSTAbits.SYNC = 0;
  7708  001B94  98AC               	bcf	4012,4,c	;volatile
  7709                           
  7710                           ;uart_m.c: 28: RCSTAbits.SPEN = 0;
  7711  001B96  9EAB               	bcf	4011,7,c	;volatile
  7712                           
  7713                           ;uart_m.c: 29: RCSTAbits.RX9 = 0;
  7714  001B98  9CAB               	bcf	4011,6,c	;volatile
  7715                           
  7716                           ;uart_m.c: 30: RCSTAbits.ADDEN = 0;
  7717  001B9A  96AB               	bcf	4011,3,c	;volatile
  7718                           
  7719                           ;uart_m.c: 33: BAUDCONbits.TXCKP = TX_inv;
  7720  001B9C  B03F               	btfsc	init_uart_m@TX_inv,0,c
  7721  001B9E  D002               	bra	u2535
  7722  001BA0  98B8               	bcf	4024,4,c	;volatile
  7723  001BA2  D001               	bra	u2536
  7724  001BA4                     u2535:
  7725  001BA4  88B8               	bsf	4024,4,c	;volatile
  7726  001BA6                     u2536:
  7727                           
  7728                           ;uart_m.c: 34: BAUDCONbits.RXDTP = RX_inv;
  7729  001BA6  B040               	btfsc	init_uart_m@RX_inv,0,c
  7730  001BA8  D002               	bra	u2545
  7731  001BAA  9AB8               	bcf	4024,5,c	;volatile
  7732  001BAC  D001               	bra	u2546
  7733  001BAE                     u2545:
  7734  001BAE  8AB8               	bsf	4024,5,c	;volatile
  7735  001BB0                     u2546:
  7736                           
  7737                           ;uart_m.c: 35: BAUDCONbits.BRG16 = 0;
  7738  001BB0  96B8               	bcf	4024,3,c	;volatile
  7739  001BB2  0012               	return		;funcret
  7740  001BB4                     __end_of_init_uart_m:
  7741                           	opt stack 0
  7742                           tblptru	equ	0xFF8
  7743                           tblptrh	equ	0xFF7
  7744                           tblptrl	equ	0xFF6
  7745                           tablat	equ	0xFF5
  7746                           prodh	equ	0xFF4
  7747                           prodl	equ	0xFF3
  7748                           intcon	equ	0xFF2
  7749                           indf0	equ	0xFEF
  7750                           postinc0	equ	0xFEE
  7751                           fsr0h	equ	0xFEA
  7752                           fsr0l	equ	0xFE9
  7753                           wreg	equ	0xFE8
  7754                           postdec1	equ	0xFE5
  7755                           plusw1	equ	0xFE3
  7756                           fsr1l	equ	0xFE1
  7757                           indf2	equ	0xFDF
  7758                           plusw2	equ	0xFDB
  7759                           fsr2h	equ	0xFDA
  7760                           fsr2l	equ	0xFD9
  7761                           status	equ	0xFD8
  7762                           
  7763 ;; *************** function _enable_uart_m *****************
  7764 ;; Defined at:
  7765 ;;		line 43 in file "../common_files/c/uart_m.c"
  7766 ;; Parameters:    Size  Location     Type
  7767 ;;		None
  7768 ;; Auto vars:     Size  Location     Type
  7769 ;;		None
  7770 ;; Return value:  Size  Location     Type
  7771 ;;		None               void
  7772 ;; Registers used:
  7773 ;;		None
  7774 ;; Tracked objects:
  7775 ;;		On entry : 0/0
  7776 ;;		On exit  : 0/0
  7777 ;;		Unchanged: 0/0
  7778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7779 ;;      Params:         0       0       0       0       0       0       0       0       0
  7780 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7781 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7782 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7783 ;;Total ram usage:        0 bytes
  7784 ;; Hardware stack levels used:    1
  7785 ;; Hardware stack levels required when called:    1
  7786 ;; This function calls:
  7787 ;;		Nothing
  7788 ;; This function is called by:
  7789 ;;		_main
  7790 ;; This function uses a non-reentrant model
  7791 ;;
  7792                           
  7793                           	psect	text23
  7794  001BEC                     __ptext23:
  7795                           	opt stack 0
  7796  001BEC                     _enable_uart_m:
  7797                           	opt stack 29
  7798                           
  7799                           ;uart_m.c: 44: TRISCbits.TRISC7 = 1;
  7800                           
  7801                           ;incstack = 0
  7802  001BEC  8E94               	bsf	3988,7,c	;volatile
  7803                           
  7804                           ;uart_m.c: 45: TRISCbits.TRISC6 = 0;
  7805  001BEE  9C94               	bcf	3988,6,c	;volatile
  7806                           
  7807                           ;uart_m.c: 47: TXSTAbits.TXEN = 1;
  7808  001BF0  8AAC               	bsf	4012,5,c	;volatile
  7809                           
  7810                           ;uart_m.c: 48: RCSTAbits.CREN = 1;
  7811  001BF2  88AB               	bsf	4011,4,c	;volatile
  7812                           
  7813                           ;uart_m.c: 49: RCSTAbits.SPEN = 1;
  7814  001BF4  8EAB               	bsf	4011,7,c	;volatile
  7815  001BF6  0012               	return		;funcret
  7816  001BF8                     __end_of_enable_uart_m:
  7817                           	opt stack 0
  7818                           tblptru	equ	0xFF8
  7819                           tblptrh	equ	0xFF7
  7820                           tblptrl	equ	0xFF6
  7821                           tablat	equ	0xFF5
  7822                           prodh	equ	0xFF4
  7823                           prodl	equ	0xFF3
  7824                           intcon	equ	0xFF2
  7825                           indf0	equ	0xFEF
  7826                           postinc0	equ	0xFEE
  7827                           fsr0h	equ	0xFEA
  7828                           fsr0l	equ	0xFE9
  7829                           wreg	equ	0xFE8
  7830                           postdec1	equ	0xFE5
  7831                           plusw1	equ	0xFE3
  7832                           fsr1l	equ	0xFE1
  7833                           indf2	equ	0xFDF
  7834                           plusw2	equ	0xFDB
  7835                           fsr2h	equ	0xFDA
  7836                           fsr2l	equ	0xFD9
  7837                           status	equ	0xFD8
  7838                           
  7839 ;; *************** function _LCDInit *****************
  7840 ;; Defined at:
  7841 ;;		line 198 in file "lcd_hd44780.c"
  7842 ;; Parameters:    Size  Location     Type
  7843 ;;  style           1    wreg     unsigned char 
  7844 ;; Auto vars:     Size  Location     Type
  7845 ;;  style           1   23[COMRAM] unsigned char 
  7846 ;;  __i             1   24[COMRAM] unsigned char 
  7847 ;; Return value:  Size  Location     Type
  7848 ;;		None               void
  7849 ;; Registers used:
  7850 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7851 ;; Tracked objects:
  7852 ;;		On entry : 0/0
  7853 ;;		On exit  : 0/0
  7854 ;;		Unchanged: 0/0
  7855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7856 ;;      Params:         0       0       0       0       0       0       0       0       0
  7857 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7858 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7859 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7860 ;;Total ram usage:        2 bytes
  7861 ;; Hardware stack levels used:    1
  7862 ;; Hardware stack levels required when called:    3
  7863 ;; This function calls:
  7864 ;;		_LCDBusyLoop
  7865 ;;		_LCDByte
  7866 ;; This function is called by:
  7867 ;;		_main
  7868 ;; This function uses a non-reentrant model
  7869 ;;
  7870                           
  7871                           	psect	text24
  7872  00175E                     __ptext24:
  7873                           	opt stack 0
  7874  00175E                     _LCDInit:
  7875                           	opt stack 27
  7876                           
  7877                           ;incstack = 0
  7878                           ;LCDInit@style stored from wreg
  7879  00175E  6E46               	movwf	LCDInit@style,c
  7880                           
  7881                           ;lcd_hd44780.c: 216: (LCDByte(0b00001000,0));
  7882  001760  0E00               	movlw	0
  7883  001762  6E40               	movwf	LCDByte@isdata,c
  7884  001764  0E08               	movlw	8
  7885  001766  ECB1  F00C         	call	_LCDByte
  7886                           
  7887                           ;lcd_hd44780.c: 219: TRISA &= (~(0x0F << 1));
  7888  00176A  0EE1               	movlw	225
  7889  00176C  1692               	andwf	3986,f,c	;volatile
  7890                           
  7891                           ;lcd_hd44780.c: 221: TRISCbits.TRISC2 = 0;
  7892  00176E  9494               	bcf	3988,2,c	;volatile
  7893                           
  7894                           ;lcd_hd44780.c: 222: TRISCbits.TRISC0 = 0;
  7895  001770  9094               	bcf	3988,0,c	;volatile
  7896                           
  7897                           ;lcd_hd44780.c: 223: TRISCbits.RC1 = 0;
  7898  001772  9294               	bcf	3988,1,c	;volatile
  7899                           
  7900                           ;lcd_hd44780.c: 225: PORTA &= (~(0x0F << 1));
  7901  001774  0EE1               	movlw	225
  7902  001776  1680               	andwf	3968,f,c	;volatile
  7903                           
  7904                           ;lcd_hd44780.c: 227: (PORTCbits.RC2=0);
  7905  001778  9482               	bcf	3970,2,c	;volatile
  7906                           
  7907                           ;lcd_hd44780.c: 228: (PORTCbits.RC1=0);
  7908  00177A  9282               	bcf	3970,1,c	;volatile
  7909                           
  7910                           ;lcd_hd44780.c: 229: (PORTCbits.RC0=0);
  7911  00177C  9082               	bcf	3970,0,c	;volatile
  7912                           
  7913                           ;lcd_hd44780.c: 232: _delay((unsigned long)((0.5)*(48000000/4000000.0)));
  7914  00177E  D000               	nop2		;2 cycle nop
  7915  001780  D000               	nop2		;2 cycle nop
  7916  001782  D000               	nop2		;2 cycle nop
  7917                           
  7918                           ;lcd_hd44780.c: 234: (PORTCbits.RC2=1);
  7919  001784  8482               	bsf	3970,2,c	;volatile
  7920                           
  7921                           ;lcd_hd44780.c: 235: PORTA |= ((0b00000010) << 1);
  7922  001786  8480               	bsf	3968,2,c	;volatile
  7923                           
  7924                           ;lcd_hd44780.c: 236: _delay((unsigned long)((1)*(48000000/4000000.0)));
  7925  001788  0E04               	movlw	4
  7926  00178A                     u4967:
  7927  00178A  2EE8               	decfsz	wreg,f,c
  7928  00178C  D7FE               	goto	u4967
  7929                           
  7930                           ;lcd_hd44780.c: 237: (PORTCbits.RC2=0);
  7931  00178E  9482               	bcf	3970,2,c	;volatile
  7932                           
  7933                           ;lcd_hd44780.c: 238: _delay((unsigned long)((1)*(48000000/4000000.0)));
  7934  001790  0E04               	movlw	4
  7935  001792                     u4977:
  7936  001792  2EE8               	decfsz	wreg,f,c
  7937  001794  D7FE               	goto	u4977
  7938                           
  7939                           ;lcd_hd44780.c: 241: LCDBusyLoop();
  7940  001796  EC79  F00C         	call	_LCDBusyLoop	;wreg free
  7941                           
  7942                           ;lcd_hd44780.c: 246: (LCDByte(0b00101000,0));
  7943  00179A  0E00               	movlw	0
  7944  00179C  6E40               	movwf	LCDByte@isdata,c
  7945  00179E  0E28               	movlw	40
  7946  0017A0  ECB1  F00C         	call	_LCDByte
  7947                           
  7948                           ;lcd_hd44780.c: 247: (LCDByte(0b00001100 | style,0));
  7949  0017A4  0E00               	movlw	0
  7950  0017A6  6E40               	movwf	LCDByte@isdata,c
  7951  0017A8  5046               	movf	LCDInit@style,w,c
  7952  0017AA  090C               	iorlw	12
  7953  0017AC  ECB1  F00C         	call	_LCDByte
  7954                           
  7955                           ;lcd_hd44780.c: 250: (LCDByte(0b01000000,0));
  7956  0017B0  0E00               	movlw	0
  7957  0017B2  6E40               	movwf	LCDByte@isdata,c
  7958  0017B4  0E40               	movlw	64
  7959  0017B6  ECB1  F00C         	call	_LCDByte
  7960                           
  7961                           ;lcd_hd44780.c: 252: uint8_t __i;
  7962                           ;lcd_hd44780.c: 253: for (__i = 0; __i<sizeof (__costum1); __i++)
  7963  0017BA  0E00               	movlw	0
  7964  0017BC  6E47               	movwf	LCDInit@__i,c
  7965  0017BE                     l5421:
  7966  0017BE  0E3F               	movlw	63
  7967  0017C0  6447               	cpfsgt	LCDInit@__i,c
  7968  0017C2  D001               	goto	l5425
  7969  0017C4  D010               	goto	l137
  7970  0017C6                     l5425:
  7971                           
  7972                           ;lcd_hd44780.c: 254: (LCDByte(__costum1[__i],1));
  7973  0017C6  0E01               	movlw	1
  7974  0017C8  6E40               	movwf	LCDByte@isdata,c
  7975  0017CA  5047               	movf	LCDInit@__i,w,c
  7976  0017CC  0D01               	mullw	1
  7977  0017CE  0E9B               	movlw	low ___costum1
  7978  0017D0  24F3               	addwf	prodl,w,c
  7979  0017D2  6EF6               	movwf	tblptrl,c
  7980  0017D4  0E7D               	movlw	high ___costum1
  7981  0017D6  20F4               	addwfc	prodh,w,c
  7982  0017D8  6EF7               	movwf	tblptrh,c
  7983  0017DA                     	if	0	;There are less than 3 active tblptr bytes
  7984  0017DA                     	endif
  7985  0017DA  0008               	tblrd		*
  7986  0017DC  50F5               	movf	tablat,w,c
  7987  0017DE  ECB1  F00C         	call	_LCDByte
  7988  0017E2  2A47               	incf	LCDInit@__i,f,c
  7989  0017E4  D7EC               	goto	l5421
  7990  0017E6                     l137:
  7991  0017E6  0012               	return		;funcret
  7992  0017E8                     __end_of_LCDInit:
  7993                           	opt stack 0
  7994                           tblptru	equ	0xFF8
  7995                           tblptrh	equ	0xFF7
  7996                           tblptrl	equ	0xFF6
  7997                           tablat	equ	0xFF5
  7998                           prodh	equ	0xFF4
  7999                           prodl	equ	0xFF3
  8000                           intcon	equ	0xFF2
  8001                           indf0	equ	0xFEF
  8002                           postinc0	equ	0xFEE
  8003                           fsr0h	equ	0xFEA
  8004                           fsr0l	equ	0xFE9
  8005                           wreg	equ	0xFE8
  8006                           postdec1	equ	0xFE5
  8007                           plusw1	equ	0xFE3
  8008                           fsr1l	equ	0xFE1
  8009                           indf2	equ	0xFDF
  8010                           plusw2	equ	0xFDB
  8011                           fsr2h	equ	0xFDA
  8012                           fsr2l	equ	0xFD9
  8013                           status	equ	0xFD8
  8014                           
  8015 ;; *************** function _LCDByte *****************
  8016 ;; Defined at:
  8017 ;;		line 88 in file "lcd_hd44780.c"
  8018 ;; Parameters:    Size  Location     Type
  8019 ;;  c               1    wreg     unsigned char 
  8020 ;;  isdata          1   17[COMRAM] unsigned char 
  8021 ;; Auto vars:     Size  Location     Type
  8022 ;;  c               1   21[COMRAM] unsigned char 
  8023 ;;  temp            1   22[COMRAM] unsigned char 
  8024 ;;  ln              1   20[COMRAM] unsigned char 
  8025 ;;  hn              1   19[COMRAM] unsigned char 
  8026 ;; Return value:  Size  Location     Type
  8027 ;;		None               void
  8028 ;; Registers used:
  8029 ;;		wreg, status,2, status,0, cstack
  8030 ;; Tracked objects:
  8031 ;;		On entry : 0/0
  8032 ;;		On exit  : 0/0
  8033 ;;		Unchanged: 0/0
  8034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8035 ;;      Params:         1       0       0       0       0       0       0       0       0
  8036 ;;      Locals:         4       0       0       0       0       0       0       0       0
  8037 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8038 ;;      Totals:         6       0       0       0       0       0       0       0       0
  8039 ;;Total ram usage:        6 bytes
  8040 ;; Hardware stack levels used:    1
  8041 ;; Hardware stack levels required when called:    2
  8042 ;; This function calls:
  8043 ;;		_LCDBusyLoop
  8044 ;; This function is called by:
  8045 ;;		_LCDInit
  8046 ;;		_LCDLoadCostum
  8047 ;;		_LCDWriteString
  8048 ;;		_LCDWriteInt
  8049 ;;		_LCDGotoXY
  8050 ;;		_main
  8051 ;;		_lcd_start_up
  8052 ;;		_lcd_screensaver
  8053 ;;		_LCDWriteSmartString
  8054 ;;		_LCDWriteBin
  8055 ;;		_LCDWriteHex
  8056 ;; This function uses a non-reentrant model
  8057 ;;
  8058                           
  8059                           	psect	text25
  8060  001962                     __ptext25:
  8061                           	opt stack 0
  8062  001962                     _LCDByte:
  8063                           	opt stack 25
  8064                           
  8065                           ;incstack = 0
  8066                           ;LCDByte@c stored from wreg
  8067  001962  6E44               	movwf	LCDByte@c,c
  8068                           
  8069                           ;lcd_hd44780.c: 96: uint8_t hn, ln;
  8070                           ;lcd_hd44780.c: 97: uint8_t temp;
  8071                           ;lcd_hd44780.c: 99: hn = c >> 4;
  8072  001964  3844               	swapf	LCDByte@c,w,c
  8073  001966  0B0F               	andlw	15
  8074  001968  6E42               	movwf	LCDByte@hn,c
  8075                           
  8076                           ;lcd_hd44780.c: 100: ln = (c & 0x0F);
  8077  00196A  5044               	movf	LCDByte@c,w,c
  8078  00196C  0B0F               	andlw	15
  8079  00196E  6E43               	movwf	LCDByte@ln,c
  8080                           
  8081                           ;lcd_hd44780.c: 102: if (isdata == 0)
  8082  001970  5040               	movf	LCDByte@isdata,w,c
  8083  001972  A4D8               	btfss	status,2,c
  8084  001974  D002               	goto	l125
  8085                           
  8086                           ;lcd_hd44780.c: 103: (PORTCbits.RC0=0);
  8087  001976  9082               	bcf	3970,0,c	;volatile
  8088  001978  D001               	goto	l126
  8089  00197A                     l125:
  8090                           
  8091                           ;lcd_hd44780.c: 104: else
  8092                           ;lcd_hd44780.c: 105: (PORTCbits.RC0=1);
  8093  00197A  8082               	bsf	3970,0,c	;volatile
  8094  00197C                     l126:
  8095                           
  8096                           ;lcd_hd44780.c: 107: _delay((unsigned long)((0.5)*(48000000/4000000.0)));
  8097  00197C  D000               	nop2		;2 cycle nop
  8098  00197E  D000               	nop2		;2 cycle nop
  8099  001980  D000               	nop2		;2 cycle nop
  8100                           
  8101                           ;lcd_hd44780.c: 109: (PORTCbits.RC2=1);
  8102  001982  8482               	bsf	3970,2,c	;volatile
  8103                           
  8104                           ;lcd_hd44780.c: 113: temp = (PORTA & (~(0X0F << 1))) | ((hn << 1));
  8105  001984  90D8               	bcf	status,0,c
  8106  001986  3442               	rlcf	LCDByte@hn,w,c
  8107  001988  6E41               	movwf	??_LCDByte& (0+255),c
  8108  00198A  5080               	movf	3968,w,c	;volatile
  8109  00198C  0BE1               	andlw	225
  8110  00198E  1041               	iorwf	??_LCDByte,w,c
  8111  001990  6E45               	movwf	LCDByte@temp,c
  8112                           
  8113                           ;lcd_hd44780.c: 114: PORTA = temp;
  8114  001992  C045  FF80         	movff	LCDByte@temp,3968	;volatile
  8115                           
  8116                           ;lcd_hd44780.c: 116: _delay((unsigned long)((1)*(48000000/4000000.0)));
  8117  001996  0E04               	movlw	4
  8118  001998                     u4987:
  8119  001998  2EE8               	decfsz	wreg,f,c
  8120  00199A  D7FE               	goto	u4987
  8121                           
  8122                           ;lcd_hd44780.c: 120: (PORTCbits.RC2=0);
  8123  00199C  9482               	bcf	3970,2,c	;volatile
  8124                           
  8125                           ;lcd_hd44780.c: 122: _delay((unsigned long)((1)*(48000000/4000000.0)));
  8126  00199E  0E04               	movlw	4
  8127  0019A0                     u4997:
  8128  0019A0  2EE8               	decfsz	wreg,f,c
  8129  0019A2  D7FE               	goto	u4997
  8130                           
  8131                           ;lcd_hd44780.c: 125: (PORTCbits.RC2=1);
  8132  0019A4  8482               	bsf	3970,2,c	;volatile
  8133                           
  8134                           ;lcd_hd44780.c: 127: temp = (PORTA & (~(0X0F << 1))) | ((ln << 1));
  8135  0019A6  90D8               	bcf	status,0,c
  8136  0019A8  3443               	rlcf	LCDByte@ln,w,c
  8137  0019AA  6E41               	movwf	??_LCDByte& (0+255),c
  8138  0019AC  5080               	movf	3968,w,c	;volatile
  8139  0019AE  0BE1               	andlw	225
  8140  0019B0  1041               	iorwf	??_LCDByte,w,c
  8141  0019B2  6E45               	movwf	LCDByte@temp,c
  8142                           
  8143                           ;lcd_hd44780.c: 129: PORTA = temp;
  8144  0019B4  C045  FF80         	movff	LCDByte@temp,3968	;volatile
  8145                           
  8146                           ;lcd_hd44780.c: 131: _delay((unsigned long)((1)*(48000000/4000000.0)));
  8147  0019B8  0E04               	movlw	4
  8148  0019BA                     u5007:
  8149  0019BA  2EE8               	decfsz	wreg,f,c
  8150  0019BC  D7FE               	goto	u5007
  8151                           
  8152                           ;lcd_hd44780.c: 135: (PORTCbits.RC2=0);
  8153  0019BE  9482               	bcf	3970,2,c	;volatile
  8154                           
  8155                           ;lcd_hd44780.c: 137: _delay((unsigned long)((1)*(48000000/4000000.0)));
  8156  0019C0  0E04               	movlw	4
  8157  0019C2                     u5017:
  8158  0019C2  2EE8               	decfsz	wreg,f,c
  8159  0019C4  D7FE               	goto	u5017
  8160                           
  8161                           ;lcd_hd44780.c: 139: LCDBusyLoop();
  8162  0019C6  EC79  F00C         	call	_LCDBusyLoop	;wreg free
  8163  0019CA  0012               	return		;funcret
  8164  0019CC                     __end_of_LCDByte:
  8165                           	opt stack 0
  8166                           tblptru	equ	0xFF8
  8167                           tblptrh	equ	0xFF7
  8168                           tblptrl	equ	0xFF6
  8169                           tablat	equ	0xFF5
  8170                           prodh	equ	0xFF4
  8171                           prodl	equ	0xFF3
  8172                           intcon	equ	0xFF2
  8173                           indf0	equ	0xFEF
  8174                           postinc0	equ	0xFEE
  8175                           fsr0h	equ	0xFEA
  8176                           fsr0l	equ	0xFE9
  8177                           wreg	equ	0xFE8
  8178                           postdec1	equ	0xFE5
  8179                           plusw1	equ	0xFE3
  8180                           fsr1l	equ	0xFE1
  8181                           indf2	equ	0xFDF
  8182                           plusw2	equ	0xFDB
  8183                           fsr2h	equ	0xFDA
  8184                           fsr2l	equ	0xFD9
  8185                           status	equ	0xFD8
  8186                           
  8187 ;; *************** function _LCDBusyLoop *****************
  8188 ;; Defined at:
  8189 ;;		line 142 in file "lcd_hd44780.c"
  8190 ;; Parameters:    Size  Location     Type
  8191 ;;		None
  8192 ;; Auto vars:     Size  Location     Type
  8193 ;;  status          1   16[COMRAM] unsigned char 
  8194 ;;  temp            1   15[COMRAM] unsigned char 
  8195 ;;  busy            1   14[COMRAM] unsigned char 
  8196 ;; Return value:  Size  Location     Type
  8197 ;;		None               void
  8198 ;; Registers used:
  8199 ;;		wreg, status,2, status,0
  8200 ;; Tracked objects:
  8201 ;;		On entry : 0/0
  8202 ;;		On exit  : 0/0
  8203 ;;		Unchanged: 0/0
  8204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8205 ;;      Params:         0       0       0       0       0       0       0       0       0
  8206 ;;      Locals:         3       0       0       0       0       0       0       0       0
  8207 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8208 ;;      Totals:         3       0       0       0       0       0       0       0       0
  8209 ;;Total ram usage:        3 bytes
  8210 ;; Hardware stack levels used:    1
  8211 ;; Hardware stack levels required when called:    1
  8212 ;; This function calls:
  8213 ;;		Nothing
  8214 ;; This function is called by:
  8215 ;;		_LCDByte
  8216 ;;		_LCDInit
  8217 ;; This function uses a non-reentrant model
  8218 ;;
  8219                           
  8220                           	psect	text26
  8221  0018F2                     __ptext26:
  8222                           	opt stack 0
  8223  0018F2                     _LCDBusyLoop:
  8224                           	opt stack 25
  8225                           
  8226                           ;lcd_hd44780.c: 145: uint8_t busy, status = 0x00, temp;
  8227                           
  8228                           ;incstack = 0
  8229  0018F2  0E00               	movlw	0
  8230  0018F4  6E3F               	movwf	LCDBusyLoop@status,c
  8231                           
  8232                           ;lcd_hd44780.c: 148: TRISA |= (0x0f << 1);
  8233  0018F6  0E1E               	movlw	30
  8234  0018F8  1292               	iorwf	3986,f,c	;volatile
  8235                           
  8236                           ;lcd_hd44780.c: 151: (PORTCbits.RC1=1);
  8237  0018FA  8282               	bsf	3970,1,c	;volatile
  8238                           
  8239                           ;lcd_hd44780.c: 152: (PORTCbits.RC0=0);
  8240  0018FC  9082               	bcf	3970,0,c	;volatile
  8241                           
  8242                           ;lcd_hd44780.c: 156: _delay((unsigned long)((0.5)*(48000000/4000000.0)));
  8243  0018FE  D000               	nop2		;2 cycle nop
  8244  001900  D000               	nop2		;2 cycle nop
  8245  001902  D000               	nop2		;2 cycle nop
  8246  001904  D000               	goto	l4541
  8247  001906                     l4541:
  8248                           
  8249                           ;lcd_hd44780.c: 161: (PORTCbits.RC2=1);
  8250  001906  8482               	bsf	3970,2,c	;volatile
  8251                           
  8252                           ;lcd_hd44780.c: 164: _delay((unsigned long)((0.5)*(48000000/4000000.0)));
  8253  001908  D000               	nop2		;2 cycle nop
  8254  00190A  D000               	nop2		;2 cycle nop
  8255  00190C  D000               	nop2		;2 cycle nop
  8256                           
  8257                           ;lcd_hd44780.c: 166: status = (PORTA >> 1);
  8258  00190E  90D8               	bcf	status,0,c
  8259  001910  3080               	rrcf	3968,w,c	;volatile
  8260  001912  6E3F               	movwf	LCDBusyLoop@status,c
  8261                           
  8262                           ;lcd_hd44780.c: 167: status = status << 4;
  8263  001914  383F               	swapf	LCDBusyLoop@status,w,c
  8264  001916  0BF0               	andlw	240
  8265  001918  6E3F               	movwf	LCDBusyLoop@status,c
  8266                           
  8267                           ;lcd_hd44780.c: 169: _delay((unsigned long)((0.5)*(48000000/4000000.0)));
  8268  00191A  D000               	nop2		;2 cycle nop
  8269  00191C  D000               	nop2		;2 cycle nop
  8270  00191E  D000               	nop2		;2 cycle nop
  8271                           
  8272                           ;lcd_hd44780.c: 172: (PORTCbits.RC2=0);
  8273  001920  9482               	bcf	3970,2,c	;volatile
  8274                           
  8275                           ;lcd_hd44780.c: 173: _delay((unsigned long)((1)*(48000000/4000000.0)));
  8276  001922  0E04               	movlw	4
  8277  001924                     u5027:
  8278  001924  2EE8               	decfsz	wreg,f,c
  8279  001926  D7FE               	goto	u5027
  8280                           
  8281                           ;lcd_hd44780.c: 175: (PORTCbits.RC2=1);
  8282  001928  8482               	bsf	3970,2,c	;volatile
  8283                           
  8284                           ;lcd_hd44780.c: 176: _delay((unsigned long)((0.5)*(48000000/4000000.0)));
  8285  00192A  D000               	nop2		;2 cycle nop
  8286  00192C  D000               	nop2		;2 cycle nop
  8287  00192E  D000               	nop2		;2 cycle nop
  8288                           
  8289                           ;lcd_hd44780.c: 178: temp = (PORTA >> 1);
  8290  001930  90D8               	bcf	status,0,c
  8291  001932  3080               	rrcf	3968,w,c	;volatile
  8292  001934  6E3E               	movwf	LCDBusyLoop@temp,c
  8293                           
  8294                           ;lcd_hd44780.c: 179: temp &= 0x0F;
  8295  001936  0E0F               	movlw	15
  8296  001938  163E               	andwf	LCDBusyLoop@temp,f,c
  8297                           
  8298                           ;lcd_hd44780.c: 181: status = status | temp;
  8299  00193A  503F               	movf	LCDBusyLoop@status,w,c
  8300  00193C  103E               	iorwf	LCDBusyLoop@temp,w,c
  8301  00193E  6E3F               	movwf	LCDBusyLoop@status,c
  8302                           
  8303                           ;lcd_hd44780.c: 183: busy = status & 0b10000000;
  8304  001940  503F               	movf	LCDBusyLoop@status,w,c
  8305  001942  0B80               	andlw	128
  8306  001944  6E3D               	movwf	LCDBusyLoop@busy,c
  8307                           
  8308                           ;lcd_hd44780.c: 185: _delay((unsigned long)((0.5)*(48000000/4000000.0)));
  8309  001946  D000               	nop2		;2 cycle nop
  8310  001948  D000               	nop2		;2 cycle nop
  8311  00194A  D000               	nop2		;2 cycle nop
  8312                           
  8313                           ;lcd_hd44780.c: 187: (PORTCbits.RC2=0);
  8314  00194C  9482               	bcf	3970,2,c	;volatile
  8315                           
  8316                           ;lcd_hd44780.c: 188: _delay((unsigned long)((1)*(48000000/4000000.0)));
  8317  00194E  0E04               	movlw	4
  8318  001950                     u5037:
  8319  001950  2EE8               	decfsz	wreg,f,c
  8320  001952  D7FE               	goto	u5037
  8321                           
  8322                           ;lcd_hd44780.c: 189: } while (busy);
  8323  001954  503D               	movf	LCDBusyLoop@busy,w,c
  8324  001956  A4D8               	btfss	status,2,c
  8325  001958  D7D6               	goto	l4541
  8326                           
  8327                           ;lcd_hd44780.c: 191: (PORTCbits.RC1=0);
  8328  00195A  9282               	bcf	3970,1,c	;volatile
  8329                           
  8330                           ;lcd_hd44780.c: 194: TRISA &= (~(0x0F << 1));
  8331  00195C  0EE1               	movlw	225
  8332  00195E  1692               	andwf	3986,f,c	;volatile
  8333  001960  0012               	return		;funcret
  8334  001962                     __end_of_LCDBusyLoop:
  8335                           	opt stack 0
  8336                           tblptru	equ	0xFF8
  8337                           tblptrh	equ	0xFF7
  8338                           tblptrl	equ	0xFF6
  8339                           tablat	equ	0xFF5
  8340                           prodh	equ	0xFF4
  8341                           prodl	equ	0xFF3
  8342                           intcon	equ	0xFF2
  8343                           indf0	equ	0xFEF
  8344                           postinc0	equ	0xFEE
  8345                           fsr0h	equ	0xFEA
  8346                           fsr0l	equ	0xFE9
  8347                           wreg	equ	0xFE8
  8348                           postdec1	equ	0xFE5
  8349                           plusw1	equ	0xFE3
  8350                           fsr1l	equ	0xFE1
  8351                           indf2	equ	0xFDF
  8352                           plusw2	equ	0xFDB
  8353                           fsr2h	equ	0xFDA
  8354                           fsr2l	equ	0xFD9
  8355                           status	equ	0xFD8
  8356                           
  8357 ;; *************** function _ISR *****************
  8358 ;; Defined at:
  8359 ;;		line 278 in file "main_lcd.c"
  8360 ;; Parameters:    Size  Location     Type
  8361 ;;		None
  8362 ;; Auto vars:     Size  Location     Type
  8363 ;;		None
  8364 ;; Return value:  Size  Location     Type
  8365 ;;		None               void
  8366 ;; Registers used:
  8367 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8368 ;; Tracked objects:
  8369 ;;		On entry : 0/0
  8370 ;;		On exit  : 0/0
  8371 ;;		Unchanged: 0/0
  8372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8373 ;;      Params:         0       0       0       0       0       0       0       0       0
  8374 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8375 ;;      Temps:         14       0       0       0       0       0       0       0       0
  8376 ;;      Totals:        14       0       0       0       0       0       0       0       0
  8377 ;;Total ram usage:       14 bytes
  8378 ;; Hardware stack levels used:    1
  8379 ;; This function calls:
  8380 ;;		Nothing
  8381 ;; This function is called by:
  8382 ;;		Interrupt level 2
  8383 ;; This function uses a non-reentrant model
  8384 ;;
  8385                           
  8386                           	psect	intcode
  8387  000008                     __pintcode:
  8388                           	opt stack 0
  8389  000008                     _ISR:
  8390                           	opt stack 24
  8391                           
  8392                           ;incstack = 0
  8393  000008  CFFA F02F          	movff	pclath,??_ISR
  8394  00000C  CFFB F030          	movff	pclatu,??_ISR+1
  8395  000010  CFE9 F031          	movff	fsr0l,??_ISR+2
  8396  000014  EDB6  F00A         	call	int_func,f	;refresh shadow registers
  8397                           pclatu	equ	0xFFB
  8398                           pclath	equ	0xFFA
  8399                           tblptru	equ	0xFF8
  8400                           tblptrh	equ	0xFF7
  8401                           tblptrl	equ	0xFF6
  8402                           tablat	equ	0xFF5
  8403                           prodh	equ	0xFF4
  8404                           prodl	equ	0xFF3
  8405                           intcon	equ	0xFF2
  8406                           indf0	equ	0xFEF
  8407                           postinc0	equ	0xFEE
  8408                           fsr0h	equ	0xFEA
  8409                           fsr0l	equ	0xFE9
  8410                           wreg	equ	0xFE8
  8411                           postdec1	equ	0xFE5
  8412                           plusw1	equ	0xFE3
  8413                           fsr1l	equ	0xFE1
  8414                           indf2	equ	0xFDF
  8415                           plusw2	equ	0xFDB
  8416                           fsr2h	equ	0xFDA
  8417                           fsr2l	equ	0xFD9
  8418                           status	equ	0xFD8
  8419                           
  8420                           	psect	intcode_body
  8421  00156C                     __pintcode_body:
  8422                           	opt stack 24
  8423  00156C                     int_func:
  8424                           	opt stack 24
  8425  00156C  0006               	pop		; remove dummy address from shadow register refresh
  8426  00156E  CFEA F032          	movff	fsr0h,??_ISR+3
  8427  001572  CFE1 F033          	movff	fsr1l,??_ISR+4
  8428  001576  CFE2 F034          	movff	fsr1h,??_ISR+5
  8429  00157A  CFD9 F035          	movff	fsr2l,??_ISR+6
  8430  00157E  CFDA F036          	movff	fsr2h,??_ISR+7
  8431  001582  CFF3 F037          	movff	prodl,??_ISR+8
  8432  001586  CFF4 F038          	movff	prodh,??_ISR+9
  8433  00158A  CFF6 F039          	movff	tblptrl,??_ISR+10
  8434  00158E  CFF7 F03A          	movff	tblptrh,??_ISR+11
  8435  001592  CFF8 F03B          	movff	tblptru,??_ISR+12
  8436  001596  CFF5 F03C          	movff	tablat,??_ISR+13
  8437                           
  8438                           ;main_lcd.c: 279: if (PIR1bits.RCIF) {
  8439  00159A  AA9E               	btfss	3998,5,c	;volatile
  8440  00159C  D02F               	goto	i2l428
  8441                           
  8442                           ;main_lcd.c: 280: uart_rx_block[uart_block_count] = RCREG;
  8443  00159E  502E               	movf	_uart_block_count,w,c
  8444  0015A0  0D01               	mullw	1
  8445  0015A2  0E0A               	movlw	low _uart_rx_block
  8446  0015A4  24F3               	addwf	prodl,w,c
  8447  0015A6  6ED9               	movwf	fsr2l,c
  8448  0015A8  0E00               	movlw	high _uart_rx_block
  8449  0015AA  20F4               	addwfc	prodh,w,c
  8450  0015AC  6EDA               	movwf	fsr2h,c
  8451  0015AE  CFAE FFDF          	movff	4014,indf2	;volatile
  8452                           
  8453                           ;main_lcd.c: 281: uart_block_count++;
  8454  0015B2  2A2E               	incf	_uart_block_count,f,c
  8455                           
  8456                           ;main_lcd.c: 282: if (uart_block_count == 8) {
  8457  0015B4  0E08               	movlw	8
  8458  0015B6  182E               	xorwf	_uart_block_count,w,c
  8459  0015B8  A4D8               	btfss	status,2,c
  8460  0015BA  D020               	goto	i2l428
  8461                           
  8462                           ;main_lcd.c: 283: uart_block_count = 0;
  8463  0015BC  0E00               	movlw	0
  8464  0015BE  6E2E               	movwf	_uart_block_count,c
  8465                           
  8466                           ;main_lcd.c: 284: SerialRx.TransmitAddress = (uart_rx_block[0] & 0xF0);
  8467  0015C0  500A               	movf	_uart_rx_block,w,c
  8468  0015C2  0BF0               	andlw	240
  8469  0015C4  0100               	movlb	0	; () banked
  8470  0015C6  6F60               	movwf	_SerialRx& (0+255),b
  8471                           
  8472                           ; BSR set to: 0
  8473                           ;main_lcd.c: 285: SerialRx.Command = (uart_rx_block[0] & 0x0F);
  8474  0015C8  500A               	movf	_uart_rx_block,w,c
  8475  0015CA  0B0F               	andlw	15
  8476  0015CC  0100               	movlb	0	; () banked
  8477  0015CE  6F61               	movwf	(_SerialRx+1)& (0+255),b
  8478                           
  8479                           ; BSR set to: 0
  8480                           ;main_lcd.c: 286: SerialRx.Hardware = uart_rx_block[1];
  8481  0015D0  C00B  F062         	movff	_uart_rx_block+1,_SerialRx+2
  8482                           
  8483                           ; BSR set to: 0
  8484                           ;main_lcd.c: 287: SerialRx.Dat1 = uart_rx_block[2];
  8485  0015D4  C00C  F063         	movff	_uart_rx_block+2,_SerialRx+3
  8486                           
  8487                           ; BSR set to: 0
  8488                           ;main_lcd.c: 288: SerialRx.Dat2 = uart_rx_block[3];
  8489  0015D8  C00D  F064         	movff	_uart_rx_block+3,_SerialRx+4
  8490                           
  8491                           ; BSR set to: 0
  8492                           ;main_lcd.c: 289: SerialRx.Dat3 = uart_rx_block[4];
  8493  0015DC  C00E  F065         	movff	_uart_rx_block+4,_SerialRx+5
  8494                           
  8495                           ; BSR set to: 0
  8496                           ;main_lcd.c: 290: SerialRx.Dat4 = uart_rx_block[5];
  8497  0015E0  C00F  F066         	movff	_uart_rx_block+5,_SerialRx+6
  8498                           
  8499                           ; BSR set to: 0
  8500                           ;main_lcd.c: 291: SerialRx.Dat5 = uart_rx_block[6];
  8501  0015E4  C010  F067         	movff	_uart_rx_block+6,_SerialRx+7
  8502                           
  8503                           ; BSR set to: 0
  8504                           ;main_lcd.c: 292: SerialRx.Dat6 = uart_rx_block[7];
  8505  0015E8  C011  F068         	movff	_uart_rx_block+7,_SerialRx+8
  8506                           
  8507                           ; BSR set to: 0
  8508                           ;main_lcd.c: 294: if(SerialRx.TransmitAddress == 0xA0)
  8509  0015EC  0EA0               	movlw	160
  8510  0015EE  0100               	movlb	0	; () banked
  8511  0015F0  1960               	xorwf	_SerialRx& (0+255),w,b
  8512  0015F2  A4D8               	btfss	status,2,c
  8513  0015F4  D003               	goto	i2l428
  8514                           
  8515                           ; BSR set to: 0
  8516                           ;main_lcd.c: 295: inputs = (0xFF & 0x10);
  8517  0015F6  0E10               	movlw	16
  8518  0015F8  6E23               	movwf	_inputs,c
  8519                           
  8520                           ; BSR set to: 0
  8521                           
  8522                           ; BSR set to: 0
  8523  0015FA  D000               	goto	i2l428
  8524  0015FC                     i2l428:
  8525  0015FC  C03C  FFF5         	movff	??_ISR+13,tablat
  8526  001600  C03B  FFF8         	movff	??_ISR+12,tblptru
  8527  001604  C03A  FFF7         	movff	??_ISR+11,tblptrh
  8528  001608  C039  FFF6         	movff	??_ISR+10,tblptrl
  8529  00160C  C038  FFF4         	movff	??_ISR+9,prodh
  8530  001610  C037  FFF3         	movff	??_ISR+8,prodl
  8531  001614  C036  FFDA         	movff	??_ISR+7,fsr2h
  8532  001618  C035  FFD9         	movff	??_ISR+6,fsr2l
  8533  00161C  C034  FFE2         	movff	??_ISR+5,fsr1h
  8534  001620  C033  FFE1         	movff	??_ISR+4,fsr1l
  8535  001624  C032  FFEA         	movff	??_ISR+3,fsr0h
  8536  001628  C031  FFE9         	movff	??_ISR+2,fsr0l
  8537  00162C  C030  FFFB         	movff	??_ISR+1,pclatu
  8538  001630  C02F  FFFA         	movff	??_ISR,pclath
  8539  001634  0011               	retfie		f
  8540  001636                     __end_of_ISR:
  8541                           	opt stack 0
  8542                           pclatu	equ	0xFFB
  8543                           pclath	equ	0xFFA
  8544                           tblptru	equ	0xFF8
  8545                           tblptrh	equ	0xFF7
  8546                           tblptrl	equ	0xFF6
  8547                           tablat	equ	0xFF5
  8548                           prodh	equ	0xFF4
  8549                           prodl	equ	0xFF3
  8550                           intcon	equ	0xFF2
  8551                           indf0	equ	0xFEF
  8552                           postinc0	equ	0xFEE
  8553                           fsr0h	equ	0xFEA
  8554                           fsr0l	equ	0xFE9
  8555                           wreg	equ	0xFE8
  8556                           postdec1	equ	0xFE5
  8557                           plusw1	equ	0xFE3
  8558                           fsr1h	equ	0xFE2
  8559                           fsr1l	equ	0xFE1
  8560                           indf2	equ	0xFDF
  8561                           plusw2	equ	0xFDB
  8562                           fsr2h	equ	0xFDA
  8563                           fsr2l	equ	0xFD9
  8564                           status	equ	0xFD8
  8565                           pclatu	equ	0xFFB
  8566                           pclath	equ	0xFFA
  8567                           tblptru	equ	0xFF8
  8568                           tblptrh	equ	0xFF7
  8569                           tblptrl	equ	0xFF6
  8570                           tablat	equ	0xFF5
  8571                           prodh	equ	0xFF4
  8572                           prodl	equ	0xFF3
  8573                           intcon	equ	0xFF2
  8574                           indf0	equ	0xFEF
  8575                           postinc0	equ	0xFEE
  8576                           fsr0h	equ	0xFEA
  8577                           fsr0l	equ	0xFE9
  8578                           wreg	equ	0xFE8
  8579                           postdec1	equ	0xFE5
  8580                           plusw1	equ	0xFE3
  8581                           fsr1h	equ	0xFE2
  8582                           fsr1l	equ	0xFE1
  8583                           indf2	equ	0xFDF
  8584                           plusw2	equ	0xFDB
  8585                           fsr2h	equ	0xFDA
  8586                           fsr2l	equ	0xFD9
  8587                           status	equ	0xFD8
  8588                           
  8589                           	psect	rparam
  8590  0000                     pclatu	equ	0xFFB
  8591                           pclath	equ	0xFFA
  8592                           tblptru	equ	0xFF8
  8593                           tblptrh	equ	0xFF7
  8594                           tblptrl	equ	0xFF6
  8595                           tablat	equ	0xFF5
  8596                           prodh	equ	0xFF4
  8597                           prodl	equ	0xFF3
  8598                           intcon	equ	0xFF2
  8599                           indf0	equ	0xFEF
  8600                           postinc0	equ	0xFEE
  8601                           fsr0h	equ	0xFEA
  8602                           fsr0l	equ	0xFE9
  8603                           wreg	equ	0xFE8
  8604                           postdec1	equ	0xFE5
  8605                           plusw1	equ	0xFE3
  8606                           fsr1h	equ	0xFE2
  8607                           fsr1l	equ	0xFE1
  8608                           indf2	equ	0xFDF
  8609                           plusw2	equ	0xFDB
  8610                           fsr2h	equ	0xFDA
  8611                           fsr2l	equ	0xFD9
  8612                           status	equ	0xFD8


Data Sizes:
    Strings     351
    Constant    324
    Data        28
    BSS         76
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     27      81
    BANK0           160     15      67
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    lcd_start_up@st	PTR const unsigned char  size(2) Largest target is 6
		 -> lcd_start_up@start(BANK0[6]), 

    LCDWriteString@msg	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_71(CODE[17]), STR_70(CODE[17]), STR_69(CODE[12]), STR_68(CODE[12]), 
		 -> STR_67(CODE[17]), STR_66(CODE[17]), STR_65(CODE[3]), STR_64(CODE[3]), 
		 -> STR_63(CODE[3]), STR_62(CODE[3]), STR_61(CODE[3]), STR_60(CODE[3]), 
		 -> STR_59(CODE[3]), STR_58(CODE[3]), STR_57(CODE[3]), STR_56(CODE[3]), 
		 -> STR_55(CODE[3]), STR_54(CODE[3]), STR_53(CODE[2]), STR_52(CODE[2]), 
		 -> STR_51(CODE[12]), STR_50(CODE[12]), STR_49(CODE[3]), STR_48(CODE[3]), 
		 -> STR_47(CODE[3]), STR_46(CODE[3]), STR_45(CODE[3]), STR_44(CODE[3]), 
		 -> STR_43(CODE[2]), STR_42(CODE[3]), STR_41(CODE[3]), STR_40(CODE[3]), 
		 -> lcd_start_up@start(BANK0[6]), STR_39(CODE[17]), STR_38(CODE[9]), STR_37(CODE[17]), 
		 -> STR_36(CODE[9]), STR_35(CODE[9]), STR_34(CODE[9]), STR_33(CODE[9]), 
		 -> STR_32(CODE[9]), STR_31(CODE[9]), STR_30(CODE[9]), STR_29(CODE[9]), 
		 -> STR_28(CODE[9]), STR_27(CODE[9]), STR_26(CODE[9]), STR_25(CODE[9]), 
		 -> STR_24(CODE[9]), STR_23(CODE[17]), STR_22(CODE[17]), STR_21(CODE[17]), 
		 -> STR_20(CODE[17]), STR_19(CODE[17]), STR_18(CODE[17]), STR_17(CODE[2]), 
		 -> STR_16(CODE[2]), STR_15(CODE[2]), STR_14(CODE[3]), STR_13(CODE[2]), 
		 -> STR_12(CODE[2]), STR_11(CODE[2]), STR_10(CODE[3]), STR_9(CODE[2]), 
		 -> STR_8(CODE[2]), STR_7(CODE[2]), STR_6(CODE[5]), STR_5(CODE[3]), 
		 -> STR_4(CODE[8]), STR_3(CODE[8]), STR_2(CODE[8]), STR_1(CODE[8]), 


Critical Paths under _main in COMRAM

    _main->_lcd_time_out
    _lcd_time_out->_LCDWriteString
    _lcd_start_up->_LCDWriteString
    _lcd_main_menu_fsm->_lcd_sub_menu_lcd
    _lcd_update->_lcd_connection
    _lcd_connection->_LCDWriteString
    _lcd_screensaver->_LCDWriteString
    _LCDLoadCostum->_LCDByte
    _lcd_sub_menu_metronoom->_LCDWriteInt
    _lcd_sub_menu_metronoom->_LCDWriteString
    _lcd_sub_menu_lcd->_LCDWriteInt
    _lcd_sub_menu_lcd->_LCDWriteString
    _LCDWriteString->_LCDByte
    _LCDWriteInt->_LCDByte
    _LCDGotoXY->_LCDByte
    _init_pic->_init_uart_m
    _LCDInit->_LCDByte
    _LCDByte->_LCDBusyLoop

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_lcd_main_menu_fsm
    _lcd_main_menu_fsm->_lcd_sub_menu_metronoom
    _lcd_sub_menu_metronoom->_LCDWriteInt
    _lcd_sub_menu_lcd->_LCDWriteInt

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0  226833
                                             14 BANK0      1     1      0
                            _LCDByte
                          _LCDGotoXY
                            _LCDInit
                        _LCDWriteInt
                     _SerialTransmit
                      _enable_uart_m
                           _init_pic
                        _init_timer0
                  _lcd_main_menu_fsm
                       _lcd_start_up
                       _lcd_time_out
                         _lcd_update
                       _read_buttons
 ---------------------------------------------------------------------------------
 (1) _read_buttons                                         5     5      0       0
                                             14 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (1) _lcd_time_out                                         3     3      0   18990
                                             26 COMRAM     1     1      0
                                              0 BANK0      2     2      0
                          _LCDGotoXY
                     _LCDWriteString
 ---------------------------------------------------------------------------------
 (1) _lcd_start_up                                        10    10      0   22749
                                              0 BANK0     10    10      0
                            _LCDByte
                          _LCDGotoXY
                     _LCDWriteString
                        __delay_10ms
 ---------------------------------------------------------------------------------
 (2) __delay_10ms                                          3     1      2     265
                                             14 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _lcd_main_menu_fsm                                    1     1      0  119532
                                             13 BANK0      1     1      0
                     _SerialTransmit
                   _lcd_sub_menu_lcd
             _lcd_sub_menu_metronoom
                _lcd_sub_menu_tetten
                         _lcd_update
 ---------------------------------------------------------------------------------
 (1) _lcd_update                                           0     0      0   41874
                          _LCDGotoXY
                     _LCDWriteString
                     _lcd_connection
 ---------------------------------------------------------------------------------
 (2) _lcd_connection                                       1     1      0   22915
                                             26 COMRAM     1     1      0
                          _LCDGotoXY
                      _LCDLoadCostum
                     _LCDWriteString
 ---------------------------------------------------------------------------------
 (2) _lcd_sub_menu_tetten                                  0     0      0   26246
                    _lcd_screensaver
 ---------------------------------------------------------------------------------
 (3) _lcd_screensaver                                      0     0      0   26246
                            _LCDByte
                          _LCDGotoXY
                      _LCDLoadCostum
                     _LCDWriteString
 ---------------------------------------------------------------------------------
 (3) _LCDLoadCostum                                        2     2      0    3956
                                             23 COMRAM     2     2      0
                            _LCDByte
 ---------------------------------------------------------------------------------
 (2) _lcd_sub_menu_metronoom                               2     2      0   25795
                                             11 BANK0      2     2      0
                          _LCDGotoXY
                        _LCDWriteInt
                     _LCDWriteString
                     _SerialTransmit
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     395
                                             14 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (3) _SerialTransmit                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _lcd_sub_menu_lcd                                     1     1      0   25400
                                             26 COMRAM     1     1      0
                          _LCDGotoXY
                        _LCDWriteInt
                     _LCDWriteString
 ---------------------------------------------------------------------------------
 (3) _LCDWriteString                                       3     1      2    9132
                                             23 COMRAM     3     1      2
                            _LCDByte
 ---------------------------------------------------------------------------------
 (3) _LCDWriteInt                                         14    11      3    6441
                                             23 COMRAM     3     0      3
                                              0 BANK0     11    11      0
                            _LCDByte
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4     587
                                             14 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4     599
                                             14 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) _LCDGotoXY                                            2     1      1    9827
                                             23 COMRAM     2     1      1
                            _LCDByte
 ---------------------------------------------------------------------------------
 (1) _init_timer0                                          3     1      2     194
                                             14 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _init_pic                                             0     0      0     258
                        _init_uart_m
 ---------------------------------------------------------------------------------
 (2) _init_uart_m                                          4     0      4     258
                                             14 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) _enable_uart_m                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCDInit                                              2     2      0    3637
                                             23 COMRAM     2     2      0
                        _LCDBusyLoop
                            _LCDByte
 ---------------------------------------------------------------------------------
 (4) _LCDByte                                              6     5      1    3331
                                             17 COMRAM     6     5      1
                        _LCDBusyLoop
 ---------------------------------------------------------------------------------
 (5) _LCDBusyLoop                                          3     3      0     176
                                             14 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ISR                                                 14    14      0       0
                                              0 COMRAM    14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCDByte
     _LCDBusyLoop
   _LCDGotoXY
     _LCDByte
       _LCDBusyLoop
   _LCDInit
     _LCDBusyLoop
     _LCDByte
       _LCDBusyLoop
   _LCDWriteInt
     _LCDByte
       _LCDBusyLoop
     ___awdiv
     ___awmod
   _SerialTransmit
   _enable_uart_m
   _init_pic
     _init_uart_m
   _init_timer0
   _lcd_main_menu_fsm
     _SerialTransmit
     _lcd_sub_menu_lcd
       _LCDGotoXY
         _LCDByte
           _LCDBusyLoop
       _LCDWriteInt
         _LCDByte
           _LCDBusyLoop
         ___awdiv
         ___awmod
       _LCDWriteString
         _LCDByte
           _LCDBusyLoop
     _lcd_sub_menu_metronoom
       _LCDGotoXY
         _LCDByte
           _LCDBusyLoop
       _LCDWriteInt
         _LCDByte
           _LCDBusyLoop
         ___awdiv
         ___awmod
       _LCDWriteString
         _LCDByte
           _LCDBusyLoop
       _SerialTransmit
       ___lwdiv
     _lcd_sub_menu_tetten
       _lcd_screensaver
         _LCDByte
           _LCDBusyLoop
         _LCDGotoXY
           _LCDByte
             _LCDBusyLoop
         _LCDLoadCostum
           _LCDByte
             _LCDBusyLoop
         _LCDWriteString
           _LCDByte
             _LCDBusyLoop
     _lcd_update
       _LCDGotoXY
         _LCDByte
           _LCDBusyLoop
       _LCDWriteString
         _LCDByte
           _LCDBusyLoop
       _lcd_connection
         _LCDGotoXY
           _LCDByte
             _LCDBusyLoop
         _LCDLoadCostum
           _LCDByte
             _LCDBusyLoop
         _LCDWriteString
           _LCDByte
             _LCDBusyLoop
   _lcd_start_up
     _LCDByte
       _LCDBusyLoop
     _LCDGotoXY
       _LCDByte
         _LCDBusyLoop
     _LCDWriteString
       _LCDByte
         _LCDBusyLoop
     __delay_10ms
   _lcd_time_out
     _LCDGotoXY
       _LCDByte
         _LCDBusyLoop
     _LCDWriteString
       _LCDByte
         _LCDBusyLoop
   _lcd_update
     _LCDGotoXY
       _LCDByte
         _LCDBusyLoop
     _LCDWriteString
       _LCDByte
         _LCDBusyLoop
     _lcd_connection
       _LCDGotoXY
         _LCDByte
           _LCDBusyLoop
       _LCDLoadCostum
         _LCDByte
           _LCDBusyLoop
       _LCDWriteString
         _LCDByte
           _LCDBusyLoop
   _read_buttons

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      F      43       5       41.9%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     1B      51       1       85.3%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      94      20        0.0%
DATA                 0      0      94       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Sun Mar 15 14:35:53 2015

                   ?_LCDBusyLoop 002F                                _i 0021  
                              _j 0024             __size_of__delay_10ms 0022  
                             l70 1AA6                               l64 1A92  
                             l73 1AB0                               l82 1ACE  
                             l67 1A9C                               l76 1ABA  
                             l85 1AD8                               l79 1AC4  
                 ?_LCDLoadCostum 002F                               _m1 004C  
                   ___awdiv@sign 0042                               _t1 004E  
                             _t2 004F                               _t3 002D  
                  ?_lcd_time_out 002F                      __CFG_BORV$3 000000  
                   __CFG_CP0$OFF 000000                     __CFG_CP1$OFF 000000  
                   __CFG_CP2$OFF 000000                     __CFG_CP3$OFF 000000  
                    __CFG_LVP$ON 000000                    ?_lcd_start_up 002F  
                            l125 197A                              l126 197C  
                            l230 1B22                              l119 1BCC  
                            l160 126E                              l137 17E6  
                            l402 023A                              l409 0382  
                            l434 186E                              l507 03B6  
                            l700 0D5C                              l348 0066  
                            l197 13A4                              l509 0698  
                            l518 040A                              l703 0DCA  
                            l528 0452                              l538 04A8  
                            l731 1752                              l548 04F0  
                            l726 0BAC                              l558 0542  
                            l743 1114                              l568 0594  
                            l761 0F80                              l748 1128  
                            l766 0F94                              l777 156A  
                            l973 16CA                              l986 18F0  
                   __CFG_CPB$OFF 000000                     __CFG_CPD$OFF 000000  
                            _ISR 0008                     __CFG_BOR$OFF 000000  
                   ___awmod@sign 0042                              prod 000FF3  
                            wreg 000FE8          LCDWriteInt@field_length 0048  
                __end_of_LCDByte 19CC                  __end_of_LCDInit 17E8  
                   ?_LCDWriteInt 0046                             ?_ISR 002F  
                    LCDByte@temp 0045                     __CFG_WDT$OFF 000000  
                           l1298 1A80                             l5011 1106  
                           l5003 10DE                             l5101 0ABE  
                           l5015 111E                             l5007 10F8  
                           l5025 1A44                             l5201 0798  
                           l5017 1122                             l5113 0B1A  
                           l5027 1A4E                             l5211 07C6  
                           l5131 06A2                             l5107 0AEC  
                           l5123 0B4A                             l5051 0948  
                           l5043 1BB6                             l6003 0356  
                           l5037 1A74                             l5029 1A56  
                           l5205 079E                             l5141 06CA  
                           l5117 0B32                             l5053 094E  
                           l5223 07E8                             l5207 07AE  
                           l5151 06F0                             l5135 06AC  
                           l5231 07FE                             l5071 09D8  
                           l5127 0B84                             l5305 0C1E  
                           l5217 07D4                             l5161 070E  
                           l5233 081A                             l5145 06E2  
                           l5065 09AA                             l5049 0942  
                           l5331 0CA6                             l5315 0C32  
                           l5219 07DA                             l5227 07EE  
                           l5171 0734                             l5139 06B2  
                           l5083 0A34                             l5059 097C  
                           l4541 1906                             l5421 17BE  
                           l4701 1444                             l5341 0CEA  
                           l5309 0C28                             l5317 0C42  
                           l5173 073A                             l5165 0726  
                           l4621 116A                             l4613 1144  
                           l5077 0A06                             l4711 1AEC  
                           l4703 146E                             l5351 0D02  
                           l5271 08E0                             l5183 074E  
                           l5159 06FE                             l4631 1194  
                           l4607 1138                             l5095 0A90  
                           l5503 0494                             l3911 1856  
                           l5425 17C6                             l4713 1AF0  
                           l4721 1B16                             l4801 18E6  
                           l4705 1474                             l5345 0CF6  
                           l5353 0D12                             l5185 075E  
                           l4633 1198                             l4625 1172  
                           l4609 113C                             l5089 0A62  
                           l5601 0606                             l5521 04DA  
                           l5505 049A                             l5433 0396  
                           l3921 186A                             l3913 185C  
                           l4715 1AF4                             l5195 0784  
                           l5179 0748                             l4643 11C2  
                           l4619 1166                             l5611 0634  
                           l5523 04E0                             l5515 04B2  
                           l5451 03DE                             l5443 03B0  
                           l4733 164C                             l5365 0D60  
                           l5285 0BB2                             l5293 0BC2  
                           l5197 078A                             l5189 0776  
                           l4661 11FC                             l4645 11C6  
                           l4637 11A0                             l5541 0528  
                           l5517 04D0                             l5533 04FA  
                           l5461 03F8                             l5437 03A0  
                           l5621 065A                             l4719 1AFA  
                           l4831 130E                             l5367 0D70  
                           l5295 0BDA                             l5279 0938  
                           l4655 11F0                             l5607 0610  
                           l5535 0518                             l5527 04EA  
                           l5463 03FE                             l5455 03E8  
                           l5439 03A6                             l4745 1674  
                           l4761 16B0                             l4841 137E  
                           l4833 1316                             l4825 12FC  
                           l5289 0BBC                             l4673 122A  
                           l4657 11F4                             l4649 11CE  
                           l4681 124C                             l5617 063E  
                           l5609 062C                             l5561 0574  
                           l5545 0532                             l5481 0442  
                           l5457 03EE                             l5473 0414  
                           l5449 03C0                             l5641 1746  
                           l4747 167E                             l4739 165E  
                           l4835 1330                             l4819 12AE  
                           l5379 0DB4                             l4667 121E  
                           l5563 057A                             l5547 0538  
                           l5539 0522                             l5555 054C  
                           l5475 0432                             l5491 045C  
                           l4765 16C0                             l4757 16A4  
                           l4749 1686                             l4781 1894  
                           l4837 135C                             l4685 13A8  
                           l4669 1222                             l4933 0F72  
                           l5581 05C2                             l5557 056A  
                           l5493 047A                             l5485 044C  
                           l5629 16F8                             l4871 0E22  
                           l5567 0584                             l5479 043C  
                           l5655 14F2                             l5903 01AA  
                           l4793 18CA                             l4785 18A2  
                           l4777 1886                             l4697 1410  
                           l4937 0F8A                             l4857 0DEC  
                           l5593 05D8                             l5569 058A  
                           l5577 059E                             l5497 0484  
                           l5673 1560                             l5665 1522  
                           l5921 01F6                             l5913 01C6  
                           l5905 01B2                             l4787 18AC  
                           l4939 0F8E                             l4859 0DF4  
                           l5595 05F4                             l5579 05BA  
                           l5499 048A                             l5659 150A  
                           l5667 1532                             l5931 0228  
                           l4789 18B4                             l4797 18D6  
                           l4877 0E3A                             l4869 0E1A  
                           l5597 05FC                             l5933 022E  
                           l5925 0200                             l5909 01BC  
                           l5917 01CC                             l5853 00A8  
                           l5845 0090                             l4879 0E42  
                           l5943 0262                             l5919 01EE  
                           l5951 028A                             l4993 10A6  
                           l5953 02B8                             l5929 0206  
                           l5881 0136                             l5849 009E  
                           l5865 00DA                             l5971 0306  
                           l5947 0268                             l5875 0124  
                           l5867 00FC                             l4997 10BE  
                           l5981 0320                             l5965 02F8  
                           l5877 012C                             l5893 0168  
                           l5991 0338                             l5895 018A  
                           l5979 031A                             l5999 034E  
                           STR_1 7FB5                             STR_2 7FBD  
                           STR_3 7FC5                             STR_4 7FCD  
                           STR_5 7FE9                             STR_6 7FD5  
                           STR_7 7FF8                             STR_8 7EAE  
                           STR_9 7EAE                             u4100 0F7E  
                           u5007 19BA                             u2535 1BA4  
                           u2536 1BA6                             u3600 13F2  
                           u2800 1814                             u5017 19C2  
                           u2545 1BAE                             u2546 1BB0  
                           u4090 0F7C                             u4170 1110  
                           u5027 1924                             u4180 1112  
                           u2820 1828                             u5037 1950  
                           u2725 1B66                             u2726 1B68  
                           u3630 143E                             u2735 1B74  
                           u3607 13E8                             u2736 1B76  
                           u3640 1468                             u2760 17F6  
                           u3650 1494                             u2818 1816  
                           u3580 13C8                             u2780 1802  
                           u3637 1434                             u2838 182A  
                           u3647 145E                             u3657 148A  
                           u4561 16E2                             u2778 17F8  
                           u3587 13BE                             u2798 1804  
                           u3881 127A                             u4957 1BBC  
                           u4967 178A                             u4977 1792  
                           u4987 1998                             u4997 19A0  
                           _main 001C               __size_of_LCDGotoXY 0046  
                           _send 002B                             _scrs 0029  
                           fsr0h 000FEA                             fsr1h 000FE2  
                           indf0 000FEF                             fsr0l 000FE9  
                           fsr2h 000FDA                             fsr1l 000FE1  
                           indf2 000FDF                             fsr2l 000FD9  
                           pclat 000FFA                             prodh 000FF4  
                           prodl 000FF3  __size_of_lcd_sub_menu_metronoom 02A0  
                           start 0018                 ?_lcd_screensaver 002F  
                  __CFG_IESO$OFF 000000                    __CFG_MCLRE$ON 000000  
                   ___param_bank 000010                            ??_ISR 002F  
                 ??_lcd_time_out 0094                    __CFG_PLLDIV$5 000000  
                 ??_lcd_start_up 0049                            ?_main 002F  
                __end_of___brght 7E9F                  __end_of___awdiv 16CC  
                          STR_10 7FF5                            STR_11 7EAE  
                          STR_12 7FF8                            STR_20 7EE3  
                          STR_13 7EAE                            STR_21 7E9F  
                          STR_30 7F7F                            STR_14 7FF5  
                          STR_22 7EC1                            STR_15 7EAE  
                          STR_23 7E9F                            STR_31 7F76  
                          STR_16 7EAE                            STR_32 7F76  
                          STR_40 7FDA                            STR_24 7F9A  
                          STR_17 7FF8                            STR_41 7FDD  
                          STR_33 7F91                            STR_25 7F88  
                          STR_26 7F88                            STR_34 7F91  
                          STR_42 7FE6                            STR_50 7F61  
                          STR_18 7F27                            STR_43 7EAE  
                          STR_51 7EA4                            STR_27 7FA3  
                          STR_35 7F6D                            STR_19 7ED2  
                          STR_36 7F6D                            STR_28 7FA3  
                          STR_60 7FDA                            STR_52 7FFA  
                          STR_44 7FEC                  __end_of___awmod 18F2  
                          STR_37 7E9F                            STR_61 7FDD  
                          STR_53 7FFC                            STR_45 7FE0  
                          STR_29 7F7F                            STR_54 7FDA  
                          STR_62 7FE0                            STR_46 7FE3  
                          STR_38 7FAC                            STR_70 7F38  
                          STR_55 7FDD                            STR_63 7FE3  
                          STR_47 7FEF                            STR_39 7F16  
                          STR_71 7EF4                            STR_56 7FE0  
                          STR_64 7FE6                            STR_48 7FF2  
                          STR_57 7FE3                            STR_65 7FEC  
                          STR_49 7FEC                            STR_58 7FE6  
                          STR_66 7EB0                            STR_59 7FEC  
                          STR_67 7F05                            STR_68 7F55  
                          STR_69 7F49                     LCDInit@style 0046  
                ___awdiv@divisor 003F                  __end_of___lwdiv 1A8A  
                          i2l428 15FC                  ___awdiv@counter 0041  
                          _RCREG 000FAE                            _TMR0L 000FD6  
                          _SPBRG 000FAF                            _PORTA 000F80  
                          _PORTB 000F81                    _main_menu_old 0026  
                  __CFG_USBDIV$2 000000                    _main_menu_new 0025  
                          _TRISA 000F92                            _TRISB 000F93  
                          _TRISC 000F94                            _TXREG 000FAD  
                  __CFG_PWRT$OFF 000000                    __CFG_WRT0$OFF 000000  
                  __CFG_WRT1$OFF 000000                     ?_init_timer0 003D  
                  __CFG_WRT2$OFF 000000                    __CFG_WRT3$OFF 000000  
                   ?_init_uart_m 003D                   __CFG_EBTR0$OFF 000000  
                 __CFG_FCMEN$OFF 000000                   __CFG_EBTR1$OFF 000000  
                 __CFG_EBTR2$OFF 000000                   __CFG_EBTR3$OFF 000000  
                  __CFG_WRTB$OFF 000000                    __CFG_WRTC$OFF 000000  
                  __CFG_WRTD$OFF 000000                   __CFG_EBTRB$OFF 000000  
                          _first 001D                            _tempo 004A  
              lcd_time_out@mmOld 0049                            tablat 000FF5  
                          plusw1 000FE3                            plusw2 000FDB  
                          status 000FD8                   _SerialTransmit 1A8A  
                __initialization 19CC                     __end_of_main 038E  
                ??_LCDLoadCostum 0046                    _indicator_cnt 0014  
            _lcd_sub_menu_tetten 1BFE                           ??_main 00A2  
              __end_of_LCDGotoXY 1B24                    __activetblptr 000002  
         _lcd_sub_menu_metronoom 069E                    LCDByte@isdata 0040  
                      ??_LCDByte 0041                        ??_LCDInit 0046  
                __CFG_CCP2MX$OFF 000000                 ___awdiv@dividend 003D  
           ?_lcd_sub_menu_tetten 002F           __end_of_SerialTransmit 1ADE  
               ??_lcd_connection 0049                   __CFG_XINST$OFF 000000  
                 _LCDWriteString 13A6                    ?_read_buttons 002F  
                      ??___awdiv 0041                   __CFG_STVREN$ON 000000  
                      ??___awmod 0041                        ??___lwdiv 0041  
           __size_of_LCDBusyLoop 0070                 __end_of_init_pic 1B5A  
                         clear_0 19D2                           clear_1 19DE  
                         _inputs 0023                 ___awdiv@quotient 0043  
                ___awmod@divisor 003F                  ___awmod@counter 0041  
                   __pdataCOMRAM 004A                    _fsm_old_state 001F  
                  _fsm_new_state 001E                     LCDWriteInt@i 009D  
                   LCDWriteInt@j 009B                     __mediumconst 7D5A  
                         tblptrh 000FF7                           tblptrl 000FF6  
                         tblptru 000FF8            ??_lcd_sub_menu_tetten 0049  
           __end_of_lcd_time_out 156C             __size_of_LCDWriteInt 0136  
                     __accesstop 0060          __end_of__initialization 1A24  
                __CFG_PBADEN$OFF 000000             __end_of_lcd_start_up 175E  
         __end_of_LCDWriteString 149C                  ?_SerialTransmit 002F  
                  ___rparam_used 000001                        LCDByte@hn 0042  
                      LCDByte@ln 0043                   ??_read_buttons 003D  
                 __pcstackCOMRAM 002F                ?_lcd_sub_menu_lcd 002F  
                   __pidataBANK0 1BD6               ??_lcd_sub_menu_lcd 0049  
           __size_of_init_timer0 002E             __size_of_init_uart_m 002C  
                     __pbssBANK0 0060            __end_of_enable_uart_m 1BF8  
                     __pnvCOMRAM 0050                  ?_LCDWriteString 0046  
                  ??__delay_10ms 003F                 LCDLoadCostum@__i 0047  
              __end_of___costum0 7D9B                __end_of___costum1 7DDB  
              __end_of___costum2 7E1B                __end_of___costum3 7E5B  
              __end_of___costum4 7E9B                 init_timer0@presc 003D  
                        _LCDByte 1962                          _LCDInit 175E  
                  _lSEARCH_HWcnt 0018                       _brightness 0050  
                     _lcd_update 093E                  __CFG_VREGEN$OFF 000000  
                      ?_init_pic 002F                          __Hparam 0000  
                        __Lparam 0000                          ___brght 7E9B  
                        ___awdiv 1636                          ___awmod 1870  
                        ___lwdiv 1A2E          ?_lcd_sub_menu_metronoom 002F  
       __size_of_lcd_screensaver 01CA                          __pcinit 19CC  
                        __ramtop 0800              __end_of__delay_10ms 1BD6  
                        __ptext0 001C                          __ptext1 17E8  
                        __ptext2 149C                          __ptext3 16CC  
                        __ptext4 1BB4                          __ptext5 038E  
                        __ptext6 093E                          __ptext7 0F96  
                        __ptext8 1BFE                          __ptext9 0DCC  
                        _go_back 0020                        _T0CONbits 000FD5  
                   __size_of_ISR 162E                 ___awmod@dividend 003D  
          __size_of_lcd_time_out 00D0                        _LCDGotoXY 1ADE  
           __end_of_read_buttons 1870            __size_of_lcd_start_up 0092  
                 __pintcode_body 156C             end_of_initialization 1A24  
             _sub_menu_metronoom 004D                    __Lmediumconst 7D5A  
                        int_func 156C                       ??_init_pic 0041  
                 lcd_start_up@st 009C                        _RCSTAbits 000FAB  
                        postdec1 000FE5                       _scrs_speed 0051  
 __end_of_lcd_sub_menu_metronoom 093E                          postinc0 000FEE  
          __end_of_LCDLoadCostum 1270               __delay_10ms@length 003D  
                   _lcd_time_out 149C                        _PORTAbits 000F80  
                      _PORTBbits 000F81                        _PORTCbits 000F82  
                   _lcd_start_up 16CC                LCDWriteString@msg 0046  
                      _TRISCbits 000F94                       ?_LCDGotoXY 0046  
                    ?_lcd_update 002F                 ??_SerialTransmit 003D  
                     LCDInit@__i 0047                        _TXSTAbits 000FAC  
                     LCDGotoXY@x 0047                       LCDGotoXY@y 0046  
                    __delay_10ms 1BB4                    ??_LCDBusyLoop 003D  
                    _BAUDCONbits 000FB8                 _uart_block_count 002E  
                  __pidataCOMRAM 1BF8      __end_of_lcd_sub_menu_tetten 1C04  
            start_initialization 19CC                ??_lcd_screensaver 0049  
                    __end_of_ISR 1636        __size_of_lcd_sub_menu_lcd 021E  
                  ??_LCDWriteInt 0094                 ??_LCDWriteString 0048  
               LCDWriteBin@F4938 0069              __size_of_lcd_update 0270  
                    __pdataBANK0 007E                 __CFG_LPT1OSC$OFF 000000  
              lcd_start_up@F5048 008E              __end_of_LCDBusyLoop 1962  
        __size_of_lcd_connection 0194            __size_of_read_buttons 0088  
                       ?_LCDByte 0040                         ?_LCDInit 002F  
                  ??_init_timer0 003F                      __pbssCOMRAM 0001  
                  ??_init_uart_m 0041                         LCDByte@c 0044  
                      ___costum0 7D5B                        ___costum1 7D9B  
                      ___costum2 7DDB                        ___costum3 7E1B  
                      ___costum4 7E5B                    __pcstackBANK0 0094  
               LCDWriteHex@F4943 0012                      ??_LCDGotoXY 0047  
         lcd_main_menu_fsm@mmOld 00A1                lcd_start_up@x_pos 009B  
              lcd_start_up@start 0094             init_timer0@eight_bit 003F  
              _lcd_main_menu_fsm 038E                 LCDWriteInt@F4932 0079  
             ?_lcd_main_menu_fsm 002F              __end_of_LCDWriteInt 13A6  
              __size_of_init_pic 0036                 ___lwdiv@dividend 003D  
                 _buttons_change 001A                        __pintcode 0008  
            ??_lcd_main_menu_fsm 004A                    __pmediumconst 7D5A  
                   _read_buttons 17E8                         ?___awdiv 003D  
                       ?___awmod 003D                         ?___lwdiv 003D  
                   _lSEARCH_Acnt 0016           __size_of_enable_uart_m 000C  
                init_uart_m@baud 003D                        _indicator 0022  
                LCDBusyLoop@busy 003D                  LCDBusyLoop@temp 003E  
               ___lwdiv@quotient 0042        __end_of_lcd_main_menu_fsm 069E  
                      _read_data 0028             init_timer0@presc_val 003E  
            __end_of_init_timer0 1B88              __end_of_init_uart_m 1BB4  
                       _LATAbits 000F89                         _PIE1bits 000F9D  
                       _PIR1bits 000F9E                 __CFG_WDTPS$32768 000000  
                    _LCDBusyLoop 18F2                 LCDWriteString@cc 0048  
              init_uart_m@RX_inv 0040                init_uart_m@TX_inv 003F  
                     _ADCON1bits 000FC1                 __size_of_LCDByte 006A  
               __size_of_LCDInit 008A                 _lcd_sub_menu_lcd 0BAE  
                   ??_lcd_update 004A              LCDLoadCostum@select 0046  
                    _LCDWriteInt 1270                        copy_data0 19F8  
                      copy_data1 1A18                    _enable_uart_m 1BEC  
                       __Hrparam 0000                         ___HexVal 007E  
                       _SerialRx 0060                         _SerialTx 0001  
                       __Lrparam 0000                     ?__delay_10ms 003D  
                _lcd_screensaver 0DCC                 __size_of___awdiv 0096  
               __size_of___awmod 0082               __end_of_lcd_update 0BAE  
              LCDBusyLoop@status 003F                 __size_of___lwdiv 005C  
                 _lcd_connection 0F96                 lcd_start_up@busy 009A  
                    _init_timer0 1B5A                      _init_uart_m 1B88  
                ___lwdiv@divisor 003F                      _buttons_old 001C  
                    _buttons_new 001B                  ___lwdiv@counter 0041  
                       __ptext10 112A                         __ptext11 069E  
                       __ptext20 1B5A                         __ptext12 1A2E  
                       __ptext21 1B24                         __ptext13 1A8A  
                       __ptext22 1B88                         __ptext14 0BAE  
                       __ptext23 1BEC                         __ptext15 13A6  
                       __ptext24 175E                         __ptext16 1270  
                       __ptext25 1962                         __ptext17 1870  
                       __ptext26 18F2                         __ptext18 1636  
                       __ptext19 1ADE       __size_of_lcd_main_menu_fsm 0310  
                 ?_enable_uart_m 002F           __size_of_LCDLoadCostum 0146  
                  __size_of_main 0372                         _init_pic 1B24  
                       _new_data 0027                    _uart_rx_block 000A  
                  _uart_tx_block 0071                         _scrs_cnt 002A  
         __end_of_lcd_connection 112A            __CFG_CPUDIV$OSC1_PLL2 000000  
                     _INTCONbits 000FF2                         intlevel2 0000  
   __size_of_lcd_sub_menu_tetten 0006                   LCDWriteInt@val 0046  
                 LCDWriteInt@str 0096         ??_lcd_sub_menu_metronoom 009F  
        __end_of_lcd_screensaver 0F96          __size_of_SerialTransmit 0054  
                ?_lcd_connection 002F                    _LCDLoadCostum 112A  
                ??_enable_uart_m 003D               __CFG_FOSC$HSPLL_HS 000000  
                   _sub_menu_lcd 002C          __size_of_LCDWriteString 00F6  
       __end_of_lcd_sub_menu_lcd 0DCC  
