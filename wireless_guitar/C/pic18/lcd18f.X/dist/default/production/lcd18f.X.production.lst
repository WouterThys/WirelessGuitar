

Microchip Technology PIC18 LITE Macro Assembler V1.33 build 59893 
                                                                                               Mon Mar  9 16:48:00 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	18F2550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     8                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    37                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    38                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    39                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    40  0000                     
    41                           	psect	idataCOMRAM
    42  0014C4                     __pidataCOMRAM:
    43                           	opt stack 0
    44                           
    45                           ;initializer for lcd_start_up@F5019
    46  0014C4  57                 	db	87
    47  0014C5  61                 	db	97
    48  0014C6  6C                 	db	108
    49  0014C7  64                 	db	100
    50  0014C8  6F                 	db	111
    51  0014C9  00                 	db	0
    52                           
    53                           	psect	idataBANK0
    54  0014A8                     __pidataBANK0:
    55                           	opt stack 0
    56                           
    57                           ;initializer for ___HexVal
    58  0014A8  30                 	db	48
    59  0014A9  31                 	db	49
    60  0014AA  32                 	db	50
    61  0014AB  33                 	db	51
    62  0014AC  34                 	db	52
    63  0014AD  35                 	db	53
    64  0014AE  36                 	db	54
    65  0014AF  37                 	db	55
    66  0014B0  38                 	db	56
    67  0014B1  39                 	db	57
    68  0014B2  41                 	db	65
    69  0014B3  42                 	db	66
    70  0014B4  43                 	db	67
    71  0014B5  44                 	db	68
    72  0014B6  45                 	db	69
    73  0014B7  46                 	db	70
    74                           
    75                           	psect	mediumconst
    76  007D8A                     __pmediumconst:
    77                           	opt stack 0
    78  007D8A  00                 	db	0
    79  007D8B                     ___costum0:
    80                           	opt stack 0
    81  007D8B  00                 	db	0
    82  007D8C  02                 	db	2
    83  007D8D  04                 	db	4
    84  007D8E  04                 	db	4
    85  007D8F  04                 	db	4
    86  007D90  08                 	db	8
    87  007D91  08                 	db	8
    88  007D92  08                 	db	8
    89  007D93  00                 	db	0
    90  007D94  00                 	db	0
    91  007D95  00                 	db	0
    92  007D96  00                 	db	0
    93  007D97  00                 	db	0
    94  007D98  00                 	db	0
    95  007D99  00                 	db	0
    96  007D9A  00                 	db	0
    97  007D9B  00                 	db	0
    98  007D9C  08                 	db	8
    99  007D9D  04                 	db	4
   100  007D9E  04                 	db	4
   101  007D9F  00                 	db	0
   102  007DA0  02                 	db	2
   103  007DA1  02                 	db	2
   104  007DA2  02                 	db	2
   105  007DA3  08                 	db	8
   106  007DA4  08                 	db	8
   107  007DA5  08                 	db	8
   108  007DA6  04                 	db	4
   109  007DA7  04                 	db	4
   110  007DA8  02                 	db	2
   111  007DA9  01                 	db	1
   112  007DAA  00                 	db	0
   113  007DAB  0E                 	db	14
   114  007DAC  0A                 	db	10
   115  007DAD  0E                 	db	14
   116  007DAE  00                 	db	0
   117  007DAF  00                 	db	0
   118  007DB0  00                 	db	0
   119  007DB1  00                 	db	0
   120  007DB2  1F                 	db	31
   121  007DB3  02                 	db	2
   122  007DB4  02                 	db	2
   123  007DB5  04                 	db	4
   124  007DB6  04                 	db	4
   125  007DB7  04                 	db	4
   126  007DB8  08                 	db	8
   127  007DB9  10                 	db	16
   128  007DBA  00                 	db	0
   129  007DBB  00                 	db	0
   130  007DBC  00                 	db	0
   131  007DBD  00                 	db	0
   132  007DBE  00                 	db	0
   133  007DBF  00                 	db	0
   134  007DC0  00                 	db	0
   135  007DC1  00                 	db	0
   136  007DC2  00                 	db	0
   137  007DC3  00                 	db	0
   138  007DC4  00                 	db	0
   139  007DC5  00                 	db	0
   140  007DC6  00                 	db	0
   141  007DC7  00                 	db	0
   142  007DC8  00                 	db	0
   143  007DC9  00                 	db	0
   144  007DCA  00                 	db	0
   145  007DCB                     __end_of___costum0:
   146                           	opt stack 0
   147  007DCB                     ___costum1:
   148                           	opt stack 0
   149  007DCB  00                 	db	0
   150  007DCC  02                 	db	2
   151  007DCD  04                 	db	4
   152  007DCE  08                 	db	8
   153  007DCF  08                 	db	8
   154  007DD0  10                 	db	16
   155  007DD1  10                 	db	16
   156  007DD2  10                 	db	16
   157  007DD3  00                 	db	0
   158  007DD4  00                 	db	0
   159  007DD5  00                 	db	0
   160  007DD6  00                 	db	0
   161  007DD7  00                 	db	0
   162  007DD8  00                 	db	0
   163  007DD9  00                 	db	0
   164  007DDA  0E                 	db	14
   165  007DDB  00                 	db	0
   166  007DDC  08                 	db	8
   167  007DDD  04                 	db	4
   168  007DDE  02                 	db	2
   169  007DDF  02                 	db	2
   170  007DE0  01                 	db	1
   171  007DE1  01                 	db	1
   172  007DE2  01                 	db	1
   173  007DE3  10                 	db	16
   174  007DE4  08                 	db	8
   175  007DE5  08                 	db	8
   176  007DE6  04                 	db	4
   177  007DE7  02                 	db	2
   178  007DE8  01                 	db	1
   179  007DE9  00                 	db	0
   180  007DEA  00                 	db	0
   181  007DEB  0A                 	db	10
   182  007DEC  0E                 	db	14
   183  007DED  00                 	db	0
   184  007DEE  00                 	db	0
   185  007DEF  00                 	db	0
   186  007DF0  00                 	db	0
   187  007DF1  1F                 	db	31
   188  007DF2  00                 	db	0
   189  007DF3  01                 	db	1
   190  007DF4  02                 	db	2
   191  007DF5  02                 	db	2
   192  007DF6  04                 	db	4
   193  007DF7  08                 	db	8
   194  007DF8  10                 	db	16
   195  007DF9  00                 	db	0
   196  007DFA  00                 	db	0
   197  007DFB  00                 	db	0
   198  007DFC  00                 	db	0
   199  007DFD  00                 	db	0
   200  007DFE  00                 	db	0
   201  007DFF  00                 	db	0
   202  007E00  00                 	db	0
   203  007E01  00                 	db	0
   204  007E02  00                 	db	0
   205  007E03  00                 	db	0
   206  007E04  00                 	db	0
   207  007E05  00                 	db	0
   208  007E06  00                 	db	0
   209  007E07  00                 	db	0
   210  007E08  00                 	db	0
   211  007E09  00                 	db	0
   212  007E0A  00                 	db	0
   213  007E0B                     __end_of___costum1:
   214                           	opt stack 0
   215  007E0B                     ___costum2:
   216                           	opt stack 0
   217  007E0B  00                 	db	0
   218  007E0C  02                 	db	2
   219  007E0D  04                 	db	4
   220  007E0E  04                 	db	4
   221  007E0F  08                 	db	8
   222  007E10  10                 	db	16
   223  007E11  10                 	db	16
   224  007E12  10                 	db	16
   225  007E13  00                 	db	0
   226  007E14  00                 	db	0
   227  007E15  00                 	db	0
   228  007E16  00                 	db	0
   229  007E17  00                 	db	0
   230  007E18  00                 	db	0
   231  007E19  0E                 	db	14
   232  007E1A  0A                 	db	10
   233  007E1B  00                 	db	0
   234  007E1C  08                 	db	8
   235  007E1D  04                 	db	4
   236  007E1E  04                 	db	4
   237  007E1F  02                 	db	2
   238  007E20  01                 	db	1
   239  007E21  01                 	db	1
   240  007E22  01                 	db	1
   241  007E23  08                 	db	8
   242  007E24  08                 	db	8
   243  007E25  04                 	db	4
   244  007E26  02                 	db	2
   245  007E27  01                 	db	1
   246  007E28  00                 	db	0
   247  007E29  00                 	db	0
   248  007E2A  00                 	db	0
   249  007E2B  0E                 	db	14
   250  007E2C  00                 	db	0
   251  007E2D  00                 	db	0
   252  007E2E  00                 	db	0
   253  007E2F  00                 	db	0
   254  007E30  1F                 	db	31
   255  007E31  00                 	db	0
   256  007E32  00                 	db	0
   257  007E33  02                 	db	2
   258  007E34  02                 	db	2
   259  007E35  04                 	db	4
   260  007E36  08                 	db	8
   261  007E37  10                 	db	16
   262  007E38  00                 	db	0
   263  007E39  00                 	db	0
   264  007E3A  00                 	db	0
   265  007E3B  00                 	db	0
   266  007E3C  00                 	db	0
   267  007E3D  00                 	db	0
   268  007E3E  00                 	db	0
   269  007E3F  00                 	db	0
   270  007E40  00                 	db	0
   271  007E41  00                 	db	0
   272  007E42  00                 	db	0
   273  007E43  00                 	db	0
   274  007E44  00                 	db	0
   275  007E45  00                 	db	0
   276  007E46  00                 	db	0
   277  007E47  00                 	db	0
   278  007E48  00                 	db	0
   279  007E49  00                 	db	0
   280  007E4A  00                 	db	0
   281  007E4B                     __end_of___costum2:
   282                           	opt stack 0
   283  007E4B                     ___costum3:
   284                           	opt stack 0
   285  007E4B  00                 	db	0
   286  007E4C  07                 	db	7
   287  007E4D  0F                 	db	15
   288  007E4E  0C                 	db	12
   289  007E4F  0C                 	db	12
   290  007E50  0C                 	db	12
   291  007E51  0F                 	db	15
   292  007E52  0F                 	db	15
   293  007E53  00                 	db	0
   294  007E54  10                 	db	16
   295  007E55  18                 	db	24
   296  007E56  08                 	db	8
   297  007E57  08                 	db	8
   298  007E58  08                 	db	8
   299  007E59  18                 	db	24
   300  007E5A  10                 	db	16
   301  007E5B  00                 	db	0
   302  007E5C  03                 	db	3
   303  007E5D  07                 	db	7
   304  007E5E  0E                 	db	14
   305  007E5F  0C                 	db	12
   306  007E60  0C                 	db	12
   307  007E61  0C                 	db	12
   308  007E62  0F                 	db	15
   309  007E63  00                 	db	0
   310  007E64  10                 	db	16
   311  007E65  18                 	db	24
   312  007E66  1C                 	db	28
   313  007E67  0C                 	db	12
   314  007E68  0C                 	db	12
   315  007E69  1C                 	db	28
   316  007E6A  0C                 	db	12
   317  007E6B  0C                 	db	12
   318  007E6C  0C                 	db	12
   319  007E6D  0C                 	db	12
   320  007E6E  0C                 	db	12
   321  007E6F  0C                 	db	12
   322  007E70  0C                 	db	12
   323  007E71  1E                 	db	30
   324  007E72  00                 	db	0
   325  007E73  0A                 	db	10
   326  007E74  04                 	db	4
   327  007E75  04                 	db	4
   328  007E76  0E                 	db	14
   329  007E77  0E                 	db	14
   330  007E78  0E                 	db	14
   331  007E79  0E                 	db	14
   332  007E7A  00                 	db	0
   333  007E7B  0C                 	db	12
   334  007E7C  0C                 	db	12
   335  007E7D  0C                 	db	12
   336  007E7E  0C                 	db	12
   337  007E7F  0C                 	db	12
   338  007E80  0C                 	db	12
   339  007E81  1E                 	db	30
   340  007E82  00                 	db	0
   341  007E83  0C                 	db	12
   342  007E84  0C                 	db	12
   343  007E85  0C                 	db	12
   344  007E86  0C                 	db	12
   345  007E87  0C                 	db	12
   346  007E88  0C                 	db	12
   347  007E89  1E                 	db	30
   348  007E8A  00                 	db	0
   349  007E8B                     __end_of___costum3:
   350                           	opt stack 0
   351  007E8B                     ___costum4:
   352                           	opt stack 0
   353  007E8B  00                 	db	0
   354  007E8C  0A                 	db	10
   355  007E8D  04                 	db	4
   356  007E8E  04                 	db	4
   357  007E8F  07                 	db	7
   358  007E90  01                 	db	1
   359  007E91  01                 	db	1
   360  007E92  01                 	db	1
   361  007E93  00                 	db	0
   362  007E94  00                 	db	0
   363  007E95  00                 	db	0
   364  007E96  00                 	db	0
   365  007E97  1E                 	db	30
   366  007E98  1E                 	db	30
   367  007E99  1E                 	db	30
   368  007E9A  1E                 	db	30
   369  007E9B  00                 	db	0
   370  007E9C  03                 	db	3
   371  007E9D  07                 	db	7
   372  007E9E  0E                 	db	14
   373  007E9F  0C                 	db	12
   374  007EA0  0C                 	db	12
   375  007EA1  0C                 	db	12
   376  007EA2  0F                 	db	15
   377  007EA3  00                 	db	0
   378  007EA4  10                 	db	16
   379  007EA5  18                 	db	24
   380  007EA6  1C                 	db	28
   381  007EA7  0C                 	db	12
   382  007EA8  0C                 	db	12
   383  007EA9  1C                 	db	28
   384  007EAA  0C                 	db	12
   385  007EAB  01                 	db	1
   386  007EAC  01                 	db	1
   387  007EAD  01                 	db	1
   388  007EAE  01                 	db	1
   389  007EAF  00                 	db	0
   390  007EB0  00                 	db	0
   391  007EB1  00                 	db	0
   392  007EB2  00                 	db	0
   393  007EB3  1E                 	db	30
   394  007EB4  1E                 	db	30
   395  007EB5  1E                 	db	30
   396  007EB6  1E                 	db	30
   397  007EB7  00                 	db	0
   398  007EB8  00                 	db	0
   399  007EB9  00                 	db	0
   400  007EBA  00                 	db	0
   401  007EBB  0C                 	db	12
   402  007EBC  0C                 	db	12
   403  007EBD  0C                 	db	12
   404  007EBE  0C                 	db	12
   405  007EBF  0C                 	db	12
   406  007EC0  0C                 	db	12
   407  007EC1  1E                 	db	30
   408  007EC2  00                 	db	0
   409  007EC3  0C                 	db	12
   410  007EC4  0C                 	db	12
   411  007EC5  0C                 	db	12
   412  007EC6  0C                 	db	12
   413  007EC7  0C                 	db	12
   414  007EC8  0C                 	db	12
   415  007EC9  1E                 	db	30
   416  007ECA  00                 	db	0
   417  007ECB                     __end_of___costum4:
   418                           	opt stack 0
   419  007ECB                     ___brght:
   420                           	opt stack 0
   421  007ECB  01                 	db	1
   422  007ECC  02                 	db	2
   423  007ECD  04                 	db	4
   424  007ECE  03                 	db	3
   425  007ECF  05                 	db	5
   426  007ED0  06                 	db	6
   427  007ED1  08                 	db	8
   428  007ED2  07                 	db	7
   429  007ED3  09                 	db	9
   430  007ED4  0A                 	db	10
   431  007ED5  0C                 	db	12
   432  007ED6  0B                 	db	11
   433  007ED7  0D                 	db	13
   434  007ED8  0E                 	db	14
   435  007ED9  0F                 	db	15
   436  007EDA                     __end_of___brght:
   437                           	opt stack 0
   438  0000                     _ADCON1bits	set	4033
   439  0000                     _BAUDCONbits	set	4024
   440  0000                     _INTCONbits	set	4082
   441  0000                     _PIE1bits	set	3997
   442  0000                     _PIR1bits	set	3998
   443  0000                     _PORTA	set	3968
   444  0000                     _PORTAbits	set	3968
   445  0000                     _PORTB	set	3969
   446  0000                     _PORTBbits	set	3969
   447  0000                     _PORTCbits	set	3970
   448  0000                     _PR2	set	4043
   449  0000                     _RCREG	set	4014
   450  0000                     _RCSTAbits	set	4011
   451  0000                     _SPBRG	set	4015
   452  0000                     _T0CONbits	set	4053
   453  0000                     _T2CONbits	set	4042
   454  0000                     _TMR0L	set	4054
   455  0000                     _TRISA	set	3986
   456  0000                     _TRISB	set	3987
   457  0000                     _TRISC	set	3988
   458  0000                     _TRISCbits	set	3988
   459  0000                     _TXREG	set	4013
   460  0000                     _TXSTAbits	set	4012
   461  0000                     _RCIF	set	31989
   462  007EDA                     __stringdata:
   463                           	opt stack 0
   464  007EDA                     STR_4:
   465  007EDA  20                 	db	32
   466  007EDB  20                 	db	32
   467  007EDC  20                 	db	32
   468  007EDD  20                 	db	32
   469  007EDE  20                 	db	32
   470  007EDF  20                 	db	32
   471  007EE0  20                 	db	32
   472  007EE1  20                 	db	32
   473  007EE2  20                 	db	32
   474  007EE3  20                 	db	32
   475  007EE4  20                 	db	32
   476  007EE5  20                 	db	32
   477  007EE6  20                 	db	32
   478  007EE7  20                 	db	32
   479  007EE8  20                 	db	32
   480  007EE9  20                 	db	32
   481  007EEA  00                 	db	0
   482  007EEB                     STR_5:
   483  007EEB  4D                 	db	77	;'M'
   484  007EEC  65                 	db	101	;'e'
   485  007EED  6E                 	db	110	;'n'
   486  007EEE  75                 	db	117	;'u'
   487  007EEF  3A                 	db	58	;':'
   488  007EF0  20                 	db	32
   489  007EF1  20                 	db	32
   490  007EF2  3E                 	db	62	;'>'
   491  007EF3  20                 	db	32
   492  007EF4  20                 	db	32
   493  007EF5  20                 	db	32
   494  007EF6  20                 	db	32
   495  007EF7  20                 	db	32
   496  007EF8  20                 	db	32
   497  007EF9  20                 	db	32
   498  007EFA  20                 	db	32
   499  007EFB  00                 	db	0
   500  007EFC                     STR_2:
   501  007EFC  62                 	db	98	;'b'
   502  007EFD  65                 	db	101	;'e'
   503  007EFE  67                 	db	103	;'g'
   504  007EFF  69                 	db	105	;'i'
   505  007F00  6E                 	db	110	;'n'
   506  007F01  6E                 	db	110	;'n'
   507  007F02  65                 	db	101	;'e'
   508  007F03  6E                 	db	110	;'n'
   509  007F04  20                 	db	32
   510  007F05  20                 	db	32
   511  007F06  20                 	db	32
   512  007F07  20                 	db	32
   513  007F08  20                 	db	32
   514  007F09  20                 	db	32
   515  007F0A  20                 	db	32
   516  007F0B  20                 	db	32
   517  007F0C  00                 	db	0
   518  007F0D                     STR_3:
   519  007F0D  54                 	db	84	;'T'
   520  007F0E  72                 	db	114	;'r'
   521  007F0F  61                 	db	97	;'a'
   522  007F10  6E                 	db	110	;'n'
   523  007F11  73                 	db	115	;'s'
   524  007F12  6D                 	db	109	;'m'
   525  007F13  69                 	db	105	;'i'
   526  007F14  74                 	db	116	;'t'
   527  007F15  20                 	db	32
   528  007F16  20                 	db	32
   529  007F17  20                 	db	32
   530  007F18  20                 	db	32
   531  007F19  20                 	db	32
   532  007F1A  20                 	db	32
   533  007F1B  20                 	db	32
   534  007F1C  20                 	db	32
   535  007F1D  00                 	db	0
   536  007F1E                     STR_27:
   537  007F1E  4D                 	db	77	;'M'
   538  007F1F  20                 	db	32
   539  007F20  4F                 	db	79	;'O'
   540  007F21  20                 	db	32
   541  007F22  50                 	db	80	;'P'
   542  007F23  20                 	db	32
   543  007F24  4B                 	db	75	;'K'
   544  007F25  20                 	db	32
   545  007F26  45                 	db	69	;'E'
   546  007F27  20                 	db	32
   547  007F28  20                 	db	32
   548  007F29  20                 	db	32
   549  007F2A  20                 	db	32
   550  007F2B  20                 	db	32
   551  007F2C  20                 	db	32
   552  007F2D  20                 	db	32
   553  007F2E  00                 	db	0
   554  007F2F                     STR_25:
   555  007F2F  43                 	db	67	;'C'
   556  007F30  20                 	db	32
   557  007F31  4C                 	db	76	;'L'
   558  007F32  20                 	db	32
   559  007F33  49                 	db	73	;'I'
   560  007F34  20                 	db	32
   561  007F35  43                 	db	67	;'C'
   562  007F36  20                 	db	32
   563  007F37  4B                 	db	75	;'K'
   564  007F38  20                 	db	32
   565  007F39  20                 	db	32
   566  007F3A  20                 	db	32
   567  007F3B  20                 	db	32
   568  007F3C  20                 	db	32
   569  007F3D  20                 	db	32
   570  007F3E  20                 	db	32
   571  007F3F  00                 	db	0
   572  007F40                     STR_21:
   573  007F40  52                 	db	82	;'R'
   574  007F41  20                 	db	32
   575  007F42  45                 	db	69	;'E'
   576  007F43  20                 	db	32
   577  007F44  53                 	db	83	;'S'
   578  007F45  20                 	db	32
   579  007F46  45                 	db	69	;'E'
   580  007F47  20                 	db	32
   581  007F48  54                 	db	84	;'T'
   582  007F49  20                 	db	32
   583  007F4A  20                 	db	32
   584  007F4B  20                 	db	32
   585  007F4C  20                 	db	32
   586  007F4D  20                 	db	32
   587  007F4E  20                 	db	32
   588  007F4F  20                 	db	32
   589  007F50  00                 	db	0
   590  007F51                     STR_29:
   591  007F51  42                 	db	66	;'B'
   592  007F52  52                 	db	82	;'R'
   593  007F53  49                 	db	73	;'I'
   594  007F54  47                 	db	71	;'G'
   595  007F55  48                 	db	72	;'H'
   596  007F56  54                 	db	84	;'T'
   597  007F57  4E                 	db	78	;'N'
   598  007F58  45                 	db	69	;'E'
   599  007F59  53                 	db	83	;'S'
   600  007F5A  53                 	db	83	;'S'
   601  007F5B  20                 	db	32
   602  007F5C  20                 	db	32
   603  007F5D  20                 	db	32
   604  007F5E  20                 	db	32
   605  007F5F  20                 	db	32
   606  007F60  20                 	db	32
   607  007F61  00                 	db	0
   608  007F62                     STR_23:
   609  007F62  53                 	db	83	;'S'
   610  007F63  20                 	db	32
   611  007F64  54                 	db	84	;'T'
   612  007F65  20                 	db	32
   613  007F66  45                 	db	69	;'E'
   614  007F67  20                 	db	32
   615  007F68  4D                 	db	77	;'M'
   616  007F69  20                 	db	32
   617  007F6A  4D                 	db	77	;'M'
   618  007F6B  20                 	db	32
   619  007F6C  45                 	db	69	;'E'
   620  007F6D  20                 	db	32
   621  007F6E  4E                 	db	78	;'N'
   622  007F6F  20                 	db	32
   623  007F70  20                 	db	32
   624  007F71  20                 	db	32
   625  007F72  00                 	db	0
   626  007F73                     STR_1:
   627  007F73  44                 	db	68	;'D'
   628  007F74  72                 	db	114	;'r'
   629  007F75  75                 	db	117	;'u'
   630  007F76  6B                 	db	107	;'k'
   631  007F77  20                 	db	32
   632  007F78  27                 	db	39
   633  007F79  4F                 	db	79	;'O'
   634  007F7A  4B                 	db	75	;'K'
   635  007F7B  27                 	db	39
   636  007F7C  20                 	db	32
   637  007F7D  6F                 	db	111	;'o'
   638  007F7E  6D                 	db	109	;'m'
   639  007F7F  20                 	db	32
   640  007F80  74                 	db	116	;'t'
   641  007F81  65                 	db	101	;'e'
   642  007F82  20                 	db	32
   643  007F83  00                 	db	0
   644  007F84                     STR_39:
   645  007F84  43                 	db	67	;'C'
   646  007F85  6F                 	db	111	;'o'
   647  007F86  6E                 	db	110	;'n'
   648  007F87  6E                 	db	110	;'n'
   649  007F88  65                 	db	101	;'e'
   650  007F89  63                 	db	99	;'c'
   651  007F8A  74                 	db	116	;'t'
   652  007F8B  69                 	db	105	;'i'
   653  007F8C  6E                 	db	110	;'n'
   654  007F8D  67                 	db	103	;'g'
   655  007F8E  00                 	db	0
   656  007F8F                     STR_20:
   657  007F8F  73                 	db	115	;'s'
   658  007F90  74                 	db	116	;'t'
   659  007F91  65                 	db	101	;'e'
   660  007F92  6C                 	db	108	;'l'
   661  007F93  6C                 	db	108	;'l'
   662  007F94  69                 	db	105	;'i'
   663  007F95  6E                 	db	110	;'n'
   664  007F96  67                 	db	103	;'g'
   665  007F97  20                 	db	32
   666  007F98  00                 	db	0
   667  007F99                     STR_19:
   668  007F99  4C                 	db	76	;'L'
   669  007F9A  43                 	db	67	;'C'
   670  007F9B  44                 	db	68	;'D'
   671  007F9C  20                 	db	32
   672  007F9D  69                 	db	105	;'i'
   673  007F9E  6E                 	db	110	;'n'
   674  007F9F  73                 	db	115	;'s'
   675  007FA0  2E                 	db	46
   676  007FA1  2E                 	db	46
   677  007FA2  00                 	db	0
   678  007FA3                     STR_14:
   679  007FA3  4D                 	db	77	;'M'
   680  007FA4  6F                 	db	111	;'o'
   681  007FA5  70                 	db	112	;'p'
   682  007FA6  6A                 	db	106	;'j'
   683  007FA7  65                 	db	101	;'e'
   684  007FA8  20                 	db	32
   685  007FA9  20                 	db	32
   686  007FAA  20                 	db	32
   687  007FAB  00                 	db	0
   688  007FAC                     STR_12:
   689  007FAC  43                 	db	67	;'C'
   690  007FAD  6C                 	db	108	;'l'
   691  007FAE  69                 	db	105	;'i'
   692  007FAF  63                 	db	99	;'c'
   693  007FB0  6B                 	db	107	;'k'
   694  007FB1  20                 	db	32
   695  007FB2  20                 	db	32
   696  007FB3  20                 	db	32
   697  007FB4  00                 	db	0
   698  007FB5                     STR_8:
   699  007FB5  52                 	db	82	;'R'
   700  007FB6  65                 	db	101	;'e'
   701  007FB7  73                 	db	115	;'s'
   702  007FB8  65                 	db	101	;'e'
   703  007FB9  74                 	db	116	;'t'
   704  007FBA  20                 	db	32
   705  007FBB  20                 	db	32
   706  007FBC  20                 	db	32
   707  007FBD  00                 	db	0
   708  007FBE                     STR_16:
   709  007FBE  54                 	db	84	;'T'
   710  007FBF  65                 	db	101	;'e'
   711  007FC0  74                 	db	116	;'t'
   712  007FC1  74                 	db	116	;'t'
   713  007FC2  65                 	db	101	;'e'
   714  007FC3  6E                 	db	110	;'n'
   715  007FC4  20                 	db	32
   716  007FC5  20                 	db	32
   717  007FC6  00                 	db	0
   718  007FC7                     STR_7:
   719  007FC7  2D                 	db	45
   720  007FC8  6B                 	db	107	;'k'
   721  007FC9  69                 	db	105	;'i'
   722  007FCA  65                 	db	101	;'e'
   723  007FCB  73                 	db	115	;'s'
   724  007FCC  2D                 	db	45
   725  007FCD  3C                 	db	60	;'<'
   726  007FCE  20                 	db	32
   727  007FCF  00                 	db	0
   728  007FD0                     STR_10:
   729  007FD0  53                 	db	83	;'S'
   730  007FD1  74                 	db	116	;'t'
   731  007FD2  65                 	db	101	;'e'
   732  007FD3  6D                 	db	109	;'m'
   733  007FD4  6D                 	db	109	;'m'
   734  007FD5  65                 	db	101	;'e'
   735  007FD6  6E                 	db	110	;'n'
   736  007FD7  20                 	db	32
   737  007FD8  00                 	db	0
   738  007FD9                     STR_18:
   739  007FD9  42                 	db	66	;'B'
   740  007FDA  72                 	db	114	;'r'
   741  007FDB  69                 	db	105	;'i'
   742  007FDC  67                 	db	103	;'g'
   743  007FDD  68                 	db	104	;'h'
   744  007FDE  74                 	db	116	;'t'
   745  007FDF  2E                 	db	46
   746  007FE0  2E                 	db	46
   747  007FE1  00                 	db	0
   748  007FE2                     STR_30:
   749  007FE2  25                 	db	37
   750  007FE3  30                 	db	48	;'0'
   751  007FE4  00                 	db	0
   752  007FE5                     STR_31:
   753  007FE5  25                 	db	37
   754  007FE6  31                 	db	49	;'1'
   755  007FE7  00                 	db	0
   756  007FE8                     STR_34:
   757  007FE8  25                 	db	37
   758  007FE9  32                 	db	50	;'2'
   759  007FEA  00                 	db	0
   760  007FEB                     STR_35:
   761  007FEB  25                 	db	37
   762  007FEC  33                 	db	51	;'3'
   763  007FED  00                 	db	0
   764  007FEE                     STR_32:
   765  007FEE  25                 	db	37
   766  007FEF  34                 	db	52	;'4'
   767  007FF0  00                 	db	0
   768  007FF1                     STR_33:
   769  007FF1  25                 	db	37
   770  007FF2  35                 	db	53	;'5'
   771  007FF3  00                 	db	0
   772  007FF4                     STR_36:
   773  007FF4  25                 	db	37
   774  007FF5  36                 	db	54	;'6'
   775  007FF6  00                 	db	0
   776  007FF7                     STR_37:
   777  007FF7  25                 	db	37
   778  007FF8  37                 	db	55	;'7'
   779  007FF9  00                 	db	0
   780  007FFA                     STR_41:
   781  007FFA  7E                 	db	126
   782  007FFB  00                 	db	0
   783  007FFC                     STR_42:
   784  007FFC  7F                 	db	127
   785  007FFD  00                 	db	0
   786  007FFE                     __end_of__stringdata:
   787                           	opt stack 0
   788                           
   789                           ; #config settings
   790  007FFE  00                 	db	0	; dummy byte at the end
   791  0000                     
   792                           	psect	nvCOMRAM
   793  000051                     __pnvCOMRAM:
   794                           	opt stack 0
   795  000051                     _brightness:
   796                           	opt stack 0
   797  000051                     	ds	1
   798                           
   799                           	psect	cinit
   800  001336                     __pcinit:
   801                           	opt stack 0
   802  001336                     start_initialization:
   803                           	opt stack 0
   804  001336                     __initialization:
   805                           	opt stack 0
   806                           
   807                           ; Clear objects allocated to COMRAM (48 bytes)
   808  001336  EE00  F001         	lfsr	0,__pbssCOMRAM
   809  00133A  0E30               	movlw	48
   810  00133C                     clear_0:
   811  00133C  6AEE               	clrf	postinc0,c
   812  00133E  06E8               	decf	wreg,f,c
   813  001340  E1FD               	bnz	clear_0
   814                           
   815                           ; Initialize objects allocated to BANK0 (16 bytes)
   816                           ; load TBLPTR registers with __pidataBANK0
   817  001342  0EA8               	movlw	low __pidataBANK0
   818  001344  6EF6               	movwf	tblptrl,c
   819  001346  0E14               	movlw	high __pidataBANK0
   820  001348  6EF7               	movwf	tblptrh,c
   821  00134A  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   822  00134C  6EF8               	movwf	tblptru,c
   823  00134E  EE00  F060         	lfsr	0,__pdataBANK0
   824  001352  EE10 F010          	lfsr	1,16
   825  001356                     copy_data0:
   826  001356  0009               	tblrd		*+
   827  001358  CFF5 FFEE          	movff	tablat,postinc0
   828  00135C  50E5               	movf	postdec1,w,c
   829  00135E  50E1               	movf	fsr1l,w,c
   830  001360  E1FA               	bnz	copy_data0
   831                           
   832                           ; Initialize objects allocated to COMRAM (6 bytes)
   833                           ; load TBLPTR registers with __pidataCOMRAM
   834  001362  0EC4               	movlw	low __pidataCOMRAM
   835  001364  6EF6               	movwf	tblptrl,c
   836  001366  0E14               	movlw	high __pidataCOMRAM
   837  001368  6EF7               	movwf	tblptrh,c
   838  00136A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   839  00136C  6EF8               	movwf	tblptru,c
   840  00136E  EE00  F04B         	lfsr	0,__pdataCOMRAM
   841  001372  EE10 F006          	lfsr	1,6
   842  001376                     copy_data1:
   843  001376  0009               	tblrd		*+
   844  001378  CFF5 FFEE          	movff	tablat,postinc0
   845  00137C  50E5               	movf	postdec1,w,c
   846  00137E  50E1               	movf	fsr1l,w,c
   847  001380  E1FA               	bnz	copy_data1
   848  001382                     end_of_initialization:
   849                           	opt stack 0
   850  001382                     __end_of__initialization:
   851                           	opt stack 0
   852  001382  0E00               	movlw	low (__Lmediumconst shr (0+16))
   853  001384  6EF8               	movwf	tblptru,c
   854  001386  0100               	movlb	0
   855  001388  EF0E  F000         	goto	_main	;jump to C main() function
   856                           tblptru	equ	0xFF8
   857                           tblptrh	equ	0xFF7
   858                           tblptrl	equ	0xFF6
   859                           tablat	equ	0xFF5
   860                           postinc0	equ	0xFEE
   861                           wreg	equ	0xFE8
   862                           postdec1	equ	0xFE5
   863                           fsr1l	equ	0xFE1
   864                           
   865                           	psect	bssCOMRAM
   866  000001                     __pbssCOMRAM:
   867                           	opt stack 0
   868  000001                     LCDWriteBin@F4938:
   869                           	opt stack 0
   870  000001                     	ds	8
   871  000009                     _uart_rx_block:
   872                           	opt stack 0
   873  000009                     	ds	8
   874  000011                     LCDWriteInt@F4932:
   875                           	opt stack 0
   876  000011                     	ds	5
   877  000016                     LCDWriteHex@F4943:
   878                           	opt stack 0
   879  000016                     	ds	2
   880  000018                     _buttons_change:
   881                           	opt stack 0
   882  000018                     	ds	1
   883  000019                     _buttons_new:
   884                           	opt stack 0
   885  000019                     	ds	1
   886  00001A                     _buttons_old:
   887                           	opt stack 0
   888  00001A                     	ds	1
   889  00001B                     _first:
   890                           	opt stack 0
   891  00001B                     	ds	1
   892  00001C                     _fsm_new_state:
   893                           	opt stack 0
   894  00001C                     	ds	1
   895  00001D                     _fsm_old_state:
   896                           	opt stack 0
   897  00001D                     	ds	1
   898  00001E                     _i:
   899                           	opt stack 0
   900  00001E                     	ds	1
   901  00001F                     _inputs:
   902                           	opt stack 0
   903  00001F                     	ds	1
   904  000020                     _j:
   905                           	opt stack 0
   906  000020                     	ds	1
   907  000021                     _main_menu:
   908                           	opt stack 0
   909  000021                     	ds	1
   910  000022                     _new_data:
   911                           	opt stack 0
   912  000022                     	ds	1
   913  000023                     _read_data:
   914                           	opt stack 0
   915  000023                     	ds	1
   916  000024                     _scrs:
   917                           	opt stack 0
   918  000024                     	ds	1
   919  000025                     _scrs_cnt:
   920                           	opt stack 0
   921  000025                     	ds	1
   922  000026                     _scrs_speed:
   923                           	opt stack 0
   924  000026                     	ds	1
   925  000027                     _sub_menu:
   926                           	opt stack 0
   927  000027                     	ds	1
   928  000028                     _uart_block_count:
   929                           	opt stack 0
   930  000028                     	ds	1
   931  000029                     _uart_tx_block:
   932                           	opt stack 0
   933  000029                     	ds	8
   934                           tblptru	equ	0xFF8
   935                           tblptrh	equ	0xFF7
   936                           tblptrl	equ	0xFF6
   937                           tablat	equ	0xFF5
   938                           postinc0	equ	0xFEE
   939                           wreg	equ	0xFE8
   940                           postdec1	equ	0xFE5
   941                           fsr1l	equ	0xFE1
   942                           
   943                           	psect	dataCOMRAM
   944  00004B                     __pdataCOMRAM:
   945                           	opt stack 0
   946  00004B                     lcd_start_up@F5019:
   947                           	opt stack 0
   948  00004B                     	ds	6
   949                           tblptru	equ	0xFF8
   950                           tblptrh	equ	0xFF7
   951                           tblptrl	equ	0xFF6
   952                           tablat	equ	0xFF5
   953                           postinc0	equ	0xFEE
   954                           wreg	equ	0xFE8
   955                           postdec1	equ	0xFE5
   956                           fsr1l	equ	0xFE1
   957                           
   958                           	psect	dataBANK0
   959  000060                     __pdataBANK0:
   960                           	opt stack 0
   961  000060                     ___HexVal:
   962                           	opt stack 0
   963  000060                     	ds	16
   964                           tblptru	equ	0xFF8
   965                           tblptrh	equ	0xFF7
   966                           tblptrl	equ	0xFF6
   967                           tablat	equ	0xFF5
   968                           postinc0	equ	0xFEE
   969                           wreg	equ	0xFE8
   970                           postdec1	equ	0xFE5
   971                           fsr1l	equ	0xFE1
   972                           
   973                           	psect	cstackBANK0
   974  000070                     __pcstackBANK0:
   975                           	opt stack 0
   976  000070                     ??_LCDWriteInt:
   977  000070                     LCDWriteString@cc:
   978                           	opt stack 0
   979                           
   980                           ; 1 bytes @ 0x0
   981  000070                     	ds	1
   982  000071                     ??_lcd_connection:
   983  000071                     lcd_start_up@start:
   984                           	opt stack 0
   985                           
   986                           ; 6 bytes @ 0x1
   987  000071                     	ds	1
   988  000072                     LCDWriteInt@str:
   989                           	opt stack 0
   990                           
   991                           ; 5 bytes @ 0x2
   992  000072                     	ds	5
   993  000077                     lcd_start_up@busy:
   994                           	opt stack 0
   995  000077                     LCDWriteInt@j:
   996                           	opt stack 0
   997                           
   998                           ; 2 bytes @ 0x7
   999  000077                     	ds	1
  1000  000078                     lcd_start_up@x_pos:
  1001                           	opt stack 0
  1002                           
  1003                           ; 1 bytes @ 0x8
  1004  000078                     	ds	1
  1005  000079                     LCDWriteInt@i:
  1006                           	opt stack 0
  1007  000079                     lcd_start_up@st:
  1008                           	opt stack 0
  1009                           
  1010                           ; 2 bytes @ 0x9
  1011  000079                     	ds	2
  1012  00007B                     ??_main:
  1013                           
  1014                           ; 0 bytes @ 0xB
  1015  00007B                     	ds	1
  1016                           tblptru	equ	0xFF8
  1017                           tblptrh	equ	0xFF7
  1018                           tblptrl	equ	0xFF6
  1019                           tablat	equ	0xFF5
  1020                           postinc0	equ	0xFEE
  1021                           wreg	equ	0xFE8
  1022                           postdec1	equ	0xFE5
  1023                           fsr1l	equ	0xFE1
  1024                           
  1025                           	psect	cstackCOMRAM
  1026  000031                     __pcstackCOMRAM:
  1027                           	opt stack 0
  1028  000031                     ??_ISR:
  1029  000031                     
  1030                           ; 1 bytes @ 0x0
  1031  000031                     	ds	14
  1032  00003F                     ??_read_buttons:
  1033  00003F                     ?___awdiv:
  1034                           	opt stack 0
  1035  00003F                     ?___awmod:
  1036                           	opt stack 0
  1037  00003F                     LCDBusyLoop@busy:
  1038                           	opt stack 0
  1039  00003F                     init_timer0@presc:
  1040                           	opt stack 0
  1041  00003F                     __delay_10ms@length:
  1042                           	opt stack 0
  1043  00003F                     init_uart_m@baud:
  1044                           	opt stack 0
  1045  00003F                     uart_write_block@data:
  1046                           	opt stack 0
  1047  00003F                     ___awdiv@dividend:
  1048                           	opt stack 0
  1049  00003F                     ___awmod@dividend:
  1050                           	opt stack 0
  1051                           
  1052                           ; 2 bytes @ 0xE
  1053  00003F                     	ds	1
  1054  000040                     LCDBusyLoop@temp:
  1055                           	opt stack 0
  1056  000040                     init_timer0@presc_val:
  1057                           	opt stack 0
  1058                           
  1059                           ; 1 bytes @ 0xF
  1060  000040                     	ds	1
  1061  000041                     ??__delay_10ms:
  1062  000041                     LCDBusyLoop@status:
  1063                           	opt stack 0
  1064  000041                     init_timer0@eight_bit:
  1065                           	opt stack 0
  1066  000041                     init_uart_m@TX_inv:
  1067                           	opt stack 0
  1068  000041                     uart_write_block@length:
  1069                           	opt stack 0
  1070  000041                     ___awdiv@divisor:
  1071                           	opt stack 0
  1072  000041                     ___awmod@divisor:
  1073                           	opt stack 0
  1074                           
  1075                           ; 2 bytes @ 0x10
  1076  000041                     	ds	1
  1077  000042                     LCDByte@isdata:
  1078                           	opt stack 0
  1079  000042                     init_uart_m@RX_inv:
  1080                           	opt stack 0
  1081                           
  1082                           ; 1 bytes @ 0x11
  1083  000042                     	ds	1
  1084  000043                     ??_LCDByte:
  1085  000043                     ___awdiv@counter:
  1086                           	opt stack 0
  1087  000043                     ___awmod@counter:
  1088                           	opt stack 0
  1089                           
  1090                           ; 1 bytes @ 0x12
  1091  000043                     	ds	1
  1092  000044                     LCDByte@hn:
  1093                           	opt stack 0
  1094  000044                     ___awdiv@sign:
  1095                           	opt stack 0
  1096  000044                     ___awmod@sign:
  1097                           	opt stack 0
  1098                           
  1099                           ; 1 bytes @ 0x13
  1100  000044                     	ds	1
  1101  000045                     LCDByte@ln:
  1102                           	opt stack 0
  1103  000045                     ___awdiv@quotient:
  1104                           	opt stack 0
  1105                           
  1106                           ; 2 bytes @ 0x14
  1107  000045                     	ds	1
  1108  000046                     LCDByte@c:
  1109                           	opt stack 0
  1110                           
  1111                           ; 1 bytes @ 0x15
  1112  000046                     	ds	1
  1113  000047                     LCDByte@temp:
  1114                           	opt stack 0
  1115                           
  1116                           ; 1 bytes @ 0x16
  1117  000047                     	ds	1
  1118  000048                     LCDInit@style:
  1119                           	opt stack 0
  1120  000048                     LCDLoadCostum@select:
  1121                           	opt stack 0
  1122  000048                     LCDGotoXY@y:
  1123                           	opt stack 0
  1124  000048                     LCDWriteString@msg:
  1125                           	opt stack 0
  1126  000048                     LCDWriteInt@val:
  1127                           	opt stack 0
  1128                           
  1129                           ; 2 bytes @ 0x17
  1130  000048                     	ds	1
  1131  000049                     LCDInit@__i:
  1132                           	opt stack 0
  1133  000049                     LCDLoadCostum@__i:
  1134                           	opt stack 0
  1135  000049                     LCDGotoXY@x:
  1136                           	opt stack 0
  1137                           
  1138                           ; 1 bytes @ 0x18
  1139  000049                     	ds	1
  1140  00004A                     ??_LCDWriteString:
  1141  00004A                     LCDWriteInt@field_length:
  1142                           	opt stack 0
  1143                           
  1144                           ; 1 bytes @ 0x19
  1145  00004A                     	ds	1
  1146  00004B                     tblptru	equ	0xFF8
  1147                           tblptrh	equ	0xFF7
  1148                           tblptrl	equ	0xFF6
  1149                           tablat	equ	0xFF5
  1150                           postinc0	equ	0xFEE
  1151                           wreg	equ	0xFE8
  1152                           postdec1	equ	0xFE5
  1153                           fsr1l	equ	0xFE1
  1154                           
  1155                           ; 0 bytes @ 0x1A
  1156 ;;
  1157 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1158 ;;
  1159 ;; *************** function _main *****************
  1160 ;; Defined at:
  1161 ;;		line 73 in file "main_lcd.c"
  1162 ;; Parameters:    Size  Location     Type
  1163 ;;		None
  1164 ;; Auto vars:     Size  Location     Type
  1165 ;;		None
  1166 ;; Return value:  Size  Location     Type
  1167 ;;		None               void
  1168 ;; Registers used:
  1169 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1170 ;; Tracked objects:
  1171 ;;		On entry : 0/0
  1172 ;;		On exit  : 0/0
  1173 ;;		Unchanged: 0/0
  1174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1175 ;;      Params:         0       0       0       0       0       0       0       0       0
  1176 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1177 ;;      Temps:          0       1       0       0       0       0       0       0       0
  1178 ;;      Totals:         0       1       0       0       0       0       0       0       0
  1179 ;;Total ram usage:        1 bytes
  1180 ;; Hardware stack levels required when called:    6
  1181 ;; This function calls:
  1182 ;;		_LCDByte
  1183 ;;		_LCDInit
  1184 ;;		_enable_uart_m
  1185 ;;		_init_pic
  1186 ;;		_lcd_start_up
  1187 ;;		_lcd_update
  1188 ;;		_read_buttons
  1189 ;;		_uart_write_block
  1190 ;; This function is called by:
  1191 ;;		Startup code after reset
  1192 ;; This function uses a non-reentrant model
  1193 ;;
  1194                           
  1195                           	psect	text0
  1196  00001C                     __ptext0:
  1197                           	opt stack 0
  1198  00001C                     _main:
  1199                           	opt stack 25
  1200                           
  1201                           ;main_lcd.c: 74: init_pic();
  1202                           
  1203                           ;incstack = 0
  1204  00001C  ECC6  F009         	call	_init_pic	;wreg free
  1205                           
  1206                           ;main_lcd.c: 75: INTCONbits.TMR0IF = 0;
  1207  000020  94F2               	bcf	intcon,2,c	;volatile
  1208                           
  1209                           ;main_lcd.c: 76: T0CONbits.TMR0ON = 1;
  1210  000022  8ED5               	bsf	4053,7,c	;volatile
  1211                           
  1212                           ;main_lcd.c: 77: INTCONbits.GIEH = 1;
  1213  000024  8EF2               	bsf	intcon,7,c	;volatile
  1214                           
  1215                           ;main_lcd.c: 78: INTCONbits.GIEL = 1;
  1216  000026  8CF2               	bsf	intcon,6,c	;volatile
  1217  000028                     l4185:
  1218                           
  1219                           ;main_lcd.c: 80: if(INTCONbits.TMR0IF) {
  1220  000028  A4F2               	btfss	intcon,2,c	;volatile
  1221  00002A  D7FE               	goto	l4185
  1222                           
  1223                           ;main_lcd.c: 81: if(!(inputs & 0x10))
  1224  00002C  B81F               	btfsc	_inputs,4,c
  1225  00002E  D14F               	goto	l4381
  1226                           
  1227                           ;main_lcd.c: 82: inputs = read_buttons();
  1228  000030  ECF0  F008         	call	_read_buttons	;wreg free
  1229  000034  6E1F               	movwf	_inputs,c
  1230  000036  D14B               	goto	l4381
  1231  000038                     l4191:
  1232                           
  1233                           ;main_lcd.c: 87: {fsm_new_state = lSEARCH_A;lcd_update();};
  1234  000038  0E01               	movlw	1
  1235  00003A  6E1C               	movwf	_fsm_new_state,c
  1236  00003C  EC4F  F002         	call	_lcd_update	;wreg free
  1237                           
  1238                           ;main_lcd.c: 88: break;
  1239  000040  D1FC               	goto	l4451
  1240  000042                     l4195:
  1241                           
  1242                           ;main_lcd.c: 99: {fsm_new_state = lMENU;lcd_update();};
  1243  000042  0E05               	movlw	5
  1244  000044  6E1C               	movwf	_fsm_new_state,c
  1245  000046  EC4F  F002         	call	_lcd_update	;wreg free
  1246                           
  1247                           ;main_lcd.c: 100: break;
  1248  00004A  D1F7               	goto	l4451
  1249  00004C                     l4199:
  1250                           
  1251                           ;main_lcd.c: 102: (inputs = inputs & 0x0F);
  1252  00004C  501F               	movf	_inputs,w,c
  1253  00004E  0B0F               	andlw	15
  1254  000050  6E1F               	movwf	_inputs,c
  1255                           
  1256                           ;main_lcd.c: 103: if ((uart_rx_block[0] == (0xA0 + lSEARCH_A))) {
  1257  000052  5009               	movf	_uart_rx_block,w,c
  1258  000054  0AA1               	xorlw	161
  1259  000056  A4D8               	btfss	status,2,c
  1260  000058  D1F0               	goto	l4451
  1261                           
  1262                           ;main_lcd.c: 104: if((uart_rx_block[1]) == 0x02) {
  1263  00005A  500A               	movf	_uart_rx_block+1,w,c
  1264  00005C  0A02               	xorlw	2
  1265  00005E  A4D8               	btfss	status,2,c
  1266  000060  D1EC               	goto	l4451
  1267                           
  1268                           ;main_lcd.c: 105: {fsm_new_state = lSEARCH_HW;lcd_update();};
  1269  000062  0E02               	movlw	2
  1270  000064  6E1C               	movwf	_fsm_new_state,c
  1271  000066  EC4F  F002         	call	_lcd_update	;wreg free
  1272  00006A  D025               	goto	L1
  1273  00006C                     l4211:
  1274  00006C  501F               	movf	_inputs,w,c
  1275                           
  1276                           ; Switch size 1, requested type "space"
  1277                           ; Number of cases is 5, Range of values is 1 to 16
  1278                           ; switch strategies available:
  1279                           ; Name         Instructions Cycles
  1280                           ; simple_byte           16     9 (average)
  1281                           ;	Chosen strategy is simple_byte
  1282  00006E  0A01               	xorlw	1	; case 1
  1283  000070  B4D8               	btfsc	status,2,c
  1284  000072  D1E3               	goto	l4451
  1285  000074  0A03               	xorlw	3	; case 2
  1286  000076  B4D8               	btfsc	status,2,c
  1287  000078  D1E0               	goto	l4451
  1288  00007A  0A06               	xorlw	6	; case 4
  1289  00007C  B4D8               	btfsc	status,2,c
  1290  00007E  D1DD               	goto	l4451
  1291  000080  0A0C               	xorlw	12	; case 8
  1292  000082  B4D8               	btfsc	status,2,c
  1293  000084  D7DE               	goto	l4195
  1294  000086  0A18               	xorlw	24	; case 16
  1295  000088  B4D8               	btfsc	status,2,c
  1296  00008A  D7E0               	goto	l4199
  1297  00008C  D1D6               	goto	l4451
  1298  00008E                     l4213:
  1299                           
  1300                           ;main_lcd.c: 124: {fsm_new_state = lMENU;lcd_update();};
  1301  00008E  0E05               	movlw	5
  1302  000090  6E1C               	movwf	_fsm_new_state,c
  1303  000092  EC4F  F002         	call	_lcd_update	;wreg free
  1304                           
  1305                           ;main_lcd.c: 125: break;
  1306  000096  D1D1               	goto	l4451
  1307  000098                     l4217:
  1308                           
  1309                           ;main_lcd.c: 127: (inputs = inputs & 0x0F);
  1310  000098  501F               	movf	_inputs,w,c
  1311  00009A  0B0F               	andlw	15
  1312  00009C  6E1F               	movwf	_inputs,c
  1313                           
  1314                           ;main_lcd.c: 128: if ((uart_rx_block[0] == (0xA0 + lSEARCH_HW))) {
  1315  00009E  5009               	movf	_uart_rx_block,w,c
  1316  0000A0  0AA2               	xorlw	162
  1317  0000A2  A4D8               	btfss	status,2,c
  1318  0000A4  D1CA               	goto	l4451
  1319                           
  1320                           ;main_lcd.c: 129: if(uart_rx_block[1] == (0x08 + 0x04 + 0x02 + 0x01)) {
  1321  0000A6  500A               	movf	_uart_rx_block+1,w,c
  1322  0000A8  0A0F               	xorlw	15
  1323  0000AA  A4D8               	btfss	status,2,c
  1324  0000AC  D1C6               	goto	l4451
  1325                           
  1326                           ;main_lcd.c: 130: {fsm_new_state = lWAIT;lcd_update();};
  1327  0000AE  0E03               	movlw	3
  1328  0000B0  6E1C               	movwf	_fsm_new_state,c
  1329  0000B2  EC4F  F002         	call	_lcd_update	;wreg free
  1330  0000B6                     L1:
  1331                           
  1332                           ;main_lcd.c: 131: first = 0;
  1333  0000B6  0E00               	movlw	0
  1334  0000B8  6E1B               	movwf	_first,c
  1335  0000BA  D1BF               	goto	l4451
  1336  0000BC                     l4229:
  1337  0000BC  501F               	movf	_inputs,w,c
  1338                           
  1339                           ; Switch size 1, requested type "space"
  1340                           ; Number of cases is 5, Range of values is 1 to 16
  1341                           ; switch strategies available:
  1342                           ; Name         Instructions Cycles
  1343                           ; simple_byte           16     9 (average)
  1344                           ;	Chosen strategy is simple_byte
  1345  0000BE  0A01               	xorlw	1	; case 1
  1346  0000C0  B4D8               	btfsc	status,2,c
  1347  0000C2  D1BB               	goto	l4451
  1348  0000C4  0A03               	xorlw	3	; case 2
  1349  0000C6  B4D8               	btfsc	status,2,c
  1350  0000C8  D1B8               	goto	l4451
  1351  0000CA  0A06               	xorlw	6	; case 4
  1352  0000CC  B4D8               	btfsc	status,2,c
  1353  0000CE  D1B5               	goto	l4451
  1354  0000D0  0A0C               	xorlw	12	; case 8
  1355  0000D2  B4D8               	btfsc	status,2,c
  1356  0000D4  D7DC               	goto	l4213
  1357  0000D6  0A18               	xorlw	24	; case 16
  1358  0000D8  B4D8               	btfsc	status,2,c
  1359  0000DA  D7DE               	goto	l4217
  1360  0000DC  D1AE               	goto	l4451
  1361  0000DE                     l4231:
  1362                           
  1363                           ;main_lcd.c: 147: {fsm_new_state = lTRANSMIT;lcd_update();};
  1364  0000DE  0E04               	movlw	4
  1365  0000E0  6E1C               	movwf	_fsm_new_state,c
  1366  0000E2  EC4F  F002         	call	_lcd_update	;wreg free
  1367                           
  1368                           ;main_lcd.c: 148: break;
  1369  0000E6  D1A9               	goto	l4451
  1370  0000E8                     l4237:
  1371  0000E8  501F               	movf	_inputs,w,c
  1372                           
  1373                           ; Switch size 1, requested type "space"
  1374                           ; Number of cases is 5, Range of values is 1 to 16
  1375                           ; switch strategies available:
  1376                           ; Name         Instructions Cycles
  1377                           ; simple_byte           16     9 (average)
  1378                           ;	Chosen strategy is simple_byte
  1379  0000EA  0A01               	xorlw	1	; case 1
  1380  0000EC  B4D8               	btfsc	status,2,c
  1381  0000EE  D1A5               	goto	l4451
  1382  0000F0  0A03               	xorlw	3	; case 2
  1383  0000F2  B4D8               	btfsc	status,2,c
  1384  0000F4  D1A2               	goto	l4451
  1385  0000F6  0A06               	xorlw	6	; case 4
  1386  0000F8  B4D8               	btfsc	status,2,c
  1387  0000FA  D7F1               	goto	l4231
  1388  0000FC  0A0C               	xorlw	12	; case 8
  1389  0000FE  B4D8               	btfsc	status,2,c
  1390  000100  D19C               	goto	l4451
  1391  000102  0A18               	xorlw	24	; case 16
  1392  000104  D19A               	goto	l4451
  1393  000106                     l4239:
  1394                           
  1395                           ;main_lcd.c: 167: {fsm_new_state = lMENU;lcd_update();};
  1396  000106  0E05               	movlw	5
  1397  000108  6E1C               	movwf	_fsm_new_state,c
  1398  00010A  EC4F  F002         	call	_lcd_update	;wreg free
  1399                           
  1400                           ;main_lcd.c: 168: break;
  1401  00010E  D195               	goto	l4451
  1402  000110                     l4247:
  1403  000110  501F               	movf	_inputs,w,c
  1404                           
  1405                           ; Switch size 1, requested type "space"
  1406                           ; Number of cases is 5, Range of values is 1 to 16
  1407                           ; switch strategies available:
  1408                           ; Name         Instructions Cycles
  1409                           ; simple_byte           16     9 (average)
  1410                           ;	Chosen strategy is simple_byte
  1411  000112  0A01               	xorlw	1	; case 1
  1412  000114  B4D8               	btfsc	status,2,c
  1413  000116  D191               	goto	l4451
  1414  000118  0A03               	xorlw	3	; case 2
  1415  00011A  B4D8               	btfsc	status,2,c
  1416  00011C  D18E               	goto	l4451
  1417  00011E  0A06               	xorlw	6	; case 4
  1418  000120  B4D8               	btfsc	status,2,c
  1419  000122  D18B               	goto	l4451
  1420  000124  0A0C               	xorlw	12	; case 8
  1421  000126  B4D8               	btfsc	status,2,c
  1422  000128  D7EE               	goto	l4239
  1423  00012A  D025               	goto	L2
  1424  00012C                     l4249:
  1425                           
  1426                           ;main_lcd.c: 180: {fsm_new_state = lMENU_DOWN;lcd_update();};
  1427  00012C  0E07               	movlw	7
  1428  00012E  6E1C               	movwf	_fsm_new_state,c
  1429  000130  EC4F  F002         	call	_lcd_update	;wreg free
  1430                           
  1431                           ;main_lcd.c: 181: break;
  1432  000134  D182               	goto	l4451
  1433  000136                     l4253:
  1434                           
  1435                           ;main_lcd.c: 183: {fsm_new_state = lMENU_UP;lcd_update();};
  1436  000136  0E06               	movlw	6
  1437  000138  6E1C               	movwf	_fsm_new_state,c
  1438  00013A  EC4F  F002         	call	_lcd_update	;wreg free
  1439                           
  1440                           ;main_lcd.c: 184: break;
  1441  00013E  D17D               	goto	l4451
  1442  000140                     l4257:
  1443                           
  1444                           ;main_lcd.c: 186: {fsm_new_state = lMENU_OK;lcd_update();};
  1445  000140  0E08               	movlw	8
  1446  000142  6E1C               	movwf	_fsm_new_state,c
  1447  000144  EC4F  F002         	call	_lcd_update	;wreg free
  1448                           
  1449                           ;main_lcd.c: 187: break;
  1450  000148  D178               	goto	l4451
  1451  00014A                     l4261:
  1452                           
  1453                           ;main_lcd.c: 189: {fsm_new_state = lTRANSMIT;lcd_update();};
  1454  00014A  0E04               	movlw	4
  1455  00014C  6E1C               	movwf	_fsm_new_state,c
  1456  00014E  EC4F  F002         	call	_lcd_update	;wreg free
  1457                           
  1458                           ;main_lcd.c: 190: break;
  1459  000152  D173               	goto	l4451
  1460  000154                     l4265:
  1461                           
  1462                           ;main_lcd.c: 192: (inputs = inputs & 0x0F);
  1463  000154  501F               	movf	_inputs,w,c
  1464  000156  0B0F               	andlw	15
  1465  000158  6E1F               	movwf	_inputs,c
  1466                           
  1467                           ;main_lcd.c: 193: break;
  1468  00015A  D16F               	goto	l4451
  1469  00015C                     l4269:
  1470  00015C  501F               	movf	_inputs,w,c
  1471                           
  1472                           ; Switch size 1, requested type "space"
  1473                           ; Number of cases is 5, Range of values is 1 to 16
  1474                           ; switch strategies available:
  1475                           ; Name         Instructions Cycles
  1476                           ; simple_byte           16     9 (average)
  1477                           ;	Chosen strategy is simple_byte
  1478  00015E  0A01               	xorlw	1	; case 1
  1479  000160  B4D8               	btfsc	status,2,c
  1480  000162  D7E4               	goto	l4249
  1481  000164  0A03               	xorlw	3	; case 2
  1482  000166  B4D8               	btfsc	status,2,c
  1483  000168  D7E6               	goto	l4253
  1484  00016A  0A06               	xorlw	6	; case 4
  1485  00016C  B4D8               	btfsc	status,2,c
  1486  00016E  D7E8               	goto	l4257
  1487  000170  0A0C               	xorlw	12	; case 8
  1488  000172  B4D8               	btfsc	status,2,c
  1489  000174  D7EA               	goto	l4261
  1490  000176                     L2:
  1491  000176  0A18               	xorlw	24	; case 16
  1492  000178  B4D8               	btfsc	status,2,c
  1493  00017A  D7EC               	goto	l4265
  1494  00017C  D15E               	goto	l4451
  1495  00017E                     l4271:
  1496                           
  1497                           ;main_lcd.c: 200: {fsm_new_state = lMENU;lcd_update();};
  1498  00017E  0E05               	movlw	5
  1499  000180  6E1C               	movwf	_fsm_new_state,c
  1500  000182  EC4F  F002         	call	_lcd_update	;wreg free
  1501                           
  1502                           ;main_lcd.c: 201: break;
  1503  000186  D159               	goto	l4451
  1504  000188                     l4275:
  1505                           
  1506                           ;main_lcd.c: 204: {fsm_new_state = lMENU;lcd_update();};
  1507  000188  0E05               	movlw	5
  1508  00018A  6E1C               	movwf	_fsm_new_state,c
  1509  00018C  EC4F  F002         	call	_lcd_update	;wreg free
  1510                           
  1511                           ;main_lcd.c: 205: break;
  1512  000190  D154               	goto	l4451
  1513  000192                     l4279:
  1514                           
  1515                           ;main_lcd.c: 210: {fsm_new_state = lMENU;lcd_update();};
  1516  000192  0E05               	movlw	5
  1517  000194  6E1C               	movwf	_fsm_new_state,c
  1518  000196  EC4F  F002         	call	_lcd_update	;wreg free
  1519                           
  1520                           ;main_lcd.c: 211: break;
  1521  00019A  D14F               	goto	l4451
  1522  00019C                     l4283:
  1523                           
  1524                           ;main_lcd.c: 213: {fsm_new_state = lRESET;lcd_update();};
  1525  00019C  0E09               	movlw	9
  1526  00019E  6E1C               	movwf	_fsm_new_state,c
  1527  0001A0  EC4F  F002         	call	_lcd_update	;wreg free
  1528                           
  1529                           ;main_lcd.c: 214: break;
  1530  0001A4  D14A               	goto	l4451
  1531  0001A6                     l4287:
  1532                           
  1533                           ;main_lcd.c: 216: {fsm_new_state = lSTEMMEN;lcd_update();};
  1534  0001A6  0E0A               	movlw	10
  1535  0001A8  6E1C               	movwf	_fsm_new_state,c
  1536  0001AA  EC4F  F002         	call	_lcd_update	;wreg free
  1537                           
  1538                           ;main_lcd.c: 217: break;
  1539  0001AE  D145               	goto	l4451
  1540  0001B0                     l4291:
  1541                           
  1542                           ;main_lcd.c: 219: {fsm_new_state = lMETRONOOM;lcd_update();};
  1543  0001B0  0E0B               	movlw	11
  1544  0001B2  6E1C               	movwf	_fsm_new_state,c
  1545  0001B4  EC4F  F002         	call	_lcd_update	;wreg free
  1546                           
  1547                           ;main_lcd.c: 220: break;
  1548  0001B8  D140               	goto	l4451
  1549  0001BA                     l4295:
  1550                           
  1551                           ;main_lcd.c: 222: {fsm_new_state = lMOPJE;lcd_update();};
  1552  0001BA  0E0C               	movlw	12
  1553  0001BC  6E1C               	movwf	_fsm_new_state,c
  1554  0001BE  EC4F  F002         	call	_lcd_update	;wreg free
  1555                           
  1556                           ;main_lcd.c: 223: break;
  1557  0001C2  D13B               	goto	l4451
  1558  0001C4                     l4299:
  1559                           
  1560                           ;main_lcd.c: 225: {fsm_new_state = lTETTEN;lcd_update();};
  1561  0001C4  0E0D               	movlw	13
  1562  0001C6  6E1C               	movwf	_fsm_new_state,c
  1563  0001C8  EC4F  F002         	call	_lcd_update	;wreg free
  1564                           
  1565                           ;main_lcd.c: 226: break;
  1566  0001CC  D136               	goto	l4451
  1567  0001CE                     l4303:
  1568                           
  1569                           ;main_lcd.c: 228: {fsm_new_state = lLCD;lcd_update();};
  1570  0001CE  0E0E               	movlw	14
  1571  0001D0  6E1C               	movwf	_fsm_new_state,c
  1572  0001D2  EC4F  F002         	call	_lcd_update	;wreg free
  1573                           
  1574                           ;main_lcd.c: 229: break;
  1575  0001D6  D131               	goto	l4451
  1576  0001D8                     l4309:
  1577  0001D8  5021               	movf	_main_menu,w,c
  1578                           
  1579                           ; Switch size 1, requested type "space"
  1580                           ; Number of cases is 7, Range of values is 0 to 6
  1581                           ; switch strategies available:
  1582                           ; Name         Instructions Cycles
  1583                           ; simple_byte           22    12 (average)
  1584                           ;	Chosen strategy is simple_byte
  1585  0001DA  0A00               	xorlw	0	; case 0
  1586  0001DC  B4D8               	btfsc	status,2,c
  1587  0001DE  D7D9               	goto	l4279
  1588  0001E0  0A01               	xorlw	1	; case 1
  1589  0001E2  B4D8               	btfsc	status,2,c
  1590  0001E4  D7DB               	goto	l4283
  1591  0001E6  0A03               	xorlw	3	; case 2
  1592  0001E8  B4D8               	btfsc	status,2,c
  1593  0001EA  D7DD               	goto	l4287
  1594  0001EC  0A01               	xorlw	1	; case 3
  1595  0001EE  B4D8               	btfsc	status,2,c
  1596  0001F0  D7DF               	goto	l4291
  1597  0001F2  0A07               	xorlw	7	; case 4
  1598  0001F4  B4D8               	btfsc	status,2,c
  1599  0001F6  D7E1               	goto	l4295
  1600  0001F8  0A01               	xorlw	1	; case 5
  1601  0001FA  B4D8               	btfsc	status,2,c
  1602  0001FC  D7E3               	goto	l4299
  1603  0001FE  0A03               	xorlw	3	; case 6
  1604  000200  B4D8               	btfsc	status,2,c
  1605  000202  D7E5               	goto	l4303
  1606  000204  D11A               	goto	l4451
  1607  000206                     l4311:
  1608                           
  1609                           ;main_lcd.c: 236: {fsm_new_state = lINIT;lcd_update();};
  1610  000206  0E00               	movlw	0
  1611  000208  6E1C               	movwf	_fsm_new_state,c
  1612  00020A  EC4F  F002         	call	_lcd_update	;wreg free
  1613                           
  1614                           ;main_lcd.c: 237: break;
  1615  00020E  D115               	goto	l4451
  1616  000210                     l4315:
  1617                           
  1618                           ;main_lcd.c: 240: {fsm_new_state = lMENU;lcd_update();};
  1619  000210  0E05               	movlw	5
  1620  000212  6E1C               	movwf	_fsm_new_state,c
  1621  000214  EC4F  F002         	call	_lcd_update	;wreg free
  1622                           
  1623                           ;main_lcd.c: 241: break;
  1624  000218  D110               	goto	l4451
  1625  00021A                     l4319:
  1626                           
  1627                           ;main_lcd.c: 244: {fsm_new_state = lMENU;lcd_update();};
  1628  00021A  0E05               	movlw	5
  1629  00021C  6E1C               	movwf	_fsm_new_state,c
  1630  00021E  EC4F  F002         	call	_lcd_update	;wreg free
  1631                           
  1632                           ;main_lcd.c: 245: break;
  1633  000222  D10B               	goto	l4451
  1634  000224                     l4323:
  1635                           
  1636                           ;main_lcd.c: 248: {fsm_new_state = lMENU;lcd_update();};
  1637  000224  0E05               	movlw	5
  1638  000226  6E1C               	movwf	_fsm_new_state,c
  1639  000228  EC4F  F002         	call	_lcd_update	;wreg free
  1640                           
  1641                           ;main_lcd.c: 249: break;
  1642  00022C  D106               	goto	l4451
  1643  00022E                     l4327:
  1644                           
  1645                           ;main_lcd.c: 254: {fsm_new_state = lMENU;lcd_update();};
  1646  00022E  0E05               	movlw	5
  1647  000230  6E1C               	movwf	_fsm_new_state,c
  1648  000232  EC4F  F002         	call	_lcd_update	;wreg free
  1649                           
  1650                           ;main_lcd.c: 255: break;
  1651  000236  D101               	goto	l4451
  1652  000238                     l4331:
  1653                           
  1654                           ;main_lcd.c: 257: if(scrs_speed >= 10){
  1655  000238  0E09               	movlw	9
  1656  00023A  6426               	cpfsgt	_scrs_speed,c
  1657  00023C  D0FE               	goto	l4451
  1658                           
  1659                           ;main_lcd.c: 258: scrs_speed -= 10;
  1660  00023E  0E0A               	movlw	10
  1661  000240  5E26               	subwf	_scrs_speed,f,c
  1662  000242  D0FB               	goto	l4451
  1663  000244                     l4335:
  1664                           
  1665                           ;main_lcd.c: 262: if(scrs_speed <= 50){
  1666  000244  0E33               	movlw	51
  1667  000246  5C26               	subwf	_scrs_speed,w,c
  1668  000248  B0D8               	btfsc	status,0,c
  1669  00024A  D0F7               	goto	l4451
  1670                           
  1671                           ;main_lcd.c: 263: scrs_speed += 10;
  1672  00024C  0E0A               	movlw	10
  1673  00024E  2626               	addwf	_scrs_speed,f,c
  1674  000250  D0F4               	goto	l4451
  1675  000252                     l4339:
  1676                           
  1677                           ;main_lcd.c: 267: {fsm_new_state = lTETTEN;lcd_update();};
  1678  000252  0E0D               	movlw	13
  1679  000254  6E1C               	movwf	_fsm_new_state,c
  1680  000256  EC4F  F002         	call	_lcd_update	;wreg free
  1681                           
  1682                           ;main_lcd.c: 268: break;
  1683  00025A  D0EF               	goto	l4451
  1684  00025C                     l4345:
  1685  00025C  501F               	movf	_inputs,w,c
  1686                           
  1687                           ; Switch size 1, requested type "space"
  1688                           ; Number of cases is 3, Range of values is 1 to 8
  1689                           ; switch strategies available:
  1690                           ; Name         Instructions Cycles
  1691                           ; simple_byte           10     6 (average)
  1692                           ;	Chosen strategy is simple_byte
  1693  00025E  0A01               	xorlw	1	; case 1
  1694  000260  B4D8               	btfsc	status,2,c
  1695  000262  D7F0               	goto	l4335
  1696  000264  0A03               	xorlw	3	; case 2
  1697  000266  B4D8               	btfsc	status,2,c
  1698  000268  D7E7               	goto	l4331
  1699  00026A  0A0A               	xorlw	10	; case 8
  1700  00026C  B4D8               	btfsc	status,2,c
  1701  00026E  D7DF               	goto	l4327
  1702  000270  D7F0               	goto	l4339
  1703  000272                     l4347:
  1704                           
  1705                           ;main_lcd.c: 275: {fsm_new_state = lMENU;lcd_update();};
  1706  000272  0E05               	movlw	5
  1707  000274  6E1C               	movwf	_fsm_new_state,c
  1708  000276  EC4F  F002         	call	_lcd_update	;wreg free
  1709                           
  1710                           ;main_lcd.c: 276: break;
  1711  00027A  D0DF               	goto	l4451
  1712  00027C                     l4351:
  1713                           
  1714                           ;main_lcd.c: 278: {fsm_new_state = lMENU;lcd_update();};
  1715  00027C  0E05               	movlw	5
  1716  00027E  6E1C               	movwf	_fsm_new_state,c
  1717  000280  EC4F  F002         	call	_lcd_update	;wreg free
  1718                           
  1719                           ;main_lcd.c: 279: break;
  1720  000284  D0DA               	goto	l4451
  1721  000286                     l4355:
  1722                           
  1723                           ;main_lcd.c: 281: if(brightness < 15){
  1724  000286  0E0F               	movlw	15
  1725  000288  5C51               	subwf	_brightness,w,c
  1726  00028A  A0D8               	btfss	status,0,c
  1727                           
  1728                           ;main_lcd.c: 282: brightness++;
  1729  00028C  2A51               	incf	_brightness,f,c
  1730                           
  1731                           ;main_lcd.c: 283: }
  1732                           ;main_lcd.c: 284: {fsm_new_state = lLCD;lcd_update();};
  1733  00028E  0E0E               	movlw	14
  1734  000290  6E1C               	movwf	_fsm_new_state,c
  1735  000292  EC4F  F002         	call	_lcd_update	;wreg free
  1736                           
  1737                           ;main_lcd.c: 285: break;
  1738  000296  D0D1               	goto	l4451
  1739  000298                     l4363:
  1740                           
  1741                           ;main_lcd.c: 287: if(brightness > 0){
  1742  000298  5051               	movf	_brightness,w,c
  1743  00029A  A4D8               	btfss	status,2,c
  1744                           
  1745                           ;main_lcd.c: 288: brightness--;
  1746  00029C  0651               	decf	_brightness,f,c
  1747                           
  1748                           ;main_lcd.c: 289: }
  1749                           ;main_lcd.c: 290: {fsm_new_state = lLCD;lcd_update();};
  1750  00029E  0E0E               	movlw	14
  1751  0002A0  6E1C               	movwf	_fsm_new_state,c
  1752  0002A2  EC4F  F002         	call	_lcd_update	;wreg free
  1753                           
  1754                           ;main_lcd.c: 291: break;
  1755  0002A6  D0C9               	goto	l4451
  1756  0002A8                     l4371:
  1757                           
  1758                           ;main_lcd.c: 293: {fsm_new_state = lLCD;lcd_update();};
  1759  0002A8  0E0E               	movlw	14
  1760  0002AA  6E1C               	movwf	_fsm_new_state,c
  1761  0002AC  EC4F  F002         	call	_lcd_update	;wreg free
  1762                           
  1763                           ;main_lcd.c: 294: break;
  1764  0002B0  D0C4               	goto	l4451
  1765  0002B2                     l4377:
  1766  0002B2  501F               	movf	_inputs,w,c
  1767                           
  1768                           ; Switch size 1, requested type "space"
  1769                           ; Number of cases is 4, Range of values is 1 to 8
  1770                           ; switch strategies available:
  1771                           ; Name         Instructions Cycles
  1772                           ; simple_byte           13     7 (average)
  1773                           ;	Chosen strategy is simple_byte
  1774  0002B4  0A01               	xorlw	1	; case 1
  1775  0002B6  B4D8               	btfsc	status,2,c
  1776  0002B8  D7EF               	goto	l4363
  1777  0002BA  0A03               	xorlw	3	; case 2
  1778  0002BC  B4D8               	btfsc	status,2,c
  1779  0002BE  D7E3               	goto	l4355
  1780  0002C0  0A06               	xorlw	6	; case 4
  1781  0002C2  B4D8               	btfsc	status,2,c
  1782  0002C4  D7DB               	goto	l4351
  1783  0002C6  0A0C               	xorlw	12	; case 8
  1784  0002C8  B4D8               	btfsc	status,2,c
  1785  0002CA  D7D3               	goto	l4347
  1786  0002CC  D7ED               	goto	l4371
  1787  0002CE                     l4381:
  1788  0002CE  501D               	movf	_fsm_old_state,w,c
  1789                           
  1790                           ; Switch size 1, requested type "space"
  1791                           ; Number of cases is 15, Range of values is 0 to 14
  1792                           ; switch strategies available:
  1793                           ; Name         Instructions Cycles
  1794                           ; simple_byte           46    24 (average)
  1795                           ;	Chosen strategy is simple_byte
  1796  0002D0  0A00               	xorlw	0	; case 0
  1797  0002D2  B4D8               	btfsc	status,2,c
  1798  0002D4  D6B1               	goto	l4191
  1799  0002D6  0A01               	xorlw	1	; case 1
  1800  0002D8  B4D8               	btfsc	status,2,c
  1801  0002DA  D6C8               	goto	l4211
  1802  0002DC  0A03               	xorlw	3	; case 2
  1803  0002DE  B4D8               	btfsc	status,2,c
  1804  0002E0  D6ED               	goto	l4229
  1805  0002E2  0A01               	xorlw	1	; case 3
  1806  0002E4  B4D8               	btfsc	status,2,c
  1807  0002E6  D700               	goto	l4237
  1808  0002E8  0A07               	xorlw	7	; case 4
  1809  0002EA  B4D8               	btfsc	status,2,c
  1810  0002EC  D711               	goto	l4247
  1811  0002EE  0A01               	xorlw	1	; case 5
  1812  0002F0  B4D8               	btfsc	status,2,c
  1813  0002F2  D734               	goto	l4269
  1814  0002F4  0A03               	xorlw	3	; case 6
  1815  0002F6  B4D8               	btfsc	status,2,c
  1816  0002F8  D742               	goto	l4271
  1817  0002FA  0A01               	xorlw	1	; case 7
  1818  0002FC  B4D8               	btfsc	status,2,c
  1819  0002FE  D744               	goto	l4275
  1820  000300  0A0F               	xorlw	15	; case 8
  1821  000302  B4D8               	btfsc	status,2,c
  1822  000304  D769               	goto	l4309
  1823  000306  0A01               	xorlw	1	; case 9
  1824  000308  B4D8               	btfsc	status,2,c
  1825  00030A  D77D               	goto	l4311
  1826  00030C  0A03               	xorlw	3	; case 10
  1827  00030E  B4D8               	btfsc	status,2,c
  1828  000310  D77F               	goto	l4315
  1829  000312  0A01               	xorlw	1	; case 11
  1830  000314  B4D8               	btfsc	status,2,c
  1831  000316  D781               	goto	l4319
  1832  000318  0A07               	xorlw	7	; case 12
  1833  00031A  B4D8               	btfsc	status,2,c
  1834  00031C  D783               	goto	l4323
  1835  00031E  0A01               	xorlw	1	; case 13
  1836  000320  B4D8               	btfsc	status,2,c
  1837  000322  D79C               	goto	l4345
  1838  000324  0A03               	xorlw	3	; case 14
  1839  000326  B4D8               	btfsc	status,2,c
  1840  000328  D7C4               	goto	l4377
  1841  00032A  D087               	goto	l4451
  1842  00032C                     l4383:
  1843                           
  1844                           ;main_lcd.c: 307: main_menu = mMENU;
  1845  00032C  0E00               	movlw	0
  1846  00032E  6E21               	movwf	_main_menu,c
  1847                           
  1848                           ;main_lcd.c: 308: scrs_speed = 20;
  1849  000330  0E14               	movlw	20
  1850  000332  6E26               	movwf	_scrs_speed,c
  1851                           
  1852                           ;main_lcd.c: 309: first = 0;
  1853  000334  0E00               	movlw	0
  1854  000336  6E1B               	movwf	_first,c
  1855                           
  1856                           ;main_lcd.c: 310: enable_uart_m();
  1857  000338  EC5C  F00A         	call	_enable_uart_m	;wreg free
  1858                           
  1859                           ;main_lcd.c: 311: uart_block_count = 0;
  1860  00033C  0E00               	movlw	0
  1861  00033E  6E28               	movwf	_uart_block_count,c
  1862                           
  1863                           ;main_lcd.c: 312: LCDInit(0B00000000);
  1864  000340  0E00               	movlw	0
  1865  000342  ECAC  F008         	call	_LCDInit
  1866                           
  1867                           ;main_lcd.c: 313: (LCDByte(0b00000001,0));
  1868  000346  0E00               	movlw	0
  1869  000348  6E42               	movwf	LCDByte@isdata,c
  1870  00034A  0E01               	movlw	1
  1871  00034C  EC67  F009         	call	_LCDByte
  1872                           
  1873                           ;main_lcd.c: 314: { PORTB = (__brght[brightness]<<4);};
  1874  000350  5051               	movf	_brightness,w,c
  1875  000352  0D01               	mullw	1
  1876  000354  0ECB               	movlw	low ___brght
  1877  000356  24F3               	addwf	prodl,w,c
  1878  000358  6EF6               	movwf	tblptrl,c
  1879  00035A  0E7E               	movlw	high ___brght
  1880  00035C  20F4               	addwfc	prodh,w,c
  1881  00035E  6EF7               	movwf	tblptrh,c
  1882  000360                     	if	0	;There are less than 3 active tblptr bytes
  1883  000360                     	endif
  1884  000360  0008               	tblrd		*
  1885  000362  CFF5 F07B          	movff	tablat,??_main
  1886  000366  0100               	movlb	0	; () banked
  1887  000368  397B               	swapf	??_main& (0+255),w,b
  1888  00036A  0BF0               	andlw	240
  1889  00036C  6E81               	movwf	3969,c	;volatile
  1890                           
  1891                           ; BSR set to: 0
  1892                           ;main_lcd.c: 315: (PORTAbits.RA5 = 1);
  1893  00036E  8A80               	bsf	3968,5,c	;volatile
  1894                           
  1895                           ; BSR set to: 0
  1896                           ;main_lcd.c: 316: lcd_start_up();
  1897  000370  ECD1  F007         	call	_lcd_start_up	;wreg free
  1898                           
  1899                           ;main_lcd.c: 318: break;
  1900  000374  D090               	goto	l346
  1901  000376                     l4399:
  1902                           
  1903                           ;main_lcd.c: 321: uart_tx_block[0] = (0x90 + lSEARCH_A);
  1904  000376  0E91               	movlw	145
  1905  000378  6E29               	movwf	_uart_tx_block,c
  1906                           
  1907                           ;main_lcd.c: 322: uart_write_block(uart_tx_block, 8);
  1908  00037A  0E00               	movlw	high _uart_tx_block
  1909  00037C  6E40               	movwf	uart_write_block@data+1,c
  1910  00037E  0E29               	movlw	low _uart_tx_block
  1911  000380  6E3F               	movwf	uart_write_block@data,c
  1912  000382  0E08               	movlw	8
  1913  000384  6E41               	movwf	uart_write_block@length,c
  1914  000386  EC45  F00A         	call	_uart_write_block	;wreg free
  1915                           
  1916                           ;main_lcd.c: 323: lcd_update();
  1917  00038A  EC4F  F002         	call	_lcd_update	;wreg free
  1918                           
  1919                           ;main_lcd.c: 324: break;
  1920  00038E  D083               	goto	l346
  1921  000390                     l348:
  1922                           
  1923                           ;main_lcd.c: 327: if(!first) {
  1924  000390  661B               	tstfsz	_first,c
  1925  000392  D081               	goto	l346
  1926                           
  1927                           ;main_lcd.c: 328: uart_tx_block[0] = (0x90 + lSEARCH_HW);
  1928  000394  0E92               	movlw	146
  1929  000396  6E29               	movwf	_uart_tx_block,c
  1930                           
  1931                           ;main_lcd.c: 329: uart_write_block(uart_tx_block, 8);
  1932  000398  0E00               	movlw	high _uart_tx_block
  1933  00039A  6E40               	movwf	uart_write_block@data+1,c
  1934  00039C  0E29               	movlw	low _uart_tx_block
  1935  00039E  6E3F               	movwf	uart_write_block@data,c
  1936  0003A0  0E08               	movlw	8
  1937  0003A2  6E41               	movwf	uart_write_block@length,c
  1938  0003A4  EC45  F00A         	call	_uart_write_block	;wreg free
  1939                           
  1940                           ;main_lcd.c: 330: lcd_update();
  1941  0003A8  EC4F  F002         	call	_lcd_update	;wreg free
  1942                           
  1943                           ;main_lcd.c: 331: first = 1;
  1944  0003AC  0E01               	movlw	1
  1945  0003AE  6E1B               	movwf	_first,c
  1946  0003B0  D072               	goto	l346
  1947  0003B2                     l4413:
  1948                           
  1949                           ;main_lcd.c: 336: if(first) {
  1950  0003B2  501B               	movf	_first,w,c
  1951  0003B4  B4D8               	btfsc	status,2,c
  1952  0003B6  D00E               	goto	l4423
  1953                           
  1954                           ;main_lcd.c: 337: uart_tx_block[0] = (0x90 + lWAIT);
  1955  0003B8  0E93               	movlw	147
  1956  0003BA  6E29               	movwf	_uart_tx_block,c
  1957                           
  1958                           ;main_lcd.c: 338: uart_write_block(uart_tx_block, 8);
  1959  0003BC  0E00               	movlw	high _uart_tx_block
  1960  0003BE  6E40               	movwf	uart_write_block@data+1,c
  1961  0003C0  0E29               	movlw	low _uart_tx_block
  1962  0003C2  6E3F               	movwf	uart_write_block@data,c
  1963  0003C4  0E08               	movlw	8
  1964  0003C6  6E41               	movwf	uart_write_block@length,c
  1965  0003C8  EC45  F00A         	call	_uart_write_block	;wreg free
  1966                           
  1967                           ;main_lcd.c: 339: lcd_update();
  1968  0003CC  EC4F  F002         	call	_lcd_update	;wreg free
  1969                           
  1970                           ;main_lcd.c: 340: first = 0;
  1971  0003D0  0E00               	movlw	0
  1972  0003D2  6E1B               	movwf	_first,c
  1973  0003D4                     l4423:
  1974                           
  1975                           ;main_lcd.c: 341: }
  1976                           ;main_lcd.c: 342: if(fsm_new_state == lTRANSMIT) {
  1977  0003D4  501C               	movf	_fsm_new_state,w,c
  1978  0003D6  0A04               	xorlw	4
  1979  0003D8  A4D8               	btfss	status,2,c
  1980  0003DA  D05D               	goto	l346
  1981                           
  1982                           ;main_lcd.c: 343: uart_tx_block[0] = (0x90 + lTRANSMIT);
  1983  0003DC  0E94               	movlw	148
  1984  0003DE  6E29               	movwf	_uart_tx_block,c
  1985                           
  1986                           ;main_lcd.c: 344: uart_write_block(uart_tx_block, 8);
  1987  0003E0  0E00               	movlw	high _uart_tx_block
  1988  0003E2  6E40               	movwf	uart_write_block@data+1,c
  1989  0003E4  0E29               	movlw	low _uart_tx_block
  1990  0003E6  6E3F               	movwf	uart_write_block@data,c
  1991  0003E8  0E08               	movlw	8
  1992  0003EA  6E41               	movwf	uart_write_block@length,c
  1993  0003EC  EC45  F00A         	call	_uart_write_block	;wreg free
  1994                           
  1995                           ;main_lcd.c: 345: lcd_update();
  1996  0003F0  EC4F  F002         	call	_lcd_update	;wreg free
  1997  0003F4  D050               	goto	l346
  1998  0003F6                     l4431:
  1999                           
  2000                           ;main_lcd.c: 356: if (main_menu > 0)
  2001  0003F6  5021               	movf	_main_menu,w,c
  2002  0003F8  A4D8               	btfss	status,2,c
  2003                           
  2004                           ;main_lcd.c: 357: main_menu--;
  2005  0003FA  0621               	decf	_main_menu,f,c
  2006                           
  2007                           ;main_lcd.c: 358: lcd_update();
  2008  0003FC  EC4F  F002         	call	_lcd_update	;wreg free
  2009                           
  2010                           ;main_lcd.c: 359: break;
  2011  000400  D04A               	goto	l346
  2012  000402                     l4437:
  2013                           
  2014                           ;main_lcd.c: 362: if (main_menu < 6)
  2015  000402  0E06               	movlw	6
  2016  000404  5C21               	subwf	_main_menu,w,c
  2017  000406  A0D8               	btfss	status,0,c
  2018                           
  2019                           ;main_lcd.c: 363: main_menu++;
  2020  000408  2A21               	incf	_main_menu,f,c
  2021                           
  2022                           ;main_lcd.c: 364: lcd_update();
  2023  00040A  EC4F  F002         	call	_lcd_update	;wreg free
  2024                           
  2025                           ;main_lcd.c: 365: break;
  2026  00040E  D043               	goto	l346
  2027  000410                     l4443:
  2028                           
  2029                           ;main_lcd.c: 383: lcd_update();
  2030  000410  EC4F  F002         	call	_lcd_update	;wreg free
  2031                           
  2032                           ;main_lcd.c: 384: break;
  2033  000414  D040               	goto	l346
  2034  000416                     l4445:
  2035                           
  2036                           ;main_lcd.c: 387: { PORTB = (__brght[brightness]<<4);};
  2037  000416  5051               	movf	_brightness,w,c
  2038  000418  0D01               	mullw	1
  2039  00041A  0ECB               	movlw	low ___brght
  2040  00041C  24F3               	addwf	prodl,w,c
  2041  00041E  6EF6               	movwf	tblptrl,c
  2042  000420  0E7E               	movlw	high ___brght
  2043  000422  20F4               	addwfc	prodh,w,c
  2044  000424  6EF7               	movwf	tblptrh,c
  2045  000426                     	if	0	;There are less than 3 active tblptr bytes
  2046  000426                     	endif
  2047  000426  0008               	tblrd		*
  2048  000428  CFF5 F07B          	movff	tablat,??_main
  2049  00042C  0100               	movlb	0	; () banked
  2050  00042E  397B               	swapf	??_main& (0+255),w,b
  2051  000430  0BF0               	andlw	240
  2052  000432  6E81               	movwf	3969,c	;volatile
  2053                           
  2054                           ; BSR set to: 0
  2055                           ;main_lcd.c: 388: lcd_update();
  2056  000434  EC4F  F002         	call	_lcd_update	;wreg free
  2057                           
  2058                           ;main_lcd.c: 389: break;
  2059  000438  D02E               	goto	l346
  2060  00043A                     l4451:
  2061  00043A  501D               	movf	_fsm_old_state,w,c
  2062                           
  2063                           ; Switch size 1, requested type "space"
  2064                           ; Number of cases is 15, Range of values is 0 to 14
  2065                           ; switch strategies available:
  2066                           ; Name         Instructions Cycles
  2067                           ; simple_byte           46    24 (average)
  2068                           ;	Chosen strategy is simple_byte
  2069  00043C  0A00               	xorlw	0	; case 0
  2070  00043E  B4D8               	btfsc	status,2,c
  2071  000440  D775               	goto	l4383
  2072  000442  0A01               	xorlw	1	; case 1
  2073  000444  B4D8               	btfsc	status,2,c
  2074  000446  D797               	goto	l4399
  2075  000448  0A03               	xorlw	3	; case 2
  2076  00044A  B4D8               	btfsc	status,2,c
  2077  00044C  D7A1               	goto	l348
  2078  00044E  0A01               	xorlw	1	; case 3
  2079  000450  B4D8               	btfsc	status,2,c
  2080  000452  D7AF               	goto	l4413
  2081  000454  0A07               	xorlw	7	; case 4
  2082  000456  B4D8               	btfsc	status,2,c
  2083  000458  D01E               	goto	l346
  2084  00045A  0A01               	xorlw	1	; case 5
  2085  00045C  B4D8               	btfsc	status,2,c
  2086  00045E  D01B               	goto	l346
  2087  000460  0A03               	xorlw	3	; case 6
  2088  000462  B4D8               	btfsc	status,2,c
  2089  000464  D7C8               	goto	l4431
  2090  000466  0A01               	xorlw	1	; case 7
  2091  000468  B4D8               	btfsc	status,2,c
  2092  00046A  D7CB               	goto	l4437
  2093  00046C  0A0F               	xorlw	15	; case 8
  2094  00046E  B4D8               	btfsc	status,2,c
  2095  000470  D012               	goto	l346
  2096  000472  0A01               	xorlw	1	; case 9
  2097  000474  B4D8               	btfsc	status,2,c
  2098  000476  D00F               	goto	l346
  2099  000478  0A03               	xorlw	3	; case 10
  2100  00047A  B4D8               	btfsc	status,2,c
  2101  00047C  D00C               	goto	l346
  2102  00047E  0A01               	xorlw	1	; case 11
  2103  000480  B4D8               	btfsc	status,2,c
  2104  000482  D009               	goto	l346
  2105  000484  0A07               	xorlw	7	; case 12
  2106  000486  B4D8               	btfsc	status,2,c
  2107  000488  D006               	goto	l346
  2108  00048A  0A01               	xorlw	1	; case 13
  2109  00048C  B4D8               	btfsc	status,2,c
  2110  00048E  D7C0               	goto	l4443
  2111  000490  0A03               	xorlw	3	; case 14
  2112  000492  B4D8               	btfsc	status,2,c
  2113  000494  D7C0               	goto	l4445
  2114  000496                     l346:
  2115                           
  2116                           ;main_lcd.c: 394: fsm_old_state = fsm_new_state;
  2117  000496  C01C  F01D         	movff	_fsm_new_state,_fsm_old_state
  2118                           
  2119                           ;main_lcd.c: 395: INTCONbits.TMR0IF = 0;
  2120  00049A  94F2               	bcf	intcon,2,c	;volatile
  2121  00049C  D5C5               	goto	l4185
  2122  00049E                     __end_of_main:
  2123                           	opt stack 0
  2124                           tblptru	equ	0xFF8
  2125                           tblptrh	equ	0xFF7
  2126                           tblptrl	equ	0xFF6
  2127                           tablat	equ	0xFF5
  2128                           prodh	equ	0xFF4
  2129                           prodl	equ	0xFF3
  2130                           intcon	equ	0xFF2
  2131                           postinc0	equ	0xFEE
  2132                           wreg	equ	0xFE8
  2133                           postdec1	equ	0xFE5
  2134                           fsr1l	equ	0xFE1
  2135                           status	equ	0xFD8
  2136                           
  2137 ;; *************** function _uart_write_block *****************
  2138 ;; Defined at:
  2139 ;;		line 109 in file "../common_files/c/uart_m.c"
  2140 ;; Parameters:    Size  Location     Type
  2141 ;;  data            2   14[COMRAM] PTR unsigned char 
  2142 ;;		 -> uart_tx_block(8), 
  2143 ;;  length          1   16[COMRAM] unsigned char 
  2144 ;; Auto vars:     Size  Location     Type
  2145 ;;		None
  2146 ;; Return value:  Size  Location     Type
  2147 ;;		None               void
  2148 ;; Registers used:
  2149 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2150 ;; Tracked objects:
  2151 ;;		On entry : 0/0
  2152 ;;		On exit  : 0/0
  2153 ;;		Unchanged: 0/0
  2154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2155 ;;      Params:         3       0       0       0       0       0       0       0       0
  2156 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2157 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2158 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2159 ;;Total ram usage:        3 bytes
  2160 ;; Hardware stack levels used:    1
  2161 ;; Hardware stack levels required when called:    1
  2162 ;; This function calls:
  2163 ;;		Nothing
  2164 ;; This function is called by:
  2165 ;;		_main
  2166 ;; This function uses a non-reentrant model
  2167 ;;
  2168                           
  2169                           	psect	text1
  2170  00148A                     __ptext1:
  2171                           	opt stack 0
  2172  00148A                     _uart_write_block:
  2173                           	opt stack 29
  2174                           
  2175                           ;uart_m.c: 110: while (length) {
  2176                           
  2177                           ;incstack = 0
  2178  00148A  D00B               	goto	l1875
  2179  00148C                     l1871:
  2180                           
  2181                           ;uart_m.c: 111: TXREG = *data;
  2182  00148C  C03F  FFD9         	movff	uart_write_block@data,fsr2l
  2183  001490  C040  FFDA         	movff	uart_write_block@data+1,fsr2h
  2184  001494  50DF               	movf	indf2,w,c
  2185  001496  6EAD               	movwf	4013,c	;volatile
  2186  001498                     l537:
  2187  001498  A2AC               	btfss	4012,1,c	;volatile
  2188  00149A  D7FE               	goto	l537
  2189                           
  2190                           ;uart_m.c: 113: length--;
  2191  00149C  0641               	decf	uart_write_block@length,f,c
  2192                           
  2193                           ;uart_m.c: 114: data++;
  2194  00149E  4A3F               	infsnz	uart_write_block@data,f,c
  2195  0014A0  2A40               	incf	uart_write_block@data+1,f,c
  2196  0014A2                     l1875:
  2197  0014A2  6641               	tstfsz	uart_write_block@length,c
  2198  0014A4  D7F3               	goto	l1871
  2199  0014A6  0012               	return	
  2200  0014A8                     __end_of_uart_write_block:
  2201                           	opt stack 0
  2202                           tblptru	equ	0xFF8
  2203                           tblptrh	equ	0xFF7
  2204                           tblptrl	equ	0xFF6
  2205                           tablat	equ	0xFF5
  2206                           prodh	equ	0xFF4
  2207                           prodl	equ	0xFF3
  2208                           intcon	equ	0xFF2
  2209                           postinc0	equ	0xFEE
  2210                           wreg	equ	0xFE8
  2211                           postdec1	equ	0xFE5
  2212                           fsr1l	equ	0xFE1
  2213                           indf2	equ	0xFDF
  2214                           fsr2h	equ	0xFDA
  2215                           fsr2l	equ	0xFD9
  2216                           status	equ	0xFD8
  2217                           
  2218 ;; *************** function _read_buttons *****************
  2219 ;; Defined at:
  2220 ;;		line 428 in file "main_lcd.c"
  2221 ;; Parameters:    Size  Location     Type
  2222 ;;		None
  2223 ;; Auto vars:     Size  Location     Type
  2224 ;;		None
  2225 ;; Return value:  Size  Location     Type
  2226 ;;                  1    wreg      unsigned char 
  2227 ;; Registers used:
  2228 ;;		wreg, status,2, status,0
  2229 ;; Tracked objects:
  2230 ;;		On entry : 0/0
  2231 ;;		On exit  : 0/0
  2232 ;;		Unchanged: 0/0
  2233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2234 ;;      Params:         0       0       0       0       0       0       0       0       0
  2235 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2236 ;;      Temps:          5       0       0       0       0       0       0       0       0
  2237 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2238 ;;Total ram usage:        5 bytes
  2239 ;; Hardware stack levels used:    1
  2240 ;; Hardware stack levels required when called:    1
  2241 ;; This function calls:
  2242 ;;		Nothing
  2243 ;; This function is called by:
  2244 ;;		_main
  2245 ;; This function uses a non-reentrant model
  2246 ;;
  2247                           
  2248                           	psect	text2
  2249  0011E0                     __ptext2:
  2250                           	opt stack 0
  2251  0011E0                     _read_buttons:
  2252                           	opt stack 29
  2253                           
  2254                           ;main_lcd.c: 429: buttons_change = 0;
  2255                           
  2256                           ;incstack = 0
  2257  0011E0  0E00               	movlw	0
  2258  0011E2  6E18               	movwf	_buttons_change,c
  2259                           
  2260                           ;main_lcd.c: 430: buttons_new = ((!PORTBbits.RB1<<3) + (!PORTBbits.RB3<<2) + (!PORTBbits
      +                          .RB2<<1) + (!PORTBbits.RB0));
  2261  0011E4  B081               	btfsc	3969,0,c	;volatile
  2262  0011E6  D002               	goto	u720
  2263  0011E8  0E01               	movlw	1
  2264  0011EA  D001               	goto	u726
  2265  0011EC                     u720:
  2266  0011EC  0E00               	movlw	0
  2267  0011EE                     u726:
  2268  0011EE  6E3F               	movwf	??_read_buttons& (0+255),c
  2269  0011F0  B481               	btfsc	3969,2,c	;volatile
  2270  0011F2  D002               	goto	u730
  2271  0011F4  0E01               	movlw	1
  2272  0011F6  D001               	goto	u736
  2273  0011F8                     u730:
  2274  0011F8  0E00               	movlw	0
  2275  0011FA                     u736:
  2276  0011FA  6E40               	movwf	(??_read_buttons+1)& (0+255),c
  2277  0011FC  90D8               	bcf	status,0,c
  2278  0011FE  3440               	rlcf	??_read_buttons+1,w,c
  2279  001200  6E41               	movwf	(??_read_buttons+2)& (0+255),c
  2280  001202  B681               	btfsc	3969,3,c	;volatile
  2281  001204  D002               	goto	u740
  2282  001206  0E01               	movlw	1
  2283  001208  D001               	goto	u746
  2284  00120A                     u740:
  2285  00120A  0E00               	movlw	0
  2286  00120C                     u746:
  2287  00120C  6E42               	movwf	(??_read_buttons+3)& (0+255),c
  2288  00120E  90D8               	bcf	status,0,c
  2289  001210  3642               	rlcf	??_read_buttons+3,f,c
  2290  001212  90D8               	bcf	status,0,c
  2291  001214  3642               	rlcf	??_read_buttons+3,f,c
  2292  001216  B281               	btfsc	3969,1,c	;volatile
  2293  001218  D002               	goto	u750
  2294  00121A  0E01               	movlw	1
  2295  00121C  D001               	goto	u756
  2296  00121E                     u750:
  2297  00121E  0E00               	movlw	0
  2298  001220                     u756:
  2299  001220  6E43               	movwf	(??_read_buttons+4)& (0+255),c
  2300  001222  90D8               	bcf	status,0,c
  2301  001224  3643               	rlcf	??_read_buttons+4,f,c
  2302  001226  90D8               	bcf	status,0,c
  2303  001228  3643               	rlcf	??_read_buttons+4,f,c
  2304  00122A  90D8               	bcf	status,0,c
  2305  00122C  3443               	rlcf	??_read_buttons+4,w,c
  2306  00122E  2442               	addwf	??_read_buttons+3,w,c
  2307  001230  2441               	addwf	??_read_buttons+2,w,c
  2308  001232  243F               	addwf	??_read_buttons,w,c
  2309  001234  6E19               	movwf	_buttons_new,c
  2310                           
  2311                           ;main_lcd.c: 431: if((buttons_new != 0) && (buttons_old == 0) && (buttons_old != buttons
      +                          _new))
  2312  001236  5019               	movf	_buttons_new,w,c
  2313  001238  B4D8               	btfsc	status,2,c
  2314  00123A  D008               	goto	l1709
  2315  00123C  661A               	tstfsz	_buttons_old,c
  2316  00123E  D006               	goto	l1709
  2317  001240  501A               	movf	_buttons_old,w,c
  2318  001242  1819               	xorwf	_buttons_new,w,c
  2319  001244  B4D8               	btfsc	status,2,c
  2320  001246  D002               	goto	l1709
  2321                           
  2322                           ;main_lcd.c: 432: buttons_change = 1;
  2323  001248  0E01               	movlw	1
  2324  00124A  D001               	goto	L3
  2325  00124C                     l1709:
  2326                           
  2327                           ;main_lcd.c: 433: else
  2328                           ;main_lcd.c: 434: buttons_change = 0;
  2329  00124C  0E00               	movlw	0
  2330  00124E                     L3:
  2331  00124E  6E18               	movwf	_buttons_change,c
  2332                           
  2333                           ;main_lcd.c: 436: buttons_old = buttons_new;
  2334  001250  C019  F01A         	movff	_buttons_new,_buttons_old
  2335                           
  2336                           ;main_lcd.c: 438: if(buttons_change) {
  2337  001254  5018               	movf	_buttons_change,w,c
  2338  001256  B4D8               	btfsc	status,2,c
  2339  001258  D002               	goto	l1719
  2340                           
  2341                           ;main_lcd.c: 439: return buttons_new;
  2342  00125A  5019               	movf	_buttons_new,w,c
  2343  00125C  D001               	goto	l380
  2344  00125E                     l1719:
  2345                           
  2346                           ;main_lcd.c: 441: return 0x00;
  2347  00125E  0E00               	movlw	0
  2348  001260                     l380:
  2349  001260  0012               	return	
  2350  001262                     __end_of_read_buttons:
  2351                           	opt stack 0
  2352                           tblptru	equ	0xFF8
  2353                           tblptrh	equ	0xFF7
  2354                           tblptrl	equ	0xFF6
  2355                           tablat	equ	0xFF5
  2356                           prodh	equ	0xFF4
  2357                           prodl	equ	0xFF3
  2358                           intcon	equ	0xFF2
  2359                           postinc0	equ	0xFEE
  2360                           wreg	equ	0xFE8
  2361                           postdec1	equ	0xFE5
  2362                           fsr1l	equ	0xFE1
  2363                           indf2	equ	0xFDF
  2364                           fsr2h	equ	0xFDA
  2365                           fsr2l	equ	0xFD9
  2366                           status	equ	0xFD8
  2367                           
  2368 ;; *************** function _lcd_update *****************
  2369 ;; Defined at:
  2370 ;;		line 455 in file "main_lcd.c"
  2371 ;; Parameters:    Size  Location     Type
  2372 ;;		None
  2373 ;; Auto vars:     Size  Location     Type
  2374 ;;		None
  2375 ;; Return value:  Size  Location     Type
  2376 ;;		None               void
  2377 ;; Registers used:
  2378 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2379 ;; Tracked objects:
  2380 ;;		On entry : 0/0
  2381 ;;		On exit  : 0/0
  2382 ;;		Unchanged: 0/0
  2383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2384 ;;      Params:         0       0       0       0       0       0       0       0       0
  2385 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2386 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2387 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2388 ;;Total ram usage:        0 bytes
  2389 ;; Hardware stack levels used:    1
  2390 ;; Hardware stack levels required when called:    5
  2391 ;; This function calls:
  2392 ;;		_LCDGotoXY
  2393 ;;		_LCDWriteInt
  2394 ;;		_LCDWriteString
  2395 ;;		__delay_10ms
  2396 ;;		_lcd_connection
  2397 ;;		_lcd_screensaver
  2398 ;; This function is called by:
  2399 ;;		_main
  2400 ;; This function uses a non-reentrant model
  2401 ;;
  2402                           
  2403                           	psect	text3
  2404  00049E                     __ptext3:
  2405                           	opt stack 0
  2406  00049E                     _lcd_update:
  2407                           	opt stack 25
  2408                           
  2409                           ;main_lcd.c: 456: switch (fsm_new_state) {
  2410                           
  2411                           ;incstack = 0
  2412  00049E  D198               	goto	l4007
  2413  0004A0                     l3889:
  2414                           
  2415                           ;main_lcd.c: 460: lcd_connection();
  2416  0004A0  ECEF  F004         	call	_lcd_connection	;wreg free
  2417                           
  2418                           ;main_lcd.c: 461: break;
  2419  0004A4  D1C3               	goto	l412
  2420  0004A6                     l3891:
  2421                           
  2422                           ;main_lcd.c: 463: lcd_connection();
  2423  0004A6  ECEF  F004         	call	_lcd_connection	;wreg free
  2424                           
  2425                           ;main_lcd.c: 464: break;
  2426  0004AA  D1C0               	goto	l412
  2427  0004AC                     l3893:
  2428                           
  2429                           ;main_lcd.c: 466: { LCDGotoXY(0,0); LCDWriteString("Druk 'OK' om te ");};
  2430  0004AC  0E00               	movlw	0
  2431  0004AE  6E48               	movwf	LCDGotoXY@y,c
  2432  0004B0  0E00               	movlw	0
  2433  0004B2  ECE8  F009         	call	_LCDGotoXY
  2434  0004B6  0E7F               	movlw	high STR_1
  2435  0004B8  6E49               	movwf	LCDWriteString@msg+1,c
  2436  0004BA  0E73               	movlw	low STR_1
  2437  0004BC  6E48               	movwf	LCDWriteString@msg,c
  2438  0004BE  ECFF  F006         	call	_LCDWriteString	;wreg free
  2439                           
  2440                           ;main_lcd.c: 467: { LCDGotoXY(0,1); LCDWriteString("beginnen        ");};
  2441  0004C2  0E01               	movlw	1
  2442  0004C4  6E48               	movwf	LCDGotoXY@y,c
  2443  0004C6  0E00               	movlw	0
  2444  0004C8  ECE8  F009         	call	_LCDGotoXY
  2445  0004CC  0E7E               	movlw	high STR_2
  2446  0004CE  6E49               	movwf	LCDWriteString@msg+1,c
  2447  0004D0  0EFC               	movlw	low STR_2
  2448  0004D2  6E48               	movwf	LCDWriteString@msg,c
  2449  0004D4  ECFF  F006         	call	_LCDWriteString	;wreg free
  2450                           
  2451                           ;main_lcd.c: 468: break;
  2452  0004D8  D1A9               	goto	l412
  2453  0004DA                     l3899:
  2454                           
  2455                           ;main_lcd.c: 470: { LCDGotoXY(0,0); LCDWriteString("Transmit        ");};
  2456  0004DA  0E00               	movlw	0
  2457  0004DC  6E48               	movwf	LCDGotoXY@y,c
  2458  0004DE  0E00               	movlw	0
  2459  0004E0  ECE8  F009         	call	_LCDGotoXY
  2460  0004E4  0E7F               	movlw	high STR_3
  2461  0004E6  6E49               	movwf	LCDWriteString@msg+1,c
  2462  0004E8  0E0D               	movlw	low STR_3
  2463  0004EA  6E48               	movwf	LCDWriteString@msg,c
  2464  0004EC  ECFF  F006         	call	_LCDWriteString	;wreg free
  2465                           
  2466                           ;main_lcd.c: 471: { LCDGotoXY(0,1); LCDWriteString("                ");};
  2467  0004F0  0E01               	movlw	1
  2468  0004F2  6E48               	movwf	LCDGotoXY@y,c
  2469  0004F4  0E00               	movlw	0
  2470  0004F6  ECE8  F009         	call	_LCDGotoXY
  2471  0004FA  0E7E               	movlw	high STR_4
  2472  0004FC  6E49               	movwf	LCDWriteString@msg+1,c
  2473  0004FE  0EDA               	movlw	low STR_4
  2474  000500  6E48               	movwf	LCDWriteString@msg,c
  2475  000502  ECFF  F006         	call	_LCDWriteString	;wreg free
  2476                           
  2477                           ;main_lcd.c: 472: break;
  2478  000506  D192               	goto	l412
  2479  000508                     l3905:
  2480                           
  2481                           ;main_lcd.c: 474: { LCDGotoXY(0,0); LCDWriteString("Menu:  >        ");};
  2482  000508  0E00               	movlw	0
  2483  00050A  6E48               	movwf	LCDGotoXY@y,c
  2484  00050C  0E00               	movlw	0
  2485  00050E  ECE8  F009         	call	_LCDGotoXY
  2486  000512  0E7E               	movlw	high STR_5
  2487  000514  6E49               	movwf	LCDWriteString@msg+1,c
  2488  000516  0EEB               	movlw	low STR_5
  2489  000518  6E48               	movwf	LCDWriteString@msg,c
  2490  00051A  ECFF  F006         	call	_LCDWriteString	;wreg free
  2491                           
  2492                           ;main_lcd.c: 475: { LCDGotoXY(0,1); LCDWriteString("                ");};
  2493  00051E  0E01               	movlw	1
  2494  000520  6E48               	movwf	LCDGotoXY@y,c
  2495  000522  0E00               	movlw	0
  2496  000524  ECE8  F009         	call	_LCDGotoXY
  2497  000528  0E7E               	movlw	high STR_4
  2498  00052A  6E49               	movwf	LCDWriteString@msg+1,c
  2499  00052C  0EDA               	movlw	low STR_4
  2500  00052E  6E48               	movwf	LCDWriteString@msg,c
  2501  000530  ECFF  F006         	call	_LCDWriteString	;wreg free
  2502                           
  2503                           ;main_lcd.c: 476: switch (main_menu) {
  2504  000534  D0A1               	goto	l3955
  2505  000536                     l3911:
  2506                           
  2507                           ;main_lcd.c: 478: { LCDGotoXY(8,0); LCDWriteString("-kies-< ");};
  2508  000536  0E00               	movlw	0
  2509  000538  6E48               	movwf	LCDGotoXY@y,c
  2510  00053A  0E08               	movlw	8
  2511  00053C  ECE8  F009         	call	_LCDGotoXY
  2512  000540  0E7F               	movlw	high STR_7
  2513  000542  6E49               	movwf	LCDWriteString@msg+1,c
  2514  000544  0EC7               	movlw	low STR_7
  2515  000546  6E48               	movwf	LCDWriteString@msg,c
  2516  000548  ECFF  F006         	call	_LCDWriteString	;wreg free
  2517                           
  2518                           ;main_lcd.c: 479: { LCDGotoXY(8,1); LCDWriteString("Reset   ");};
  2519  00054C  0E01               	movlw	1
  2520  00054E  6E48               	movwf	LCDGotoXY@y,c
  2521  000550  0E08               	movlw	8
  2522  000552  ECE8  F009         	call	_LCDGotoXY
  2523  000556  0E7F               	movlw	high STR_8
  2524  000558  6E49               	movwf	LCDWriteString@msg+1,c
  2525  00055A  0EB5               	movlw	low STR_8
  2526  00055C  6E48               	movwf	LCDWriteString@msg,c
  2527  00055E  ECFF  F006         	call	_LCDWriteString	;wreg free
  2528                           
  2529                           ;main_lcd.c: 480: break;
  2530  000562  D164               	goto	l412
  2531  000564                     l3917:
  2532                           
  2533                           ;main_lcd.c: 482: { LCDGotoXY(8,0); LCDWriteString("Reset   ");};
  2534  000564  0E00               	movlw	0
  2535  000566  6E48               	movwf	LCDGotoXY@y,c
  2536  000568  0E08               	movlw	8
  2537  00056A  ECE8  F009         	call	_LCDGotoXY
  2538  00056E  0E7F               	movlw	high STR_8
  2539  000570  6E49               	movwf	LCDWriteString@msg+1,c
  2540  000572  0EB5               	movlw	low STR_8
  2541  000574  6E48               	movwf	LCDWriteString@msg,c
  2542  000576  ECFF  F006         	call	_LCDWriteString	;wreg free
  2543                           
  2544                           ;main_lcd.c: 483: { LCDGotoXY(8,1); LCDWriteString("Stemmen ");};
  2545  00057A  0E01               	movlw	1
  2546  00057C  6E48               	movwf	LCDGotoXY@y,c
  2547  00057E  0E08               	movlw	8
  2548  000580  ECE8  F009         	call	_LCDGotoXY
  2549  000584  0E7F               	movlw	high STR_10
  2550  000586  6E49               	movwf	LCDWriteString@msg+1,c
  2551  000588  0ED0               	movlw	low STR_10
  2552  00058A  6E48               	movwf	LCDWriteString@msg,c
  2553  00058C  ECFF  F006         	call	_LCDWriteString	;wreg free
  2554                           
  2555                           ;main_lcd.c: 484: break;
  2556  000590  D14D               	goto	l412
  2557  000592                     l3923:
  2558                           
  2559                           ;main_lcd.c: 486: { LCDGotoXY(8,0); LCDWriteString("Stemmen ");};
  2560  000592  0E00               	movlw	0
  2561  000594  6E48               	movwf	LCDGotoXY@y,c
  2562  000596  0E08               	movlw	8
  2563  000598  ECE8  F009         	call	_LCDGotoXY
  2564  00059C  0E7F               	movlw	high STR_10
  2565  00059E  6E49               	movwf	LCDWriteString@msg+1,c
  2566  0005A0  0ED0               	movlw	low STR_10
  2567  0005A2  6E48               	movwf	LCDWriteString@msg,c
  2568  0005A4  ECFF  F006         	call	_LCDWriteString	;wreg free
  2569                           
  2570                           ;main_lcd.c: 487: { LCDGotoXY(8,1); LCDWriteString("Click   ");};
  2571  0005A8  0E01               	movlw	1
  2572  0005AA  6E48               	movwf	LCDGotoXY@y,c
  2573  0005AC  0E08               	movlw	8
  2574  0005AE  ECE8  F009         	call	_LCDGotoXY
  2575  0005B2  0E7F               	movlw	high STR_12
  2576  0005B4  6E49               	movwf	LCDWriteString@msg+1,c
  2577  0005B6  0EAC               	movlw	low STR_12
  2578  0005B8  6E48               	movwf	LCDWriteString@msg,c
  2579  0005BA  ECFF  F006         	call	_LCDWriteString	;wreg free
  2580                           
  2581                           ;main_lcd.c: 488: break;
  2582  0005BE  D136               	goto	l412
  2583  0005C0                     l3929:
  2584                           
  2585                           ;main_lcd.c: 490: { LCDGotoXY(8,0); LCDWriteString("Click   ");};
  2586  0005C0  0E00               	movlw	0
  2587  0005C2  6E48               	movwf	LCDGotoXY@y,c
  2588  0005C4  0E08               	movlw	8
  2589  0005C6  ECE8  F009         	call	_LCDGotoXY
  2590  0005CA  0E7F               	movlw	high STR_12
  2591  0005CC  6E49               	movwf	LCDWriteString@msg+1,c
  2592  0005CE  0EAC               	movlw	low STR_12
  2593  0005D0  6E48               	movwf	LCDWriteString@msg,c
  2594  0005D2  ECFF  F006         	call	_LCDWriteString	;wreg free
  2595                           
  2596                           ;main_lcd.c: 491: { LCDGotoXY(8,1); LCDWriteString("Mopje   ");};
  2597  0005D6  0E01               	movlw	1
  2598  0005D8  6E48               	movwf	LCDGotoXY@y,c
  2599  0005DA  0E08               	movlw	8
  2600  0005DC  ECE8  F009         	call	_LCDGotoXY
  2601  0005E0  0E7F               	movlw	high STR_14
  2602  0005E2  6E49               	movwf	LCDWriteString@msg+1,c
  2603  0005E4  0EA3               	movlw	low STR_14
  2604  0005E6  6E48               	movwf	LCDWriteString@msg,c
  2605  0005E8  ECFF  F006         	call	_LCDWriteString	;wreg free
  2606                           
  2607                           ;main_lcd.c: 492: break;
  2608  0005EC  D11F               	goto	l412
  2609  0005EE                     l3935:
  2610                           
  2611                           ;main_lcd.c: 494: { LCDGotoXY(8,0); LCDWriteString("Mopje   ");};
  2612  0005EE  0E00               	movlw	0
  2613  0005F0  6E48               	movwf	LCDGotoXY@y,c
  2614  0005F2  0E08               	movlw	8
  2615  0005F4  ECE8  F009         	call	_LCDGotoXY
  2616  0005F8  0E7F               	movlw	high STR_14
  2617  0005FA  6E49               	movwf	LCDWriteString@msg+1,c
  2618  0005FC  0EA3               	movlw	low STR_14
  2619  0005FE  6E48               	movwf	LCDWriteString@msg,c
  2620  000600  ECFF  F006         	call	_LCDWriteString	;wreg free
  2621                           
  2622                           ;main_lcd.c: 495: { LCDGotoXY(8,1); LCDWriteString("Tetten  ");};
  2623  000604  0E01               	movlw	1
  2624  000606  6E48               	movwf	LCDGotoXY@y,c
  2625  000608  0E08               	movlw	8
  2626  00060A  ECE8  F009         	call	_LCDGotoXY
  2627  00060E  0E7F               	movlw	high STR_16
  2628  000610  6E49               	movwf	LCDWriteString@msg+1,c
  2629  000612  0EBE               	movlw	low STR_16
  2630  000614  6E48               	movwf	LCDWriteString@msg,c
  2631  000616  ECFF  F006         	call	_LCDWriteString	;wreg free
  2632                           
  2633                           ;main_lcd.c: 496: break;
  2634  00061A  D108               	goto	l412
  2635  00061C                     l3941:
  2636                           
  2637                           ;main_lcd.c: 498: { LCDGotoXY(8,0); LCDWriteString("Tetten  ");};
  2638  00061C  0E00               	movlw	0
  2639  00061E  6E48               	movwf	LCDGotoXY@y,c
  2640  000620  0E08               	movlw	8
  2641  000622  ECE8  F009         	call	_LCDGotoXY
  2642  000626  0E7F               	movlw	high STR_16
  2643  000628  6E49               	movwf	LCDWriteString@msg+1,c
  2644  00062A  0EBE               	movlw	low STR_16
  2645  00062C  6E48               	movwf	LCDWriteString@msg,c
  2646  00062E  ECFF  F006         	call	_LCDWriteString	;wreg free
  2647                           
  2648                           ;main_lcd.c: 499: { LCDGotoXY(8,1); LCDWriteString("Bright..");};
  2649  000632  0E01               	movlw	1
  2650  000634  6E48               	movwf	LCDGotoXY@y,c
  2651  000636  0E08               	movlw	8
  2652  000638  ECE8  F009         	call	_LCDGotoXY
  2653  00063C  0E7F               	movlw	high STR_18
  2654  00063E  6E49               	movwf	LCDWriteString@msg+1,c
  2655  000640  0ED9               	movlw	low STR_18
  2656  000642  6E48               	movwf	LCDWriteString@msg,c
  2657  000644  ECFF  F006         	call	_LCDWriteString	;wreg free
  2658                           
  2659                           ;main_lcd.c: 500: break;
  2660  000648  D0F1               	goto	l412
  2661  00064A                     l3947:
  2662                           
  2663                           ;main_lcd.c: 502: { LCDGotoXY(8,0); LCDWriteString("LCD ins..");};
  2664  00064A  0E00               	movlw	0
  2665  00064C  6E48               	movwf	LCDGotoXY@y,c
  2666  00064E  0E08               	movlw	8
  2667  000650  ECE8  F009         	call	_LCDGotoXY
  2668  000654  0E7F               	movlw	high STR_19
  2669  000656  6E49               	movwf	LCDWriteString@msg+1,c
  2670  000658  0E99               	movlw	low STR_19
  2671  00065A  6E48               	movwf	LCDWriteString@msg,c
  2672  00065C  ECFF  F006         	call	_LCDWriteString	;wreg free
  2673                           
  2674                           ;main_lcd.c: 503: { LCDGotoXY(8,1); LCDWriteString("stelling ");};
  2675  000660  0E01               	movlw	1
  2676  000662  6E48               	movwf	LCDGotoXY@y,c
  2677  000664  0E08               	movlw	8
  2678  000666  ECE8  F009         	call	_LCDGotoXY
  2679  00066A  0E7F               	movlw	high STR_20
  2680  00066C  6E49               	movwf	LCDWriteString@msg+1,c
  2681  00066E  0E8F               	movlw	low STR_20
  2682  000670  6E48               	movwf	LCDWriteString@msg,c
  2683  000672  ECFF  F006         	call	_LCDWriteString	;wreg free
  2684                           
  2685                           ;main_lcd.c: 504: break;
  2686  000676  D0DA               	goto	l412
  2687  000678                     l3955:
  2688  000678  5021               	movf	_main_menu,w,c
  2689                           
  2690                           ; Switch size 1, requested type "space"
  2691                           ; Number of cases is 7, Range of values is 0 to 6
  2692                           ; switch strategies available:
  2693                           ; Name         Instructions Cycles
  2694                           ; simple_byte           22    12 (average)
  2695                           ;	Chosen strategy is simple_byte
  2696  00067A  0A00               	xorlw	0	; case 0
  2697  00067C  B4D8               	btfsc	status,2,c
  2698  00067E  D75B               	goto	l3911
  2699  000680  0A01               	xorlw	1	; case 1
  2700  000682  B4D8               	btfsc	status,2,c
  2701  000684  D76F               	goto	l3917
  2702  000686  0A03               	xorlw	3	; case 2
  2703  000688  B4D8               	btfsc	status,2,c
  2704  00068A  D783               	goto	l3923
  2705  00068C  0A01               	xorlw	1	; case 3
  2706  00068E  B4D8               	btfsc	status,2,c
  2707  000690  D797               	goto	l3929
  2708  000692  0A07               	xorlw	7	; case 4
  2709  000694  B4D8               	btfsc	status,2,c
  2710  000696  D7AB               	goto	l3935
  2711  000698  0A01               	xorlw	1	; case 5
  2712  00069A  B4D8               	btfsc	status,2,c
  2713  00069C  D7BF               	goto	l3941
  2714  00069E  0A03               	xorlw	3	; case 6
  2715  0006A0  B4D8               	btfsc	status,2,c
  2716  0006A2  D7D3               	goto	l3947
  2717  0006A4  D0C3               	goto	l412
  2718  0006A6                     l3957:
  2719                           
  2720                           ;main_lcd.c: 517: { LCDGotoXY(0,0); LCDWriteString("R E S E T       ");};
  2721  0006A6  0E00               	movlw	0
  2722  0006A8  6E48               	movwf	LCDGotoXY@y,c
  2723  0006AA  0E00               	movlw	0
  2724  0006AC  ECE8  F009         	call	_LCDGotoXY
  2725  0006B0  0E7F               	movlw	high STR_21
  2726  0006B2  6E49               	movwf	LCDWriteString@msg+1,c
  2727  0006B4  0E40               	movlw	low STR_21
  2728  0006B6  6E48               	movwf	LCDWriteString@msg,c
  2729  0006B8  ECFF  F006         	call	_LCDWriteString	;wreg free
  2730                           
  2731                           ;main_lcd.c: 518: { LCDGotoXY(0,1); LCDWriteString("                ");};
  2732  0006BC  0E01               	movlw	1
  2733  0006BE  6E48               	movwf	LCDGotoXY@y,c
  2734  0006C0  0E00               	movlw	0
  2735  0006C2  ECE8  F009         	call	_LCDGotoXY
  2736  0006C6  0E7E               	movlw	high STR_4
  2737  0006C8  6E49               	movwf	LCDWriteString@msg+1,c
  2738  0006CA  0EDA               	movlw	low STR_4
  2739  0006CC  6E48               	movwf	LCDWriteString@msg,c
  2740  0006CE  ECFF  F006         	call	_LCDWriteString	;wreg free
  2741                           
  2742                           ;main_lcd.c: 519: _delay_10ms(100);
  2743  0006D2  0E00               	movlw	0
  2744  0006D4  6E40               	movwf	__delay_10ms@length+1,c
  2745  0006D6  0E64               	movlw	100
  2746  0006D8  6E3F               	movwf	__delay_10ms@length,c
  2747  0006DA  EC34  F00A         	call	__delay_10ms	;wreg free
  2748                           
  2749                           ;main_lcd.c: 520: break;
  2750  0006DE  D0A6               	goto	l412
  2751  0006E0                     l3965:
  2752                           
  2753                           ;main_lcd.c: 522: { LCDGotoXY(0,0); LCDWriteString("S T E M M E N   ");};
  2754  0006E0  0E00               	movlw	0
  2755  0006E2  6E48               	movwf	LCDGotoXY@y,c
  2756  0006E4  0E00               	movlw	0
  2757  0006E6  ECE8  F009         	call	_LCDGotoXY
  2758  0006EA  0E7F               	movlw	high STR_23
  2759  0006EC  6E49               	movwf	LCDWriteString@msg+1,c
  2760  0006EE  0E62               	movlw	low STR_23
  2761  0006F0  6E48               	movwf	LCDWriteString@msg,c
  2762  0006F2  ECFF  F006         	call	_LCDWriteString	;wreg free
  2763                           
  2764                           ;main_lcd.c: 523: { LCDGotoXY(0,1); LCDWriteString("                ");};
  2765  0006F6  0E01               	movlw	1
  2766  0006F8  6E48               	movwf	LCDGotoXY@y,c
  2767  0006FA  0E00               	movlw	0
  2768  0006FC  ECE8  F009         	call	_LCDGotoXY
  2769  000700  0E7E               	movlw	high STR_4
  2770  000702  6E49               	movwf	LCDWriteString@msg+1,c
  2771  000704  0EDA               	movlw	low STR_4
  2772  000706  6E48               	movwf	LCDWriteString@msg,c
  2773  000708  ECFF  F006         	call	_LCDWriteString	;wreg free
  2774                           
  2775                           ;main_lcd.c: 524: _delay_10ms(100);
  2776  00070C  0E00               	movlw	0
  2777  00070E  6E40               	movwf	__delay_10ms@length+1,c
  2778  000710  0E64               	movlw	100
  2779  000712  6E3F               	movwf	__delay_10ms@length,c
  2780  000714  EC34  F00A         	call	__delay_10ms	;wreg free
  2781                           
  2782                           ;main_lcd.c: 525: break;
  2783  000718  D089               	goto	l412
  2784  00071A                     l3973:
  2785                           
  2786                           ;main_lcd.c: 527: { LCDGotoXY(0,0); LCDWriteString("C L I C K       ");};
  2787  00071A  0E00               	movlw	0
  2788  00071C  6E48               	movwf	LCDGotoXY@y,c
  2789  00071E  0E00               	movlw	0
  2790  000720  ECE8  F009         	call	_LCDGotoXY
  2791  000724  0E7F               	movlw	high STR_25
  2792  000726  6E49               	movwf	LCDWriteString@msg+1,c
  2793  000728  0E2F               	movlw	low STR_25
  2794  00072A  6E48               	movwf	LCDWriteString@msg,c
  2795  00072C  ECFF  F006         	call	_LCDWriteString	;wreg free
  2796                           
  2797                           ;main_lcd.c: 528: { LCDGotoXY(0,1); LCDWriteString("                ");};
  2798  000730  0E01               	movlw	1
  2799  000732  6E48               	movwf	LCDGotoXY@y,c
  2800  000734  0E00               	movlw	0
  2801  000736  ECE8  F009         	call	_LCDGotoXY
  2802  00073A  0E7E               	movlw	high STR_4
  2803  00073C  6E49               	movwf	LCDWriteString@msg+1,c
  2804  00073E  0EDA               	movlw	low STR_4
  2805  000740  6E48               	movwf	LCDWriteString@msg,c
  2806  000742  ECFF  F006         	call	_LCDWriteString	;wreg free
  2807                           
  2808                           ;main_lcd.c: 529: _delay_10ms(100);
  2809  000746  0E00               	movlw	0
  2810  000748  6E40               	movwf	__delay_10ms@length+1,c
  2811  00074A  0E64               	movlw	100
  2812  00074C  6E3F               	movwf	__delay_10ms@length,c
  2813  00074E  EC34  F00A         	call	__delay_10ms	;wreg free
  2814                           
  2815                           ;main_lcd.c: 530: break;
  2816  000752  D06C               	goto	l412
  2817  000754                     l3981:
  2818                           
  2819                           ;main_lcd.c: 532: { LCDGotoXY(0,0); LCDWriteString("M O P K E       ");};
  2820  000754  0E00               	movlw	0
  2821  000756  6E48               	movwf	LCDGotoXY@y,c
  2822  000758  0E00               	movlw	0
  2823  00075A  ECE8  F009         	call	_LCDGotoXY
  2824  00075E  0E7F               	movlw	high STR_27
  2825  000760  6E49               	movwf	LCDWriteString@msg+1,c
  2826  000762  0E1E               	movlw	low STR_27
  2827  000764  6E48               	movwf	LCDWriteString@msg,c
  2828  000766  ECFF  F006         	call	_LCDWriteString	;wreg free
  2829                           
  2830                           ;main_lcd.c: 533: { LCDGotoXY(0,1); LCDWriteString("                ");};
  2831  00076A  0E01               	movlw	1
  2832  00076C  6E48               	movwf	LCDGotoXY@y,c
  2833  00076E  0E00               	movlw	0
  2834  000770  ECE8  F009         	call	_LCDGotoXY
  2835  000774  0E7E               	movlw	high STR_4
  2836  000776  6E49               	movwf	LCDWriteString@msg+1,c
  2837  000778  0EDA               	movlw	low STR_4
  2838  00077A  6E48               	movwf	LCDWriteString@msg,c
  2839  00077C  ECFF  F006         	call	_LCDWriteString	;wreg free
  2840                           
  2841                           ;main_lcd.c: 534: _delay_10ms(100);
  2842  000780  0E00               	movlw	0
  2843  000782  6E40               	movwf	__delay_10ms@length+1,c
  2844  000784  0E64               	movlw	100
  2845  000786  6E3F               	movwf	__delay_10ms@length,c
  2846  000788  EC34  F00A         	call	__delay_10ms	;wreg free
  2847                           
  2848                           ;main_lcd.c: 535: break;
  2849  00078C  D04F               	goto	l412
  2850  00078E                     l3989:
  2851                           
  2852                           ;main_lcd.c: 537: scrs_cnt++;
  2853  00078E  2A25               	incf	_scrs_cnt,f,c
  2854                           
  2855                           ;main_lcd.c: 538: if(scrs_cnt == scrs_speed) {
  2856  000790  5026               	movf	_scrs_speed,w,c
  2857  000792  6225               	cpfseq	_scrs_cnt,c
  2858  000794  D04B               	goto	l412
  2859                           
  2860                           ;main_lcd.c: 539: lcd_screensaver();
  2861  000796  EC17  F004         	call	_lcd_screensaver	;wreg free
  2862                           
  2863                           ;main_lcd.c: 540: scrs_cnt = 0;
  2864  00079A  0E00               	movlw	0
  2865  00079C  6E25               	movwf	_scrs_cnt,c
  2866  00079E  D046               	goto	l412
  2867  0007A0                     l3997:
  2868                           
  2869                           ;main_lcd.c: 544: { LCDGotoXY(0,0); LCDWriteString("BRIGHTNESS      ");};
  2870  0007A0  0E00               	movlw	0
  2871  0007A2  6E48               	movwf	LCDGotoXY@y,c
  2872  0007A4  0E00               	movlw	0
  2873  0007A6  ECE8  F009         	call	_LCDGotoXY
  2874  0007AA  0E7F               	movlw	high STR_29
  2875  0007AC  6E49               	movwf	LCDWriteString@msg+1,c
  2876  0007AE  0E51               	movlw	low STR_29
  2877  0007B0  6E48               	movwf	LCDWriteString@msg,c
  2878  0007B2  ECFF  F006         	call	_LCDWriteString	;wreg free
  2879                           
  2880                           ;main_lcd.c: 545: { LCDGotoXY(0,1); LCDWriteInt(brightness,2);};
  2881  0007B6  0E01               	movlw	1
  2882  0007B8  6E48               	movwf	LCDGotoXY@y,c
  2883  0007BA  0E00               	movlw	0
  2884  0007BC  ECE8  F009         	call	_LCDGotoXY
  2885  0007C0  C051  F048         	movff	_brightness,LCDWriteInt@val
  2886  0007C4  6A49               	clrf	LCDWriteInt@val+1,c
  2887  0007C6  0E02               	movlw	2
  2888  0007C8  6E4A               	movwf	LCDWriteInt@field_length,c
  2889  0007CA  EC5E  F006         	call	_LCDWriteInt	;wreg free
  2890                           
  2891                           ;main_lcd.c: 546: break;
  2892  0007CE  D02E               	goto	l412
  2893  0007D0                     l4007:
  2894  0007D0  501C               	movf	_fsm_new_state,w,c
  2895                           
  2896                           ; Switch size 1, requested type "space"
  2897                           ; Number of cases is 15, Range of values is 0 to 14
  2898                           ; switch strategies available:
  2899                           ; Name         Instructions Cycles
  2900                           ; simple_byte           46    24 (average)
  2901                           ;	Chosen strategy is simple_byte
  2902  0007D2  0A00               	xorlw	0	; case 0
  2903  0007D4  B4D8               	btfsc	status,2,c
  2904  0007D6  D02A               	goto	l412
  2905  0007D8  0A01               	xorlw	1	; case 1
  2906  0007DA  B4D8               	btfsc	status,2,c
  2907  0007DC  D661               	goto	l3889
  2908  0007DE  0A03               	xorlw	3	; case 2
  2909  0007E0  B4D8               	btfsc	status,2,c
  2910  0007E2  D661               	goto	l3891
  2911  0007E4  0A01               	xorlw	1	; case 3
  2912  0007E6  B4D8               	btfsc	status,2,c
  2913  0007E8  D661               	goto	l3893
  2914  0007EA  0A07               	xorlw	7	; case 4
  2915  0007EC  B4D8               	btfsc	status,2,c
  2916  0007EE  D675               	goto	l3899
  2917  0007F0  0A01               	xorlw	1	; case 5
  2918  0007F2  B4D8               	btfsc	status,2,c
  2919  0007F4  D689               	goto	l3905
  2920  0007F6  0A03               	xorlw	3	; case 6
  2921  0007F8  B4D8               	btfsc	status,2,c
  2922  0007FA  D018               	goto	l412
  2923  0007FC  0A01               	xorlw	1	; case 7
  2924  0007FE  B4D8               	btfsc	status,2,c
  2925  000800  D015               	goto	l412
  2926  000802  0A0F               	xorlw	15	; case 8
  2927  000804  B4D8               	btfsc	status,2,c
  2928  000806  D012               	goto	l412
  2929  000808  0A01               	xorlw	1	; case 9
  2930  00080A  B4D8               	btfsc	status,2,c
  2931  00080C  D74C               	goto	l3957
  2932  00080E  0A03               	xorlw	3	; case 10
  2933  000810  B4D8               	btfsc	status,2,c
  2934  000812  D766               	goto	l3965
  2935  000814  0A01               	xorlw	1	; case 11
  2936  000816  B4D8               	btfsc	status,2,c
  2937  000818  D780               	goto	l3973
  2938  00081A  0A07               	xorlw	7	; case 12
  2939  00081C  B4D8               	btfsc	status,2,c
  2940  00081E  D79A               	goto	l3981
  2941  000820  0A01               	xorlw	1	; case 13
  2942  000822  B4D8               	btfsc	status,2,c
  2943  000824  D7B4               	goto	l3989
  2944  000826  0A03               	xorlw	3	; case 14
  2945  000828  B4D8               	btfsc	status,2,c
  2946  00082A  D7BA               	goto	l3997
  2947  00082C                     l412:
  2948  00082C  0012               	return	
  2949  00082E                     __end_of_lcd_update:
  2950                           	opt stack 0
  2951                           tblptru	equ	0xFF8
  2952                           tblptrh	equ	0xFF7
  2953                           tblptrl	equ	0xFF6
  2954                           tablat	equ	0xFF5
  2955                           prodh	equ	0xFF4
  2956                           prodl	equ	0xFF3
  2957                           intcon	equ	0xFF2
  2958                           postinc0	equ	0xFEE
  2959                           wreg	equ	0xFE8
  2960                           postdec1	equ	0xFE5
  2961                           fsr1l	equ	0xFE1
  2962                           indf2	equ	0xFDF
  2963                           fsr2h	equ	0xFDA
  2964                           fsr2l	equ	0xFD9
  2965                           status	equ	0xFD8
  2966                           
  2967 ;; *************** function _lcd_screensaver *****************
  2968 ;; Defined at:
  2969 ;;		line 609 in file "main_lcd.c"
  2970 ;; Parameters:    Size  Location     Type
  2971 ;;		None
  2972 ;; Auto vars:     Size  Location     Type
  2973 ;;		None
  2974 ;; Return value:  Size  Location     Type
  2975 ;;		None               void
  2976 ;; Registers used:
  2977 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2978 ;; Tracked objects:
  2979 ;;		On entry : 0/0
  2980 ;;		On exit  : 0/0
  2981 ;;		Unchanged: 0/0
  2982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2983 ;;      Params:         0       0       0       0       0       0       0       0       0
  2984 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2985 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2986 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2987 ;;Total ram usage:        0 bytes
  2988 ;; Hardware stack levels used:    1
  2989 ;; Hardware stack levels required when called:    4
  2990 ;; This function calls:
  2991 ;;		_LCDByte
  2992 ;;		_LCDGotoXY
  2993 ;;		_LCDLoadCostum
  2994 ;;		_LCDWriteString
  2995 ;; This function is called by:
  2996 ;;		_lcd_update
  2997 ;; This function uses a non-reentrant model
  2998 ;;
  2999                           
  3000                           	psect	text4
  3001  00082E                     __ptext4:
  3002                           	opt stack 0
  3003  00082E                     _lcd_screensaver:
  3004                           	opt stack 25
  3005                           
  3006                           ;main_lcd.c: 610: if ((i == 0) || (i == 4) || (i == 8)) {
  3007                           
  3008                           ;incstack = 0
  3009  00082E  501E               	movf	_i,w,c
  3010  000830  B4D8               	btfsc	status,2,c
  3011  000832  D008               	goto	l3755
  3012  000834  501E               	movf	_i,w,c
  3013  000836  0A04               	xorlw	4
  3014  000838  B4D8               	btfsc	status,2,c
  3015  00083A  D004               	goto	l3755
  3016  00083C  501E               	movf	_i,w,c
  3017  00083E  0A08               	xorlw	8
  3018  000840  A4D8               	btfss	status,2,c
  3019  000842  D003               	goto	l3757
  3020  000844                     l3755:
  3021                           
  3022                           ;main_lcd.c: 611: LCDLoadCostum(2);
  3023  000844  0E02               	movlw	2
  3024  000846  ECAF  F005         	call	_LCDLoadCostum
  3025  00084A                     l3757:
  3026                           
  3027                           ;main_lcd.c: 612: }
  3028                           ;main_lcd.c: 613: if ((i == 1) || (i == 3) || (i == 5) || (i == 7) || (i == 9)) {
  3029  00084A  041E               	decf	_i,w,c
  3030  00084C  B4D8               	btfsc	status,2,c
  3031  00084E  D010               	goto	l3767
  3032  000850  501E               	movf	_i,w,c
  3033  000852  0A03               	xorlw	3
  3034  000854  B4D8               	btfsc	status,2,c
  3035  000856  D00C               	goto	l3767
  3036  000858  501E               	movf	_i,w,c
  3037  00085A  0A05               	xorlw	5
  3038  00085C  B4D8               	btfsc	status,2,c
  3039  00085E  D008               	goto	l3767
  3040  000860  501E               	movf	_i,w,c
  3041  000862  0A07               	xorlw	7
  3042  000864  B4D8               	btfsc	status,2,c
  3043  000866  D004               	goto	l3767
  3044  000868  501E               	movf	_i,w,c
  3045  00086A  0A09               	xorlw	9
  3046  00086C  A4D8               	btfss	status,2,c
  3047  00086E  D003               	goto	l3769
  3048  000870                     l3767:
  3049                           
  3050                           ;main_lcd.c: 614: LCDLoadCostum(1);
  3051  000870  0E01               	movlw	1
  3052  000872  ECAF  F005         	call	_LCDLoadCostum
  3053  000876                     l3769:
  3054                           
  3055                           ;main_lcd.c: 615: }
  3056                           ;main_lcd.c: 616: if ((i == 2) || (i == 6) || (i == 10)) {
  3057  000876  501E               	movf	_i,w,c
  3058  000878  0A02               	xorlw	2
  3059  00087A  B4D8               	btfsc	status,2,c
  3060  00087C  D008               	goto	l3775
  3061  00087E  501E               	movf	_i,w,c
  3062  000880  0A06               	xorlw	6
  3063  000882  B4D8               	btfsc	status,2,c
  3064  000884  D004               	goto	l3775
  3065  000886  501E               	movf	_i,w,c
  3066  000888  0A0A               	xorlw	10
  3067  00088A  A4D8               	btfss	status,2,c
  3068  00088C  D003               	goto	l3777
  3069  00088E                     l3775:
  3070                           
  3071                           ;main_lcd.c: 617: LCDLoadCostum(0);
  3072  00088E  0E00               	movlw	0
  3073  000890  ECAF  F005         	call	_LCDLoadCostum
  3074  000894                     l3777:
  3075                           
  3076                           ;main_lcd.c: 618: }
  3077                           ;main_lcd.c: 620: (LCDByte(0b00000001,0));
  3078  000894  0E00               	movlw	0
  3079  000896  6E42               	movwf	LCDByte@isdata,c
  3080  000898  0E01               	movlw	1
  3081  00089A  EC67  F009         	call	_LCDByte
  3082                           
  3083                           ;main_lcd.c: 621: { LCDGotoXY(i,0); LCDWriteString("%0");};
  3084  00089E  0E00               	movlw	0
  3085  0008A0  6E48               	movwf	LCDGotoXY@y,c
  3086  0008A2  501E               	movf	_i,w,c
  3087  0008A4  ECE8  F009         	call	_LCDGotoXY
  3088  0008A8  0E7F               	movlw	high STR_30
  3089  0008AA  6E49               	movwf	LCDWriteString@msg+1,c
  3090  0008AC  0EE2               	movlw	low STR_30
  3091  0008AE  6E48               	movwf	LCDWriteString@msg,c
  3092  0008B0  ECFF  F006         	call	_LCDWriteString	;wreg free
  3093                           
  3094                           ;main_lcd.c: 622: { LCDGotoXY(i + 1,0); LCDWriteString("%1");};
  3095  0008B4  0E00               	movlw	0
  3096  0008B6  6E48               	movwf	LCDGotoXY@y,c
  3097  0008B8  281E               	incf	_i,w,c
  3098  0008BA  ECE8  F009         	call	_LCDGotoXY
  3099  0008BE  0E7F               	movlw	high STR_31
  3100  0008C0  6E49               	movwf	LCDWriteString@msg+1,c
  3101  0008C2  0EE5               	movlw	low STR_31
  3102  0008C4  6E48               	movwf	LCDWriteString@msg,c
  3103  0008C6  ECFF  F006         	call	_LCDWriteString	;wreg free
  3104                           
  3105                           ;main_lcd.c: 623: { LCDGotoXY(i + 2,0); LCDWriteString("%2");};
  3106  0008CA  0E00               	movlw	0
  3107  0008CC  6E48               	movwf	LCDGotoXY@y,c
  3108  0008CE  501E               	movf	_i,w,c
  3109  0008D0  0F02               	addlw	2
  3110  0008D2  ECE8  F009         	call	_LCDGotoXY
  3111  0008D6  0E7F               	movlw	high STR_34
  3112  0008D8  6E49               	movwf	LCDWriteString@msg+1,c
  3113  0008DA  0EE8               	movlw	low STR_34
  3114  0008DC  6E48               	movwf	LCDWriteString@msg,c
  3115  0008DE  ECFF  F006         	call	_LCDWriteString	;wreg free
  3116                           
  3117                           ;main_lcd.c: 625: { LCDGotoXY(i,1); LCDWriteString("%3");};
  3118  0008E2  0E01               	movlw	1
  3119  0008E4  6E48               	movwf	LCDGotoXY@y,c
  3120  0008E6  501E               	movf	_i,w,c
  3121  0008E8  ECE8  F009         	call	_LCDGotoXY
  3122  0008EC  0E7F               	movlw	high STR_35
  3123  0008EE  6E49               	movwf	LCDWriteString@msg+1,c
  3124  0008F0  0EEB               	movlw	low STR_35
  3125  0008F2  6E48               	movwf	LCDWriteString@msg,c
  3126  0008F4  ECFF  F006         	call	_LCDWriteString	;wreg free
  3127                           
  3128                           ;main_lcd.c: 626: { LCDGotoXY(i + 1,1); LCDWriteString("%4");};
  3129  0008F8  0E01               	movlw	1
  3130  0008FA  6E48               	movwf	LCDGotoXY@y,c
  3131  0008FC  281E               	incf	_i,w,c
  3132  0008FE  ECE8  F009         	call	_LCDGotoXY
  3133  000902  0E7F               	movlw	high STR_32
  3134  000904  6E49               	movwf	LCDWriteString@msg+1,c
  3135  000906  0EEE               	movlw	low STR_32
  3136  000908  6E48               	movwf	LCDWriteString@msg,c
  3137  00090A  ECFF  F006         	call	_LCDWriteString	;wreg free
  3138                           
  3139                           ;main_lcd.c: 627: { LCDGotoXY(i + 2,1); LCDWriteString("%5");};
  3140  00090E  0E01               	movlw	1
  3141  000910  6E48               	movwf	LCDGotoXY@y,c
  3142  000912  501E               	movf	_i,w,c
  3143  000914  0F02               	addlw	2
  3144  000916  ECE8  F009         	call	_LCDGotoXY
  3145  00091A  0E7F               	movlw	high STR_33
  3146  00091C  6E49               	movwf	LCDWriteString@msg+1,c
  3147  00091E  0EF1               	movlw	low STR_33
  3148  000920  6E48               	movwf	LCDWriteString@msg,c
  3149  000922  ECFF  F006         	call	_LCDWriteString	;wreg free
  3150                           
  3151                           ;main_lcd.c: 630: { LCDGotoXY(i + 3,0); LCDWriteString("%0");};
  3152  000926  0E00               	movlw	0
  3153  000928  6E48               	movwf	LCDGotoXY@y,c
  3154  00092A  501E               	movf	_i,w,c
  3155  00092C  0F03               	addlw	3
  3156  00092E  ECE8  F009         	call	_LCDGotoXY
  3157  000932  0E7F               	movlw	high STR_30
  3158  000934  6E49               	movwf	LCDWriteString@msg+1,c
  3159  000936  0EE2               	movlw	low STR_30
  3160  000938  6E48               	movwf	LCDWriteString@msg,c
  3161  00093A  ECFF  F006         	call	_LCDWriteString	;wreg free
  3162                           
  3163                           ;main_lcd.c: 631: { LCDGotoXY(i + 4,0); LCDWriteString("%1");};
  3164  00093E  0E00               	movlw	0
  3165  000940  6E48               	movwf	LCDGotoXY@y,c
  3166  000942  501E               	movf	_i,w,c
  3167  000944  0F04               	addlw	4
  3168  000946  ECE8  F009         	call	_LCDGotoXY
  3169  00094A  0E7F               	movlw	high STR_31
  3170  00094C  6E49               	movwf	LCDWriteString@msg+1,c
  3171  00094E  0EE5               	movlw	low STR_31
  3172  000950  6E48               	movwf	LCDWriteString@msg,c
  3173  000952  ECFF  F006         	call	_LCDWriteString	;wreg free
  3174                           
  3175                           ;main_lcd.c: 632: { LCDGotoXY(i + 5,0); LCDWriteString("%2");};
  3176  000956  0E00               	movlw	0
  3177  000958  6E48               	movwf	LCDGotoXY@y,c
  3178  00095A  501E               	movf	_i,w,c
  3179  00095C  0F05               	addlw	5
  3180  00095E  ECE8  F009         	call	_LCDGotoXY
  3181  000962  0E7F               	movlw	high STR_34
  3182  000964  6E49               	movwf	LCDWriteString@msg+1,c
  3183  000966  0EE8               	movlw	low STR_34
  3184  000968  6E48               	movwf	LCDWriteString@msg,c
  3185  00096A  ECFF  F006         	call	_LCDWriteString	;wreg free
  3186                           
  3187                           ;main_lcd.c: 634: { LCDGotoXY(i + 3,1); LCDWriteString("%3");};
  3188  00096E  0E01               	movlw	1
  3189  000970  6E48               	movwf	LCDGotoXY@y,c
  3190  000972  501E               	movf	_i,w,c
  3191  000974  0F03               	addlw	3
  3192  000976  ECE8  F009         	call	_LCDGotoXY
  3193  00097A  0E7F               	movlw	high STR_35
  3194  00097C  6E49               	movwf	LCDWriteString@msg+1,c
  3195  00097E  0EEB               	movlw	low STR_35
  3196  000980  6E48               	movwf	LCDWriteString@msg,c
  3197  000982  ECFF  F006         	call	_LCDWriteString	;wreg free
  3198                           
  3199                           ;main_lcd.c: 635: { LCDGotoXY(i + 4,1); LCDWriteString("%4");};
  3200  000986  0E01               	movlw	1
  3201  000988  6E48               	movwf	LCDGotoXY@y,c
  3202  00098A  501E               	movf	_i,w,c
  3203  00098C  0F04               	addlw	4
  3204  00098E  ECE8  F009         	call	_LCDGotoXY
  3205  000992  0E7F               	movlw	high STR_32
  3206  000994  6E49               	movwf	LCDWriteString@msg+1,c
  3207  000996  0EEE               	movlw	low STR_32
  3208  000998  6E48               	movwf	LCDWriteString@msg,c
  3209  00099A  ECFF  F006         	call	_LCDWriteString	;wreg free
  3210                           
  3211                           ;main_lcd.c: 636: { LCDGotoXY(i + 5,1); LCDWriteString("%5");};
  3212  00099E  0E01               	movlw	1
  3213  0009A0  6E48               	movwf	LCDGotoXY@y,c
  3214  0009A2  501E               	movf	_i,w,c
  3215  0009A4  0F05               	addlw	5
  3216  0009A6  ECE8  F009         	call	_LCDGotoXY
  3217  0009AA  0E7F               	movlw	high STR_33
  3218  0009AC  6E49               	movwf	LCDWriteString@msg+1,c
  3219  0009AE  0EF1               	movlw	low STR_33
  3220  0009B0  6E48               	movwf	LCDWriteString@msg,c
  3221  0009B2  ECFF  F006         	call	_LCDWriteString	;wreg free
  3222                           
  3223                           ;main_lcd.c: 638: if (i == 10 || i == 0) {
  3224  0009B6  501E               	movf	_i,w,c
  3225  0009B8  0A0A               	xorlw	10
  3226  0009BA  B4D8               	btfsc	status,2,c
  3227  0009BC  D002               	goto	l3831
  3228  0009BE  661E               	tstfsz	_i,c
  3229  0009C0  D007               	goto	l445
  3230  0009C2                     l3831:
  3231                           
  3232                           ;main_lcd.c: 639: j = !j;
  3233  0009C2  5020               	movf	_j,w,c
  3234  0009C4  A4D8               	btfss	status,2,c
  3235  0009C6  D002               	goto	u2890
  3236  0009C8  0E01               	movlw	1
  3237  0009CA  D001               	goto	u2896
  3238  0009CC                     u2890:
  3239  0009CC  0E00               	movlw	0
  3240  0009CE                     u2896:
  3241  0009CE  6E20               	movwf	_j,c
  3242  0009D0                     l445:
  3243                           
  3244                           ;main_lcd.c: 640: }
  3245                           ;main_lcd.c: 642: if (j) {
  3246  0009D0  5020               	movf	_j,w,c
  3247  0009D2  B4D8               	btfsc	status,2,c
  3248  0009D4  D002               	goto	l3835
  3249                           
  3250                           ;main_lcd.c: 643: i++;
  3251  0009D6  2A1E               	incf	_i,f,c
  3252                           
  3253                           ;main_lcd.c: 644: } else {
  3254  0009D8  D001               	goto	l450
  3255  0009DA                     l3835:
  3256                           
  3257                           ;main_lcd.c: 645: i--;
  3258  0009DA  061E               	decf	_i,f,c
  3259  0009DC                     l450:
  3260  0009DC  0012               	return	
  3261  0009DE                     __end_of_lcd_screensaver:
  3262                           	opt stack 0
  3263                           tblptru	equ	0xFF8
  3264                           tblptrh	equ	0xFF7
  3265                           tblptrl	equ	0xFF6
  3266                           tablat	equ	0xFF5
  3267                           prodh	equ	0xFF4
  3268                           prodl	equ	0xFF3
  3269                           intcon	equ	0xFF2
  3270                           postinc0	equ	0xFEE
  3271                           wreg	equ	0xFE8
  3272                           postdec1	equ	0xFE5
  3273                           fsr1l	equ	0xFE1
  3274                           indf2	equ	0xFDF
  3275                           fsr2h	equ	0xFDA
  3276                           fsr2l	equ	0xFD9
  3277                           status	equ	0xFD8
  3278                           
  3279 ;; *************** function _lcd_connection *****************
  3280 ;; Defined at:
  3281 ;;		line 571 in file "main_lcd.c"
  3282 ;; Parameters:    Size  Location     Type
  3283 ;;		None
  3284 ;; Auto vars:     Size  Location     Type
  3285 ;;		None
  3286 ;; Return value:  Size  Location     Type
  3287 ;;		None               void
  3288 ;; Registers used:
  3289 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3290 ;; Tracked objects:
  3291 ;;		On entry : 0/0
  3292 ;;		On exit  : 0/0
  3293 ;;		Unchanged: 0/0
  3294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3295 ;;      Params:         0       0       0       0       0       0       0       0       0
  3296 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3297 ;;      Temps:          0       1       0       0       0       0       0       0       0
  3298 ;;      Totals:         0       1       0       0       0       0       0       0       0
  3299 ;;Total ram usage:        1 bytes
  3300 ;; Hardware stack levels used:    1
  3301 ;; Hardware stack levels required when called:    4
  3302 ;; This function calls:
  3303 ;;		_LCDGotoXY
  3304 ;;		_LCDLoadCostum
  3305 ;;		_LCDWriteString
  3306 ;;		__delay_10ms
  3307 ;; This function is called by:
  3308 ;;		_lcd_update
  3309 ;; This function uses a non-reentrant model
  3310 ;;
  3311                           
  3312                           	psect	text5
  3313  0009DE                     __ptext5:
  3314                           	opt stack 0
  3315  0009DE                     _lcd_connection:
  3316                           	opt stack 25
  3317                           
  3318                           ;main_lcd.c: 572: LCDLoadCostum(3);
  3319                           
  3320                           ;incstack = 0
  3321  0009DE  0E03               	movlw	3
  3322  0009E0  ECAF  F005         	call	_LCDLoadCostum
  3323                           
  3324                           ;main_lcd.c: 574: { LCDGotoXY(0,0); LCDWriteString("%0");};
  3325  0009E4  0E00               	movlw	0
  3326  0009E6  6E48               	movwf	LCDGotoXY@y,c
  3327  0009E8  0E00               	movlw	0
  3328  0009EA  ECE8  F009         	call	_LCDGotoXY
  3329  0009EE  0E7F               	movlw	high STR_30
  3330  0009F0  6E49               	movwf	LCDWriteString@msg+1,c
  3331  0009F2  0EE2               	movlw	low STR_30
  3332  0009F4  6E48               	movwf	LCDWriteString@msg,c
  3333  0009F6  ECFF  F006         	call	_LCDWriteString	;wreg free
  3334                           
  3335                           ;main_lcd.c: 575: { LCDGotoXY(1,0); LCDWriteString("%1");};
  3336  0009FA  0E00               	movlw	0
  3337  0009FC  6E48               	movwf	LCDGotoXY@y,c
  3338  0009FE  0E01               	movlw	1
  3339  000A00  ECE8  F009         	call	_LCDGotoXY
  3340  000A04  0E7F               	movlw	high STR_31
  3341  000A06  6E49               	movwf	LCDWriteString@msg+1,c
  3342  000A08  0EE5               	movlw	low STR_31
  3343  000A0A  6E48               	movwf	LCDWriteString@msg,c
  3344  000A0C  ECFF  F006         	call	_LCDWriteString	;wreg free
  3345                           
  3346                           ;main_lcd.c: 576: { LCDGotoXY(0,1); LCDWriteString("%4");};
  3347  000A10  0E01               	movlw	1
  3348  000A12  6E48               	movwf	LCDGotoXY@y,c
  3349  000A14  0E00               	movlw	0
  3350  000A16  ECE8  F009         	call	_LCDGotoXY
  3351  000A1A  0E7F               	movlw	high STR_32
  3352  000A1C  6E49               	movwf	LCDWriteString@msg+1,c
  3353  000A1E  0EEE               	movlw	low STR_32
  3354  000A20  6E48               	movwf	LCDWriteString@msg,c
  3355  000A22  ECFF  F006         	call	_LCDWriteString	;wreg free
  3356                           
  3357                           ;main_lcd.c: 577: { LCDGotoXY(2,1); LCDWriteString("%5");};
  3358  000A26  0E01               	movlw	1
  3359  000A28  6E48               	movwf	LCDGotoXY@y,c
  3360  000A2A  0E02               	movlw	2
  3361  000A2C  ECE8  F009         	call	_LCDGotoXY
  3362  000A30  0E7F               	movlw	high STR_33
  3363  000A32  6E49               	movwf	LCDWriteString@msg+1,c
  3364  000A34  0EF1               	movlw	low STR_33
  3365  000A36  6E48               	movwf	LCDWriteString@msg,c
  3366  000A38  ECFF  F006         	call	_LCDWriteString	;wreg free
  3367                           
  3368                           ;main_lcd.c: 579: { LCDGotoXY(14,0); LCDWriteString("%2");};
  3369  000A3C  0E00               	movlw	0
  3370  000A3E  6E48               	movwf	LCDGotoXY@y,c
  3371  000A40  0E0E               	movlw	14
  3372  000A42  ECE8  F009         	call	_LCDGotoXY
  3373  000A46  0E7F               	movlw	high STR_34
  3374  000A48  6E49               	movwf	LCDWriteString@msg+1,c
  3375  000A4A  0EE8               	movlw	low STR_34
  3376  000A4C  6E48               	movwf	LCDWriteString@msg,c
  3377  000A4E  ECFF  F006         	call	_LCDWriteString	;wreg free
  3378                           
  3379                           ;main_lcd.c: 580: { LCDGotoXY(15,0); LCDWriteString("%3");};
  3380  000A52  0E00               	movlw	0
  3381  000A54  6E48               	movwf	LCDGotoXY@y,c
  3382  000A56  0E0F               	movlw	15
  3383  000A58  ECE8  F009         	call	_LCDGotoXY
  3384  000A5C  0E7F               	movlw	high STR_35
  3385  000A5E  6E49               	movwf	LCDWriteString@msg+1,c
  3386  000A60  0EEB               	movlw	low STR_35
  3387  000A62  6E48               	movwf	LCDWriteString@msg,c
  3388  000A64  ECFF  F006         	call	_LCDWriteString	;wreg free
  3389                           
  3390                           ;main_lcd.c: 581: { LCDGotoXY(14,1); LCDWriteString("%6");};
  3391  000A68  0E01               	movlw	1
  3392  000A6A  6E48               	movwf	LCDGotoXY@y,c
  3393  000A6C  0E0E               	movlw	14
  3394  000A6E  ECE8  F009         	call	_LCDGotoXY
  3395  000A72  0E7F               	movlw	high STR_36
  3396  000A74  6E49               	movwf	LCDWriteString@msg+1,c
  3397  000A76  0EF4               	movlw	low STR_36
  3398  000A78  6E48               	movwf	LCDWriteString@msg,c
  3399  000A7A  ECFF  F006         	call	_LCDWriteString	;wreg free
  3400                           
  3401                           ;main_lcd.c: 582: { LCDGotoXY(15,1); LCDWriteString("%7");};
  3402  000A7E  0E01               	movlw	1
  3403  000A80  6E48               	movwf	LCDGotoXY@y,c
  3404  000A82  0E0F               	movlw	15
  3405  000A84  ECE8  F009         	call	_LCDGotoXY
  3406  000A88  0E7F               	movlw	high STR_37
  3407  000A8A  6E49               	movwf	LCDWriteString@msg+1,c
  3408  000A8C  0EF7               	movlw	low STR_37
  3409  000A8E  6E48               	movwf	LCDWriteString@msg,c
  3410  000A90  ECFF  F006         	call	_LCDWriteString	;wreg free
  3411                           
  3412                           ;main_lcd.c: 583: { LCDGotoXY(13,1); LCDWriteString("%5");};
  3413  000A94  0E01               	movlw	1
  3414  000A96  6E48               	movwf	LCDGotoXY@y,c
  3415  000A98  0E0D               	movlw	13
  3416  000A9A  ECE8  F009         	call	_LCDGotoXY
  3417  000A9E  0E7F               	movlw	high STR_33
  3418  000AA0  6E49               	movwf	LCDWriteString@msg+1,c
  3419  000AA2  0EF1               	movlw	low STR_33
  3420  000AA4  6E48               	movwf	LCDWriteString@msg,c
  3421  000AA6  ECFF  F006         	call	_LCDWriteString	;wreg free
  3422                           
  3423                           ;main_lcd.c: 585: if(i%4) {
  3424  000AAA  C01E  F071         	movff	_i,??_lcd_connection
  3425  000AAE  0E03               	movlw	3
  3426  000AB0  0100               	movlb	0	; () banked
  3427  000AB2  1771               	andwf	??_lcd_connection& (0+255),f,b
  3428  000AB4  B4D8               	btfsc	status,2,c
  3429  000AB6  D00C               	goto	l3721
  3430                           
  3431                           ; BSR set to: 0
  3432                           ;main_lcd.c: 586: { LCDGotoXY(3,0); LCDWriteString("Connecting");};
  3433  000AB8  0E00               	movlw	0
  3434  000ABA  6E48               	movwf	LCDGotoXY@y,c
  3435  000ABC  0E03               	movlw	3
  3436  000ABE  ECE8  F009         	call	_LCDGotoXY
  3437  000AC2  0E7F               	movlw	high STR_39
  3438  000AC4  6E49               	movwf	LCDWriteString@msg+1,c
  3439  000AC6  0E84               	movlw	low STR_39
  3440  000AC8  6E48               	movwf	LCDWriteString@msg,c
  3441  000ACA  ECFF  F006         	call	_LCDWriteString	;wreg free
  3442                           
  3443                           ;main_lcd.c: 587: } else {
  3444  000ACE  D00B               	goto	l3725
  3445  000AD0                     l3721:
  3446                           
  3447                           ;main_lcd.c: 588: { LCDGotoXY(3,0); LCDWriteString("          ");};
  3448  000AD0  0E00               	movlw	0
  3449  000AD2  6E48               	movwf	LCDGotoXY@y,c
  3450  000AD4  0E03               	movlw	3
  3451  000AD6  ECE8  F009         	call	_LCDGotoXY
  3452  000ADA  0E7E               	movlw	high (STR_4+6)
  3453  000ADC  6E49               	movwf	LCDWriteString@msg+1,c
  3454  000ADE  0EE0               	movlw	low (STR_4+6)
  3455  000AE0  6E48               	movwf	LCDWriteString@msg,c
  3456  000AE2  ECFF  F006         	call	_LCDWriteString	;wreg free
  3457  000AE6                     l3725:
  3458                           
  3459                           ;main_lcd.c: 589: }
  3460                           ;main_lcd.c: 590: if(j) {
  3461  000AE6  5020               	movf	_j,w,c
  3462  000AE8  B4D8               	btfsc	status,2,c
  3463  000AEA  D013               	goto	l3733
  3464                           
  3465                           ;main_lcd.c: 591: { LCDGotoXY(2+i,1); LCDWriteString("\176");};
  3466  000AEC  0E01               	movlw	1
  3467  000AEE  6E48               	movwf	LCDGotoXY@y,c
  3468  000AF0  501E               	movf	_i,w,c
  3469  000AF2  0F02               	addlw	2
  3470  000AF4  ECE8  F009         	call	_LCDGotoXY
  3471  000AF8  0E7F               	movlw	high STR_41
  3472  000AFA  6E49               	movwf	LCDWriteString@msg+1,c
  3473  000AFC  0EFA               	movlw	low STR_41
  3474  000AFE  6E48               	movwf	LCDWriteString@msg,c
  3475  000B00  ECFF  F006         	call	_LCDWriteString	;wreg free
  3476                           
  3477                           ;main_lcd.c: 592: _delay_10ms(20);
  3478  000B04  0E00               	movlw	0
  3479  000B06  6E40               	movwf	__delay_10ms@length+1,c
  3480  000B08  0E14               	movlw	20
  3481  000B0A  6E3F               	movwf	__delay_10ms@length,c
  3482  000B0C  EC34  F00A         	call	__delay_10ms	;wreg free
  3483                           
  3484                           ;main_lcd.c: 593: } else {
  3485  000B10  D012               	goto	l3739
  3486  000B12                     l3733:
  3487                           
  3488                           ;main_lcd.c: 594: { LCDGotoXY(2+i,1); LCDWriteString("\177");};
  3489  000B12  0E01               	movlw	1
  3490  000B14  6E48               	movwf	LCDGotoXY@y,c
  3491  000B16  501E               	movf	_i,w,c
  3492  000B18  0F02               	addlw	2
  3493  000B1A  ECE8  F009         	call	_LCDGotoXY
  3494  000B1E  0E7F               	movlw	high STR_42
  3495  000B20  6E49               	movwf	LCDWriteString@msg+1,c
  3496  000B22  0EFC               	movlw	low STR_42
  3497  000B24  6E48               	movwf	LCDWriteString@msg,c
  3498  000B26  ECFF  F006         	call	_LCDWriteString	;wreg free
  3499                           
  3500                           ;main_lcd.c: 595: _delay_10ms(20);
  3501  000B2A  0E00               	movlw	0
  3502  000B2C  6E40               	movwf	__delay_10ms@length+1,c
  3503  000B2E  0E14               	movlw	20
  3504  000B30  6E3F               	movwf	__delay_10ms@length,c
  3505  000B32  EC34  F00A         	call	__delay_10ms	;wreg free
  3506  000B36                     l3739:
  3507                           
  3508                           ;main_lcd.c: 596: }
  3509                           ;main_lcd.c: 598: if (i == 11 || i == 0) {
  3510  000B36  501E               	movf	_i,w,c
  3511  000B38  0A0B               	xorlw	11
  3512  000B3A  B4D8               	btfsc	status,2,c
  3513  000B3C  D002               	goto	l3743
  3514  000B3E  661E               	tstfsz	_i,c
  3515  000B40  D007               	goto	l428
  3516  000B42                     l3743:
  3517                           
  3518                           ;main_lcd.c: 599: j = !j;
  3519  000B42  5020               	movf	_j,w,c
  3520  000B44  A4D8               	btfss	status,2,c
  3521  000B46  D002               	goto	u2740
  3522  000B48  0E01               	movlw	1
  3523  000B4A  D001               	goto	u2746
  3524  000B4C                     u2740:
  3525  000B4C  0E00               	movlw	0
  3526  000B4E                     u2746:
  3527  000B4E  6E20               	movwf	_j,c
  3528  000B50                     l428:
  3529                           
  3530                           ;main_lcd.c: 600: }
  3531                           ;main_lcd.c: 602: if (j) {
  3532  000B50  5020               	movf	_j,w,c
  3533  000B52  B4D8               	btfsc	status,2,c
  3534  000B54  D002               	goto	l3747
  3535                           
  3536                           ;main_lcd.c: 603: i++;
  3537  000B56  2A1E               	incf	_i,f,c
  3538                           
  3539                           ;main_lcd.c: 604: } else {
  3540  000B58  D001               	goto	l433
  3541  000B5A                     l3747:
  3542                           
  3543                           ;main_lcd.c: 605: i--;
  3544  000B5A  061E               	decf	_i,f,c
  3545  000B5C                     l433:
  3546  000B5C  0012               	return	
  3547  000B5E                     __end_of_lcd_connection:
  3548                           	opt stack 0
  3549                           tblptru	equ	0xFF8
  3550                           tblptrh	equ	0xFF7
  3551                           tblptrl	equ	0xFF6
  3552                           tablat	equ	0xFF5
  3553                           prodh	equ	0xFF4
  3554                           prodl	equ	0xFF3
  3555                           intcon	equ	0xFF2
  3556                           postinc0	equ	0xFEE
  3557                           wreg	equ	0xFE8
  3558                           postdec1	equ	0xFE5
  3559                           fsr1l	equ	0xFE1
  3560                           indf2	equ	0xFDF
  3561                           fsr2h	equ	0xFDA
  3562                           fsr2l	equ	0xFD9
  3563                           status	equ	0xFD8
  3564                           
  3565 ;; *************** function _LCDLoadCostum *****************
  3566 ;; Defined at:
  3567 ;;		line 258 in file "lcd_hd44780.c"
  3568 ;; Parameters:    Size  Location     Type
  3569 ;;  select          1    wreg     unsigned char 
  3570 ;; Auto vars:     Size  Location     Type
  3571 ;;  select          1   23[COMRAM] unsigned char 
  3572 ;;  __i             1   24[COMRAM] unsigned char 
  3573 ;; Return value:  Size  Location     Type
  3574 ;;		None               void
  3575 ;; Registers used:
  3576 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3577 ;; Tracked objects:
  3578 ;;		On entry : 0/0
  3579 ;;		On exit  : 0/0
  3580 ;;		Unchanged: 0/0
  3581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3582 ;;      Params:         0       0       0       0       0       0       0       0       0
  3583 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3584 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3585 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3586 ;;Total ram usage:        2 bytes
  3587 ;; Hardware stack levels used:    1
  3588 ;; Hardware stack levels required when called:    3
  3589 ;; This function calls:
  3590 ;;		_LCDByte
  3591 ;; This function is called by:
  3592 ;;		_lcd_connection
  3593 ;;		_lcd_screensaver
  3594 ;; This function uses a non-reentrant model
  3595 ;;
  3596                           
  3597                           	psect	text6
  3598  000B5E                     __ptext6:
  3599                           	opt stack 0
  3600  000B5E                     _LCDLoadCostum:
  3601                           	opt stack 25
  3602                           
  3603                           ;incstack = 0
  3604                           ;LCDLoadCostum@select stored from wreg
  3605  000B5E  6E48               	movwf	LCDLoadCostum@select,c
  3606                           
  3607                           ;lcd_hd44780.c: 260: (LCDByte(0b01000000,0));
  3608  000B60  0E00               	movlw	0
  3609  000B62  6E42               	movwf	LCDByte@isdata,c
  3610  000B64  0E40               	movlw	64
  3611  000B66  EC67  F009         	call	_LCDByte
  3612                           
  3613                           ;lcd_hd44780.c: 261: uint8_t __i;
  3614                           ;lcd_hd44780.c: 262: switch (select) {
  3615  000B6A  D096               	goto	l3513
  3616  000B6C                     l3439:
  3617                           
  3618                           ;lcd_hd44780.c: 264: for (__i = 0; __i<sizeof (__costum0); __i++)
  3619  000B6C  0E00               	movlw	0
  3620  000B6E  6E49               	movwf	LCDLoadCostum@__i,c
  3621  000B70  0E3F               	movlw	63
  3622  000B72  6449               	cpfsgt	LCDLoadCostum@__i,c
  3623  000B74  D001               	goto	l3445
  3624  000B76  D0A1               	goto	l72
  3625  000B78                     l3445:
  3626                           
  3627                           ;lcd_hd44780.c: 265: (LCDByte(__costum0[__i],1));
  3628  000B78  0E01               	movlw	1
  3629  000B7A  6E42               	movwf	LCDByte@isdata,c
  3630  000B7C  5049               	movf	LCDLoadCostum@__i,w,c
  3631  000B7E  0D01               	mullw	1
  3632  000B80  0E8B               	movlw	low ___costum0
  3633  000B82  24F3               	addwf	prodl,w,c
  3634  000B84  6EF6               	movwf	tblptrl,c
  3635  000B86  0E7D               	movlw	high ___costum0
  3636  000B88  20F4               	addwfc	prodh,w,c
  3637  000B8A  6EF7               	movwf	tblptrh,c
  3638  000B8C                     	if	0	;There are less than 3 active tblptr bytes
  3639  000B8C                     	endif
  3640  000B8C  0008               	tblrd		*
  3641  000B8E  50F5               	movf	tablat,w,c
  3642  000B90  EC67  F009         	call	_LCDByte
  3643  000B94  2A49               	incf	LCDLoadCostum@__i,f,c
  3644  000B96  0E3F               	movlw	63
  3645  000B98  6449               	cpfsgt	LCDLoadCostum@__i,c
  3646  000B9A  D7EE               	goto	l3445
  3647  000B9C  D08E               	goto	l72
  3648  000B9E                     l3451:
  3649                           
  3650                           ;lcd_hd44780.c: 269: for (__i = 0; __i<sizeof (__costum1); __i++)
  3651  000B9E  0E00               	movlw	0
  3652  000BA0  6E49               	movwf	LCDLoadCostum@__i,c
  3653  000BA2  0E3F               	movlw	63
  3654  000BA4  6449               	cpfsgt	LCDLoadCostum@__i,c
  3655  000BA6  D001               	goto	l3457
  3656  000BA8  D088               	goto	l72
  3657  000BAA                     l3457:
  3658                           
  3659                           ;lcd_hd44780.c: 270: (LCDByte(__costum1[__i],1));
  3660  000BAA  0E01               	movlw	1
  3661  000BAC  6E42               	movwf	LCDByte@isdata,c
  3662  000BAE  5049               	movf	LCDLoadCostum@__i,w,c
  3663  000BB0  0D01               	mullw	1
  3664  000BB2  0ECB               	movlw	low ___costum1
  3665  000BB4  24F3               	addwf	prodl,w,c
  3666  000BB6  6EF6               	movwf	tblptrl,c
  3667  000BB8  0E7D               	movlw	high ___costum1
  3668  000BBA  20F4               	addwfc	prodh,w,c
  3669  000BBC  6EF7               	movwf	tblptrh,c
  3670  000BBE                     	if	0	;There are less than 3 active tblptr bytes
  3671  000BBE                     	endif
  3672  000BBE  0008               	tblrd		*
  3673  000BC0  50F5               	movf	tablat,w,c
  3674  000BC2  EC67  F009         	call	_LCDByte
  3675  000BC6  2A49               	incf	LCDLoadCostum@__i,f,c
  3676  000BC8  0E3F               	movlw	63
  3677  000BCA  6449               	cpfsgt	LCDLoadCostum@__i,c
  3678  000BCC  D7EE               	goto	l3457
  3679  000BCE  D075               	goto	l72
  3680  000BD0                     l3463:
  3681                           
  3682                           ;lcd_hd44780.c: 274: for (__i = 0; __i<sizeof (__costum2); __i++)
  3683  000BD0  0E00               	movlw	0
  3684  000BD2  6E49               	movwf	LCDLoadCostum@__i,c
  3685  000BD4  0E3F               	movlw	63
  3686  000BD6  6449               	cpfsgt	LCDLoadCostum@__i,c
  3687  000BD8  D001               	goto	l3469
  3688  000BDA  D06F               	goto	l72
  3689  000BDC                     l3469:
  3690                           
  3691                           ;lcd_hd44780.c: 275: (LCDByte(__costum2[__i],1));
  3692  000BDC  0E01               	movlw	1
  3693  000BDE  6E42               	movwf	LCDByte@isdata,c
  3694  000BE0  5049               	movf	LCDLoadCostum@__i,w,c
  3695  000BE2  0D01               	mullw	1
  3696  000BE4  0E0B               	movlw	low ___costum2
  3697  000BE6  24F3               	addwf	prodl,w,c
  3698  000BE8  6EF6               	movwf	tblptrl,c
  3699  000BEA  0E7E               	movlw	high ___costum2
  3700  000BEC  20F4               	addwfc	prodh,w,c
  3701  000BEE  6EF7               	movwf	tblptrh,c
  3702  000BF0                     	if	0	;There are less than 3 active tblptr bytes
  3703  000BF0                     	endif
  3704  000BF0  0008               	tblrd		*
  3705  000BF2  50F5               	movf	tablat,w,c
  3706  000BF4  EC67  F009         	call	_LCDByte
  3707  000BF8  2A49               	incf	LCDLoadCostum@__i,f,c
  3708  000BFA  0E3F               	movlw	63
  3709  000BFC  6449               	cpfsgt	LCDLoadCostum@__i,c
  3710  000BFE  D7EE               	goto	l3469
  3711  000C00  D05C               	goto	l72
  3712  000C02                     l3475:
  3713                           
  3714                           ;lcd_hd44780.c: 279: for (__i = 0; __i<sizeof (__costum3); __i++)
  3715  000C02  0E00               	movlw	0
  3716  000C04  6E49               	movwf	LCDLoadCostum@__i,c
  3717  000C06  0E3F               	movlw	63
  3718  000C08  6449               	cpfsgt	LCDLoadCostum@__i,c
  3719  000C0A  D001               	goto	l3481
  3720  000C0C  D056               	goto	l72
  3721  000C0E                     l3481:
  3722                           
  3723                           ;lcd_hd44780.c: 280: (LCDByte(__costum3[__i],1));
  3724  000C0E  0E01               	movlw	1
  3725  000C10  6E42               	movwf	LCDByte@isdata,c
  3726  000C12  5049               	movf	LCDLoadCostum@__i,w,c
  3727  000C14  0D01               	mullw	1
  3728  000C16  0E4B               	movlw	low ___costum3
  3729  000C18  24F3               	addwf	prodl,w,c
  3730  000C1A  6EF6               	movwf	tblptrl,c
  3731  000C1C  0E7E               	movlw	high ___costum3
  3732  000C1E  20F4               	addwfc	prodh,w,c
  3733  000C20  6EF7               	movwf	tblptrh,c
  3734  000C22                     	if	0	;There are less than 3 active tblptr bytes
  3735  000C22                     	endif
  3736  000C22  0008               	tblrd		*
  3737  000C24  50F5               	movf	tablat,w,c
  3738  000C26  EC67  F009         	call	_LCDByte
  3739  000C2A  2A49               	incf	LCDLoadCostum@__i,f,c
  3740  000C2C  0E3F               	movlw	63
  3741  000C2E  6449               	cpfsgt	LCDLoadCostum@__i,c
  3742  000C30  D7EE               	goto	l3481
  3743  000C32  D043               	goto	l72
  3744  000C34                     l3487:
  3745                           
  3746                           ;lcd_hd44780.c: 284: for (__i = 0; __i<sizeof (__costum4); __i++)
  3747  000C34  0E00               	movlw	0
  3748  000C36  6E49               	movwf	LCDLoadCostum@__i,c
  3749  000C38  0E3F               	movlw	63
  3750  000C3A  6449               	cpfsgt	LCDLoadCostum@__i,c
  3751  000C3C  D001               	goto	l3493
  3752  000C3E  D03D               	goto	l72
  3753  000C40                     l3493:
  3754                           
  3755                           ;lcd_hd44780.c: 285: (LCDByte(__costum4[__i],1));
  3756  000C40  0E01               	movlw	1
  3757  000C42  6E42               	movwf	LCDByte@isdata,c
  3758  000C44  5049               	movf	LCDLoadCostum@__i,w,c
  3759  000C46  0D01               	mullw	1
  3760  000C48  0E8B               	movlw	low ___costum4
  3761  000C4A  24F3               	addwf	prodl,w,c
  3762  000C4C  6EF6               	movwf	tblptrl,c
  3763  000C4E  0E7E               	movlw	high ___costum4
  3764  000C50  20F4               	addwfc	prodh,w,c
  3765  000C52  6EF7               	movwf	tblptrh,c
  3766  000C54                     	if	0	;There are less than 3 active tblptr bytes
  3767  000C54                     	endif
  3768  000C54  0008               	tblrd		*
  3769  000C56  50F5               	movf	tablat,w,c
  3770  000C58  EC67  F009         	call	_LCDByte
  3771  000C5C  2A49               	incf	LCDLoadCostum@__i,f,c
  3772  000C5E  0E3F               	movlw	63
  3773  000C60  6449               	cpfsgt	LCDLoadCostum@__i,c
  3774  000C62  D7EE               	goto	l3493
  3775  000C64  D02A               	goto	l72
  3776  000C66                     l3499:
  3777                           
  3778                           ;lcd_hd44780.c: 289: for (__i = 0; __i<sizeof (__costum0); __i++)
  3779  000C66  0E00               	movlw	0
  3780  000C68  6E49               	movwf	LCDLoadCostum@__i,c
  3781  000C6A  0E3F               	movlw	63
  3782  000C6C  6449               	cpfsgt	LCDLoadCostum@__i,c
  3783  000C6E  D001               	goto	l3505
  3784  000C70  D024               	goto	l72
  3785  000C72                     l3505:
  3786                           
  3787                           ;lcd_hd44780.c: 290: (LCDByte(__costum0[__i],1));
  3788  000C72  0E01               	movlw	1
  3789  000C74  6E42               	movwf	LCDByte@isdata,c
  3790  000C76  5049               	movf	LCDLoadCostum@__i,w,c
  3791  000C78  0D01               	mullw	1
  3792  000C7A  0E8B               	movlw	low ___costum0
  3793  000C7C  24F3               	addwf	prodl,w,c
  3794  000C7E  6EF6               	movwf	tblptrl,c
  3795  000C80  0E7D               	movlw	high ___costum0
  3796  000C82  20F4               	addwfc	prodh,w,c
  3797  000C84  6EF7               	movwf	tblptrh,c
  3798  000C86                     	if	0	;There are less than 3 active tblptr bytes
  3799  000C86                     	endif
  3800  000C86  0008               	tblrd		*
  3801  000C88  50F5               	movf	tablat,w,c
  3802  000C8A  EC67  F009         	call	_LCDByte
  3803  000C8E  2A49               	incf	LCDLoadCostum@__i,f,c
  3804  000C90  0E3F               	movlw	63
  3805  000C92  6449               	cpfsgt	LCDLoadCostum@__i,c
  3806  000C94  D7EE               	goto	l3505
  3807  000C96  D011               	goto	l72
  3808  000C98                     l3513:
  3809  000C98  5048               	movf	LCDLoadCostum@select,w,c
  3810                           
  3811                           ; Switch size 1, requested type "space"
  3812                           ; Number of cases is 5, Range of values is 0 to 4
  3813                           ; switch strategies available:
  3814                           ; Name         Instructions Cycles
  3815                           ; simple_byte           16     9 (average)
  3816                           ;	Chosen strategy is simple_byte
  3817  000C9A  0A00               	xorlw	0	; case 0
  3818  000C9C  B4D8               	btfsc	status,2,c
  3819  000C9E  D766               	goto	l3439
  3820  000CA0  0A01               	xorlw	1	; case 1
  3821  000CA2  B4D8               	btfsc	status,2,c
  3822  000CA4  D77C               	goto	l3451
  3823  000CA6  0A03               	xorlw	3	; case 2
  3824  000CA8  B4D8               	btfsc	status,2,c
  3825  000CAA  D792               	goto	l3463
  3826  000CAC  0A01               	xorlw	1	; case 3
  3827  000CAE  B4D8               	btfsc	status,2,c
  3828  000CB0  D7A8               	goto	l3475
  3829  000CB2  0A07               	xorlw	7	; case 4
  3830  000CB4  B4D8               	btfsc	status,2,c
  3831  000CB6  D7BE               	goto	l3487
  3832  000CB8  D7D6               	goto	l3499
  3833  000CBA                     l72:
  3834  000CBA  0012               	return	
  3835  000CBC                     __end_of_LCDLoadCostum:
  3836                           	opt stack 0
  3837                           tblptru	equ	0xFF8
  3838                           tblptrh	equ	0xFF7
  3839                           tblptrl	equ	0xFF6
  3840                           tablat	equ	0xFF5
  3841                           prodh	equ	0xFF4
  3842                           prodl	equ	0xFF3
  3843                           intcon	equ	0xFF2
  3844                           postinc0	equ	0xFEE
  3845                           wreg	equ	0xFE8
  3846                           postdec1	equ	0xFE5
  3847                           fsr1l	equ	0xFE1
  3848                           indf2	equ	0xFDF
  3849                           fsr2h	equ	0xFDA
  3850                           fsr2l	equ	0xFD9
  3851                           status	equ	0xFD8
  3852                           
  3853 ;; *************** function _LCDWriteInt *****************
  3854 ;; Defined at:
  3855 ;;		line 383 in file "lcd_hd44780.c"
  3856 ;; Parameters:    Size  Location     Type
  3857 ;;  val             2   23[COMRAM] int 
  3858 ;;  field_length    1   25[COMRAM] char 
  3859 ;; Auto vars:     Size  Location     Type
  3860 ;;  str             5    2[BANK0 ] unsigned char [5]
  3861 ;;  i               2    9[BANK0 ] int 
  3862 ;;  j               2    7[BANK0 ] int 
  3863 ;; Return value:  Size  Location     Type
  3864 ;;		None               void
  3865 ;; Registers used:
  3866 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, cstack
  3867 ;; Tracked objects:
  3868 ;;		On entry : 0/0
  3869 ;;		On exit  : 0/0
  3870 ;;		Unchanged: 0/0
  3871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3872 ;;      Params:         3       0       0       0       0       0       0       0       0
  3873 ;;      Locals:         0       9       0       0       0       0       0       0       0
  3874 ;;      Temps:          0       2       0       0       0       0       0       0       0
  3875 ;;      Totals:         3      11       0       0       0       0       0       0       0
  3876 ;;Total ram usage:       14 bytes
  3877 ;; Hardware stack levels used:    1
  3878 ;; Hardware stack levels required when called:    3
  3879 ;; This function calls:
  3880 ;;		_LCDByte
  3881 ;;		___awdiv
  3882 ;;		___awmod
  3883 ;; This function is called by:
  3884 ;;		_lcd_update
  3885 ;; This function uses a non-reentrant model
  3886 ;;
  3887                           
  3888                           	psect	text7
  3889  000CBC                     __ptext7:
  3890                           	opt stack 0
  3891  000CBC                     _LCDWriteInt:
  3892                           	opt stack 26
  3893                           
  3894                           ;lcd_hd44780.c: 395: char str[5] = {0, 0, 0, 0, 0};
  3895                           
  3896                           ;incstack = 0
  3897  000CBC  EE20  F011         	lfsr	2,LCDWriteInt@F4932
  3898  000CC0  EE10  F072         	lfsr	1,LCDWriteInt@str
  3899  000CC4  0E05               	movlw	5
  3900  000CC6                     u2631:
  3901  000CC6  CFDE FFE6          	movff	postinc2,postinc1
  3902  000CCA  2EE8               	decfsz	wreg,f,c
  3903  000CCC  D7FC               	goto	u2631
  3904                           
  3905                           ;lcd_hd44780.c: 396: int i = 4, j = 0;
  3906  000CCE  0E00               	movlw	0
  3907  000CD0  0100               	movlb	0	; () banked
  3908  000CD2  6F7A               	movwf	(LCDWriteInt@i+1)& (0+255),b
  3909  000CD4  0E04               	movlw	4
  3910  000CD6  0100               	movlb	0	; () banked
  3911  000CD8  6F79               	movwf	LCDWriteInt@i& (0+255),b
  3912                           
  3913                           ; BSR set to: 0
  3914  000CDA  0E00               	movlw	0
  3915  000CDC  0100               	movlb	0	; () banked
  3916  000CDE  6F78               	movwf	(LCDWriteInt@j+1)& (0+255),b
  3917  000CE0  0E00               	movlw	0
  3918  000CE2  0100               	movlb	0	; () banked
  3919  000CE4  6F77               	movwf	LCDWriteInt@j& (0+255),b
  3920                           
  3921                           ; BSR set to: 0
  3922                           ;lcd_hd44780.c: 399: if (val < 0) {
  3923  000CE6  5049               	movf	LCDWriteInt@val+1,w,c
  3924  000CE8  0A80               	xorlw	128
  3925  000CEA  6EF3               	movwf	prodl,c
  3926  000CEC  0E80               	movlw	128
  3927  000CEE  5CF3               	subwf	prodl,w,c
  3928  000CF0  0E00               	movlw	0
  3929  000CF2  B4D8               	btfsc	status,2,c
  3930  000CF4  5C48               	subwf	LCDWriteInt@val,w,c
  3931  000CF6  B0D8               	btfsc	status,0,c
  3932  000CF8  D032               	goto	l3655
  3933                           
  3934                           ; BSR set to: 0
  3935                           ;lcd_hd44780.c: 400: (LCDByte('-',1));
  3936  000CFA  0E01               	movlw	1
  3937  000CFC  6E42               	movwf	LCDByte@isdata,c
  3938  000CFE  0E2D               	movlw	45
  3939  000D00  EC67  F009         	call	_LCDByte
  3940                           
  3941                           ;lcd_hd44780.c: 401: val = val*-1;
  3942  000D04  6C48               	negf	LCDWriteInt@val,c
  3943  000D06  1E49               	comf	LCDWriteInt@val+1,f,c
  3944  000D08  B0D8               	btfsc	status,0,c
  3945  000D0A  2A49               	incf	LCDWriteInt@val+1,f,c
  3946  000D0C  D028               	goto	l3655
  3947  000D0E                     l3649:
  3948                           
  3949                           ;lcd_hd44780.c: 405: str[i] = val % 10;
  3950  000D0E  0100               	movlb	0	; () banked
  3951  000D10  0E72               	movlw	low LCDWriteInt@str
  3952  000D12  0100               	movlb	0	; () banked
  3953  000D14  2579               	addwf	LCDWriteInt@i& (0+255),w,b
  3954  000D16  6ED9               	movwf	fsr2l,c
  3955  000D18  0100               	movlb	0	; () banked
  3956  000D1A  0E00               	movlw	high LCDWriteInt@str
  3957  000D1C  0100               	movlb	0	; () banked
  3958  000D1E  217A               	addwfc	(LCDWriteInt@i+1)& (0+255),w,b
  3959  000D20  6EDA               	movwf	fsr2h,c
  3960  000D22  C048  F03F         	movff	LCDWriteInt@val,___awmod@dividend
  3961  000D26  C049  F040         	movff	LCDWriteInt@val+1,___awmod@dividend+1
  3962  000D2A  0E00               	movlw	0
  3963  000D2C  6E42               	movwf	___awmod@divisor+1,c
  3964  000D2E  0E0A               	movlw	10
  3965  000D30  6E41               	movwf	___awmod@divisor,c
  3966  000D32  EC64  F008         	call	___awmod	;wreg free
  3967  000D36  503F               	movf	?___awmod,w,c
  3968  000D38  6EDF               	movwf	indf2,c
  3969                           
  3970                           ;lcd_hd44780.c: 406: val = val / 10;
  3971  000D3A  C048  F03F         	movff	LCDWriteInt@val,___awdiv@dividend
  3972  000D3E  C049  F040         	movff	LCDWriteInt@val+1,___awdiv@dividend+1
  3973  000D42  0E00               	movlw	0
  3974  000D44  6E42               	movwf	___awdiv@divisor+1,c
  3975  000D46  0E0A               	movlw	10
  3976  000D48  6E41               	movwf	___awdiv@divisor,c
  3977  000D4A  EC7F  F007         	call	___awdiv	;wreg free
  3978  000D4E  C03F  F048         	movff	?___awdiv,LCDWriteInt@val
  3979  000D52  C040  F049         	movff	?___awdiv+1,LCDWriteInt@val+1
  3980                           
  3981                           ;lcd_hd44780.c: 407: i--;
  3982  000D56  0100               	movlb	0	; () banked
  3983  000D58  0779               	decf	LCDWriteInt@i& (0+255),f,b
  3984  000D5A  A0D8               	btfss	status,0,c
  3985  000D5C  077A               	decf	(LCDWriteInt@i+1)& (0+255),f,b
  3986  000D5E                     l3655:
  3987  000D5E  5049               	movf	LCDWriteInt@val+1,w,c
  3988  000D60  1048               	iorwf	LCDWriteInt@val,w,c
  3989  000D62  A4D8               	btfss	status,2,c
  3990  000D64  D7D4               	goto	l3649
  3991                           
  3992                           ;lcd_hd44780.c: 408: }
  3993                           ;lcd_hd44780.c: 409: if (field_length == -1)
  3994  000D66  284A               	incf	LCDWriteInt@field_length,w,c
  3995  000D68  B4D8               	btfsc	status,2,c
  3996  000D6A  D004               	goto	l3663
  3997  000D6C  D011               	goto	l3665
  3998  000D6E                     l3661:
  3999  000D6E  0100               	movlb	0	; () banked
  4000  000D70  4B77               	infsnz	LCDWriteInt@j& (0+255),f,b
  4001  000D72  2B78               	incf	(LCDWriteInt@j+1)& (0+255),f,b
  4002  000D74                     l3663:
  4003  000D74  0100               	movlb	0	; () banked
  4004  000D76  0E72               	movlw	low LCDWriteInt@str
  4005  000D78  0100               	movlb	0	; () banked
  4006  000D7A  2577               	addwf	LCDWriteInt@j& (0+255),w,b
  4007  000D7C  6ED9               	movwf	fsr2l,c
  4008  000D7E  0100               	movlb	0	; () banked
  4009  000D80  0E00               	movlw	high LCDWriteInt@str
  4010  000D82  0100               	movlb	0	; () banked
  4011  000D84  2178               	addwfc	(LCDWriteInt@j+1)& (0+255),w,b
  4012  000D86  6EDA               	movwf	fsr2h,c
  4013  000D88  50DF               	movf	indf2,w,c
  4014  000D8A  A4D8               	btfss	status,2,c
  4015  000D8C  D016               	goto	l3667
  4016  000D8E  D7EF               	goto	l3661
  4017  000D90                     l3665:
  4018                           
  4019                           ;lcd_hd44780.c: 411: else
  4020                           ;lcd_hd44780.c: 412: j = 5 - field_length;
  4021  000D90  C04A  F070         	movff	LCDWriteInt@field_length,??_LCDWriteInt
  4022  000D94  0100               	movlb	0	; () banked
  4023  000D96  6B71               	clrf	(??_LCDWriteInt+1)& (0+255),b
  4024  000D98  BF70               	btfsc	??_LCDWriteInt& (0+255),7,b
  4025  000D9A  0771               	decf	(??_LCDWriteInt+1)& (0+255),f,b
  4026  000D9C  0100               	movlb	0	; () banked
  4027  000D9E  1F70               	comf	??_LCDWriteInt& (0+255),f,b
  4028  000DA0  1F71               	comf	(??_LCDWriteInt+1)& (0+255),f,b
  4029  000DA2  4B70               	infsnz	??_LCDWriteInt& (0+255),f,b
  4030  000DA4  2B71               	incf	(??_LCDWriteInt+1)& (0+255),f,b
  4031  000DA6  0E05               	movlw	5
  4032  000DA8  0100               	movlb	0	; () banked
  4033  000DAA  2570               	addwf	??_LCDWriteInt& (0+255),w,b
  4034  000DAC  0100               	movlb	0	; () banked
  4035  000DAE  6F77               	movwf	LCDWriteInt@j& (0+255),b
  4036  000DB0  0E00               	movlw	0
  4037  000DB2  0100               	movlb	0	; () banked
  4038  000DB4  2171               	addwfc	(??_LCDWriteInt+1)& (0+255),w,b
  4039  000DB6  0100               	movlb	0	; () banked
  4040  000DB8  6F78               	movwf	(LCDWriteInt@j+1)& (0+255),b
  4041  000DBA                     l3667:
  4042                           
  4043                           ; BSR set to: 0
  4044                           ;lcd_hd44780.c: 415: for (i = j; i < 5; i++) {
  4045  000DBA  C077  F079         	movff	LCDWriteInt@j,LCDWriteInt@i
  4046  000DBE  C078  F07A         	movff	LCDWriteInt@j+1,LCDWriteInt@i+1
  4047  000DC2  0100               	movlb	0	; () banked
  4048  000DC4  517A               	movf	(LCDWriteInt@i+1)& (0+255),w,b
  4049  000DC6  0A80               	xorlw	128
  4050  000DC8  0F80               	addlw	-128
  4051  000DCA  0E05               	movlw	5
  4052  000DCC  B4D8               	btfsc	status,2,c
  4053  000DCE  5D79               	subwf	LCDWriteInt@i& (0+255),w,b
  4054  000DD0  B0D8               	btfsc	status,0,c
  4055  000DD2  D014               	goto	l109
  4056                           
  4057                           ; BSR set to: 0
  4058                           ;lcd_hd44780.c: 416: (LCDByte(48 + str[i],1));
  4059                           
  4060                           ; BSR set to: 0
  4061                           
  4062                           ; BSR set to: 0
  4063  000DD4  0E01               	movlw	1
  4064  000DD6  6E42               	movwf	LCDByte@isdata,c
  4065  000DD8  0100               	movlb	0	; () banked
  4066  000DDA  0E72               	movlw	low LCDWriteInt@str
  4067  000DDC  0100               	movlb	0	; () banked
  4068  000DDE  2579               	addwf	LCDWriteInt@i& (0+255),w,b
  4069  000DE0  6ED9               	movwf	fsr2l,c
  4070  000DE2  0100               	movlb	0	; () banked
  4071  000DE4  0E00               	movlw	high LCDWriteInt@str
  4072  000DE6  0100               	movlb	0	; () banked
  4073  000DE8  217A               	addwfc	(LCDWriteInt@i+1)& (0+255),w,b
  4074  000DEA  6EDA               	movwf	fsr2h,c
  4075  000DEC  50DF               	movf	indf2,w,c
  4076  000DEE  0F30               	addlw	48
  4077  000DF0  EC67  F009         	call	_LCDByte
  4078  000DF4  0100               	movlb	0	; () banked
  4079  000DF6  4B79               	infsnz	LCDWriteInt@i& (0+255),f,b
  4080  000DF8  2B7A               	incf	(LCDWriteInt@i+1)& (0+255),f,b
  4081  000DFA  D7E3               	goto	L4
  4082  000DFC                     l109:
  4083                           
  4084                           ; BSR set to: 0
  4085  000DFC  0012               	return	
  4086  000DFE                     __end_of_LCDWriteInt:
  4087                           	opt stack 0
  4088                           tblptru	equ	0xFF8
  4089                           tblptrh	equ	0xFF7
  4090                           tblptrl	equ	0xFF6
  4091                           tablat	equ	0xFF5
  4092                           prodh	equ	0xFF4
  4093                           prodl	equ	0xFF3
  4094                           intcon	equ	0xFF2
  4095                           postinc0	equ	0xFEE
  4096                           wreg	equ	0xFE8
  4097                           postinc1	equ	0xFE6
  4098                           postdec1	equ	0xFE5
  4099                           fsr1l	equ	0xFE1
  4100                           indf2	equ	0xFDF
  4101                           postinc2	equ	0xFDE
  4102                           fsr2h	equ	0xFDA
  4103                           fsr2l	equ	0xFD9
  4104                           status	equ	0xFD8
  4105                           
  4106 ;; *************** function ___awmod *****************
  4107 ;; Defined at:
  4108 ;;		line 8 in file "/opt/microchip/xc8/v1.33/sources/common/awmod.c"
  4109 ;; Parameters:    Size  Location     Type
  4110 ;;  dividend        2   14[COMRAM] int 
  4111 ;;  divisor         2   16[COMRAM] int 
  4112 ;; Auto vars:     Size  Location     Type
  4113 ;;  sign            1   19[COMRAM] unsigned char 
  4114 ;;  counter         1   18[COMRAM] unsigned char 
  4115 ;; Return value:  Size  Location     Type
  4116 ;;                  2   14[COMRAM] int 
  4117 ;; Registers used:
  4118 ;;		wreg, status,2, status,0, prodl
  4119 ;; Tracked objects:
  4120 ;;		On entry : 0/0
  4121 ;;		On exit  : 0/0
  4122 ;;		Unchanged: 0/0
  4123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4124 ;;      Params:         4       0       0       0       0       0       0       0       0
  4125 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4126 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4127 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4128 ;;Total ram usage:        6 bytes
  4129 ;; Hardware stack levels used:    1
  4130 ;; Hardware stack levels required when called:    1
  4131 ;; This function calls:
  4132 ;;		Nothing
  4133 ;; This function is called by:
  4134 ;;		_LCDWriteInt
  4135 ;; This function uses a non-reentrant model
  4136 ;;
  4137                           
  4138                           	psect	text8
  4139  0010C8                     __ptext8:
  4140                           	opt stack 0
  4141  0010C8                     ___awmod:
  4142                           	opt stack 27
  4143                           
  4144                           ; BSR set to: 0
  4145                           ;incstack = 0
  4146  0010C8  0E00               	movlw	0
  4147  0010CA  6E44               	movwf	___awmod@sign,c
  4148  0010CC  5040               	movf	___awmod@dividend+1,w,c
  4149  0010CE  0A80               	xorlw	128
  4150  0010D0  6EF3               	movwf	prodl,c
  4151  0010D2  0E80               	movlw	128
  4152  0010D4  5CF3               	subwf	prodl,w,c
  4153  0010D6  0E00               	movlw	0
  4154  0010D8  B4D8               	btfsc	status,2,c
  4155  0010DA  5C3F               	subwf	___awmod@dividend,w,c
  4156  0010DC  B0D8               	btfsc	status,0,c
  4157  0010DE  D006               	goto	l3609
  4158  0010E0  6C3F               	negf	___awmod@dividend,c
  4159  0010E2  1E40               	comf	___awmod@dividend+1,f,c
  4160  0010E4  B0D8               	btfsc	status,0,c
  4161  0010E6  2A40               	incf	___awmod@dividend+1,f,c
  4162  0010E8  0E01               	movlw	1
  4163  0010EA  6E44               	movwf	___awmod@sign,c
  4164  0010EC                     l3609:
  4165  0010EC  5042               	movf	___awmod@divisor+1,w,c
  4166  0010EE  0A80               	xorlw	128
  4167  0010F0  6EF3               	movwf	prodl,c
  4168  0010F2  0E80               	movlw	128
  4169  0010F4  5CF3               	subwf	prodl,w,c
  4170  0010F6  0E00               	movlw	0
  4171  0010F8  B4D8               	btfsc	status,2,c
  4172  0010FA  5C41               	subwf	___awmod@divisor,w,c
  4173  0010FC  B0D8               	btfsc	status,0,c
  4174  0010FE  D004               	goto	l3613
  4175  001100  6C41               	negf	___awmod@divisor,c
  4176  001102  1E42               	comf	___awmod@divisor+1,f,c
  4177  001104  B0D8               	btfsc	status,0,c
  4178  001106  2A42               	incf	___awmod@divisor+1,f,c
  4179  001108                     l3613:
  4180  001108  5042               	movf	___awmod@divisor+1,w,c
  4181  00110A  1041               	iorwf	___awmod@divisor,w,c
  4182  00110C  B4D8               	btfsc	status,2,c
  4183  00110E  D018               	goto	l3629
  4184  001110  0E01               	movlw	1
  4185  001112  6E43               	movwf	___awmod@counter,c
  4186  001114  D004               	goto	l3619
  4187  001116                     l3617:
  4188  001116  90D8               	bcf	status,0,c
  4189  001118  3641               	rlcf	___awmod@divisor,f,c
  4190  00111A  3642               	rlcf	___awmod@divisor+1,f,c
  4191  00111C  2A43               	incf	___awmod@counter,f,c
  4192  00111E                     l3619:
  4193  00111E  AE42               	btfss	___awmod@divisor+1,7,c
  4194  001120  D7FA               	goto	l3617
  4195  001122                     l3621:
  4196  001122  5041               	movf	___awmod@divisor,w,c
  4197  001124  5C3F               	subwf	___awmod@dividend,w,c
  4198  001126  5042               	movf	___awmod@divisor+1,w,c
  4199  001128  5840               	subwfb	___awmod@dividend+1,w,c
  4200  00112A  A0D8               	btfss	status,0,c
  4201  00112C  D004               	goto	l3625
  4202  00112E  5041               	movf	___awmod@divisor,w,c
  4203  001130  5E3F               	subwf	___awmod@dividend,f,c
  4204  001132  5042               	movf	___awmod@divisor+1,w,c
  4205  001134  5A40               	subwfb	___awmod@dividend+1,f,c
  4206  001136                     l3625:
  4207  001136  90D8               	bcf	status,0,c
  4208  001138  3242               	rrcf	___awmod@divisor+1,f,c
  4209  00113A  3241               	rrcf	___awmod@divisor,f,c
  4210  00113C  2E43               	decfsz	___awmod@counter,f,c
  4211  00113E  D7F1               	goto	l3621
  4212  001140                     l3629:
  4213  001140  5044               	movf	___awmod@sign,w,c
  4214  001142  B4D8               	btfsc	status,2,c
  4215  001144  D004               	goto	l3633
  4216  001146  6C3F               	negf	___awmod@dividend,c
  4217  001148  1E40               	comf	___awmod@dividend+1,f,c
  4218  00114A  B0D8               	btfsc	status,0,c
  4219  00114C  2A40               	incf	___awmod@dividend+1,f,c
  4220  00114E                     l3633:
  4221  00114E  C03F  F03F         	movff	___awmod@dividend,?___awmod
  4222  001152  C040  F040         	movff	___awmod@dividend+1,?___awmod+1
  4223  001156  0012               	return	
  4224  001158                     __end_of___awmod:
  4225                           	opt stack 0
  4226                           tblptru	equ	0xFF8
  4227                           tblptrh	equ	0xFF7
  4228                           tblptrl	equ	0xFF6
  4229                           tablat	equ	0xFF5
  4230                           prodh	equ	0xFF4
  4231                           prodl	equ	0xFF3
  4232                           intcon	equ	0xFF2
  4233                           postinc0	equ	0xFEE
  4234                           wreg	equ	0xFE8
  4235                           postinc1	equ	0xFE6
  4236                           postdec1	equ	0xFE5
  4237                           fsr1l	equ	0xFE1
  4238                           indf2	equ	0xFDF
  4239                           postinc2	equ	0xFDE
  4240                           fsr2h	equ	0xFDA
  4241                           fsr2l	equ	0xFD9
  4242                           status	equ	0xFD8
  4243                           
  4244 ;; *************** function ___awdiv *****************
  4245 ;; Defined at:
  4246 ;;		line 8 in file "/opt/microchip/xc8/v1.33/sources/common/awdiv.c"
  4247 ;; Parameters:    Size  Location     Type
  4248 ;;  dividend        2   14[COMRAM] int 
  4249 ;;  divisor         2   16[COMRAM] int 
  4250 ;; Auto vars:     Size  Location     Type
  4251 ;;  quotient        2   20[COMRAM] int 
  4252 ;;  sign            1   19[COMRAM] unsigned char 
  4253 ;;  counter         1   18[COMRAM] unsigned char 
  4254 ;; Return value:  Size  Location     Type
  4255 ;;                  2   14[COMRAM] int 
  4256 ;; Registers used:
  4257 ;;		wreg, status,2, status,0, prodl
  4258 ;; Tracked objects:
  4259 ;;		On entry : 0/0
  4260 ;;		On exit  : 0/0
  4261 ;;		Unchanged: 0/0
  4262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4263 ;;      Params:         4       0       0       0       0       0       0       0       0
  4264 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4265 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4266 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4267 ;;Total ram usage:        8 bytes
  4268 ;; Hardware stack levels used:    1
  4269 ;; Hardware stack levels required when called:    1
  4270 ;; This function calls:
  4271 ;;		Nothing
  4272 ;; This function is called by:
  4273 ;;		_LCDWriteInt
  4274 ;; This function uses a non-reentrant model
  4275 ;;
  4276                           
  4277                           	psect	text9
  4278  000EFE                     __ptext9:
  4279                           	opt stack 0
  4280  000EFE                     ___awdiv:
  4281                           	opt stack 27
  4282                           
  4283                           ;incstack = 0
  4284  000EFE  0E00               	movlw	0
  4285  000F00  6E44               	movwf	___awdiv@sign,c
  4286  000F02  5042               	movf	___awdiv@divisor+1,w,c
  4287  000F04  0A80               	xorlw	128
  4288  000F06  6EF3               	movwf	prodl,c
  4289  000F08  0E80               	movlw	128
  4290  000F0A  5CF3               	subwf	prodl,w,c
  4291  000F0C  0E00               	movlw	0
  4292  000F0E  B4D8               	btfsc	status,2,c
  4293  000F10  5C41               	subwf	___awdiv@divisor,w,c
  4294  000F12  B0D8               	btfsc	status,0,c
  4295  000F14  D006               	goto	l3565
  4296  000F16  6C41               	negf	___awdiv@divisor,c
  4297  000F18  1E42               	comf	___awdiv@divisor+1,f,c
  4298  000F1A  B0D8               	btfsc	status,0,c
  4299  000F1C  2A42               	incf	___awdiv@divisor+1,f,c
  4300  000F1E  0E01               	movlw	1
  4301  000F20  6E44               	movwf	___awdiv@sign,c
  4302  000F22                     l3565:
  4303  000F22  5040               	movf	___awdiv@dividend+1,w,c
  4304  000F24  0A80               	xorlw	128
  4305  000F26  6EF3               	movwf	prodl,c
  4306  000F28  0E80               	movlw	128
  4307  000F2A  5CF3               	subwf	prodl,w,c
  4308  000F2C  0E00               	movlw	0
  4309  000F2E  B4D8               	btfsc	status,2,c
  4310  000F30  5C3F               	subwf	___awdiv@dividend,w,c
  4311  000F32  B0D8               	btfsc	status,0,c
  4312  000F34  D006               	goto	l3571
  4313  000F36  6C3F               	negf	___awdiv@dividend,c
  4314  000F38  1E40               	comf	___awdiv@dividend+1,f,c
  4315  000F3A  B0D8               	btfsc	status,0,c
  4316  000F3C  2A40               	incf	___awdiv@dividend+1,f,c
  4317  000F3E  0E01               	movlw	1
  4318  000F40  1A44               	xorwf	___awdiv@sign,f,c
  4319  000F42                     l3571:
  4320  000F42  0E00               	movlw	0
  4321  000F44  6E46               	movwf	___awdiv@quotient+1,c
  4322  000F46  0E00               	movlw	0
  4323  000F48  6E45               	movwf	___awdiv@quotient,c
  4324  000F4A  5042               	movf	___awdiv@divisor+1,w,c
  4325  000F4C  1041               	iorwf	___awdiv@divisor,w,c
  4326  000F4E  B4D8               	btfsc	status,2,c
  4327  000F50  D01C               	goto	l3593
  4328  000F52  0E01               	movlw	1
  4329  000F54  6E43               	movwf	___awdiv@counter,c
  4330  000F56  D004               	goto	l3579
  4331  000F58                     l3577:
  4332  000F58  90D8               	bcf	status,0,c
  4333  000F5A  3641               	rlcf	___awdiv@divisor,f,c
  4334  000F5C  3642               	rlcf	___awdiv@divisor+1,f,c
  4335  000F5E  2A43               	incf	___awdiv@counter,f,c
  4336  000F60                     l3579:
  4337  000F60  AE42               	btfss	___awdiv@divisor+1,7,c
  4338  000F62  D7FA               	goto	l3577
  4339  000F64                     l3581:
  4340  000F64  90D8               	bcf	status,0,c
  4341  000F66  3645               	rlcf	___awdiv@quotient,f,c
  4342  000F68  3646               	rlcf	___awdiv@quotient+1,f,c
  4343  000F6A  5041               	movf	___awdiv@divisor,w,c
  4344  000F6C  5C3F               	subwf	___awdiv@dividend,w,c
  4345  000F6E  5042               	movf	___awdiv@divisor+1,w,c
  4346  000F70  5840               	subwfb	___awdiv@dividend+1,w,c
  4347  000F72  A0D8               	btfss	status,0,c
  4348  000F74  D005               	goto	l3589
  4349  000F76  5041               	movf	___awdiv@divisor,w,c
  4350  000F78  5E3F               	subwf	___awdiv@dividend,f,c
  4351  000F7A  5042               	movf	___awdiv@divisor+1,w,c
  4352  000F7C  5A40               	subwfb	___awdiv@dividend+1,f,c
  4353  000F7E  8045               	bsf	___awdiv@quotient,0,c
  4354  000F80                     l3589:
  4355  000F80  90D8               	bcf	status,0,c
  4356  000F82  3242               	rrcf	___awdiv@divisor+1,f,c
  4357  000F84  3241               	rrcf	___awdiv@divisor,f,c
  4358  000F86  2E43               	decfsz	___awdiv@counter,f,c
  4359  000F88  D7ED               	goto	l3581
  4360  000F8A                     l3593:
  4361  000F8A  5044               	movf	___awdiv@sign,w,c
  4362  000F8C  B4D8               	btfsc	status,2,c
  4363  000F8E  D004               	goto	l3597
  4364  000F90  6C45               	negf	___awdiv@quotient,c
  4365  000F92  1E46               	comf	___awdiv@quotient+1,f,c
  4366  000F94  B0D8               	btfsc	status,0,c
  4367  000F96  2A46               	incf	___awdiv@quotient+1,f,c
  4368  000F98                     l3597:
  4369  000F98  C045  F03F         	movff	___awdiv@quotient,?___awdiv
  4370  000F9C  C046  F040         	movff	___awdiv@quotient+1,?___awdiv+1
  4371  000FA0  0012               	return	
  4372  000FA2                     __end_of___awdiv:
  4373                           	opt stack 0
  4374                           tblptru	equ	0xFF8
  4375                           tblptrh	equ	0xFF7
  4376                           tblptrl	equ	0xFF6
  4377                           tablat	equ	0xFF5
  4378                           prodh	equ	0xFF4
  4379                           prodl	equ	0xFF3
  4380                           intcon	equ	0xFF2
  4381                           postinc0	equ	0xFEE
  4382                           wreg	equ	0xFE8
  4383                           postinc1	equ	0xFE6
  4384                           postdec1	equ	0xFE5
  4385                           fsr1l	equ	0xFE1
  4386                           indf2	equ	0xFDF
  4387                           postinc2	equ	0xFDE
  4388                           fsr2h	equ	0xFDA
  4389                           fsr2l	equ	0xFD9
  4390                           status	equ	0xFD8
  4391                           
  4392 ;; *************** function _lcd_start_up *****************
  4393 ;; Defined at:
  4394 ;;		line 551 in file "main_lcd.c"
  4395 ;; Parameters:    Size  Location     Type
  4396 ;;		None
  4397 ;; Auto vars:     Size  Location     Type
  4398 ;;  start           6    1[BANK0 ] unsigned char [6]
  4399 ;;  st              2    9[BANK0 ] PTR const unsigned char 
  4400 ;;		 -> lcd_start_up@start(6), 
  4401 ;;  x_pos           1    8[BANK0 ] unsigned char 
  4402 ;;  busy            1    7[BANK0 ] unsigned char 
  4403 ;; Return value:  Size  Location     Type
  4404 ;;		None               void
  4405 ;; Registers used:
  4406 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4407 ;; Tracked objects:
  4408 ;;		On entry : 0/0
  4409 ;;		On exit  : 0/0
  4410 ;;		Unchanged: 0/0
  4411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4412 ;;      Params:         0       0       0       0       0       0       0       0       0
  4413 ;;      Locals:         0      10       0       0       0       0       0       0       0
  4414 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4415 ;;      Totals:         0      10       0       0       0       0       0       0       0
  4416 ;;Total ram usage:       10 bytes
  4417 ;; Hardware stack levels used:    1
  4418 ;; Hardware stack levels required when called:    4
  4419 ;; This function calls:
  4420 ;;		_LCDByte
  4421 ;;		_LCDGotoXY
  4422 ;;		_LCDWriteString
  4423 ;;		__delay_10ms
  4424 ;; This function is called by:
  4425 ;;		_main
  4426 ;; This function uses a non-reentrant model
  4427 ;;
  4428                           
  4429                           	psect	text10
  4430  000FA2                     __ptext10:
  4431                           	opt stack 0
  4432  000FA2                     _lcd_start_up:
  4433                           	opt stack 26
  4434                           
  4435                           ;main_lcd.c: 552: unsigned char busy = 1;
  4436                           
  4437                           ;incstack = 0
  4438  000FA2  0E01               	movlw	1
  4439  000FA4  0100               	movlb	0	; () banked
  4440  000FA6  6F77               	movwf	lcd_start_up@busy& (0+255),b
  4441                           
  4442                           ;main_lcd.c: 553: unsigned char x_pos = 0;
  4443  000FA8  0E00               	movlw	0
  4444  000FAA  0100               	movlb	0	; () banked
  4445  000FAC  6F78               	movwf	lcd_start_up@x_pos& (0+255),b
  4446                           
  4447                           ; BSR set to: 0
  4448                           ;main_lcd.c: 554: unsigned char start[] = "Waldo";
  4449  000FAE  EE20  F04B         	lfsr	2,lcd_start_up@F5019
  4450  000FB2  EE10  F071         	lfsr	1,lcd_start_up@start
  4451  000FB6  0E06               	movlw	6
  4452  000FB8                     u2941:
  4453  000FB8  CFDE FFE6          	movff	postinc2,postinc1
  4454  000FBC  2EE8               	decfsz	wreg,f,c
  4455  000FBE  D7FC               	goto	u2941
  4456                           
  4457                           ; BSR set to: 0
  4458                           ;main_lcd.c: 555: const char *st = start;
  4459  000FC0  0100               	movlb	0	; () banked
  4460  000FC2  0E00               	movlw	high lcd_start_up@start
  4461  000FC4  0100               	movlb	0	; () banked
  4462  000FC6  6F7A               	movwf	(lcd_start_up@st+1)& (0+255),b
  4463  000FC8  0100               	movlb	0	; () banked
  4464  000FCA  0E71               	movlw	low lcd_start_up@start
  4465  000FCC  0100               	movlb	0	; () banked
  4466  000FCE  6F79               	movwf	lcd_start_up@st& (0+255),b
  4467                           
  4468                           ;main_lcd.c: 556: while (busy) {
  4469  000FD0  D02E               	goto	l4029
  4470  000FD2                     l4015:
  4471                           
  4472                           ; BSR set to: 0
  4473                           ;main_lcd.c: 557: (LCDByte(0b00000001,0));
  4474  000FD2  0E00               	movlw	0
  4475  000FD4  6E42               	movwf	LCDByte@isdata,c
  4476  000FD6  0E01               	movlw	1
  4477  000FD8  EC67  F009         	call	_LCDByte
  4478                           
  4479                           ;main_lcd.c: 558: { LCDGotoXY(x_pos,0); LCDWriteString(st);};
  4480  000FDC  0E00               	movlw	0
  4481  000FDE  6E48               	movwf	LCDGotoXY@y,c
  4482  000FE0  0100               	movlb	0	; () banked
  4483  000FE2  5178               	movf	lcd_start_up@x_pos& (0+255),w,b
  4484  000FE4  ECE8  F009         	call	_LCDGotoXY
  4485  000FE8  0100               	movlb	0	; () banked
  4486  000FEA  C07A  F049         	movff	lcd_start_up@st+1,LCDWriteString@msg+1
  4487  000FEE  0100               	movlb	0	; () banked
  4488  000FF0  C079  F048         	movff	lcd_start_up@st,LCDWriteString@msg
  4489  000FF4  ECFF  F006         	call	_LCDWriteString	;wreg free
  4490                           
  4491                           ;main_lcd.c: 559: st++;
  4492  000FF8  0100               	movlb	0	; () banked
  4493  000FFA  4B79               	infsnz	lcd_start_up@st& (0+255),f,b
  4494  000FFC  2B7A               	incf	(lcd_start_up@st+1)& (0+255),f,b
  4495                           
  4496                           ; BSR set to: 0
  4497                           ;main_lcd.c: 561: if (*st == '\0') {
  4498  000FFE  C079  FFD9         	movff	lcd_start_up@st,fsr2l
  4499  001002  C07A  FFDA         	movff	lcd_start_up@st+1,fsr2h
  4500  001006  50DF               	movf	indf2,w,c
  4501  001008  A4D8               	btfss	status,2,c
  4502  00100A  D00B               	goto	l4027
  4503                           
  4504                           ; BSR set to: 0
  4505                           ;main_lcd.c: 562: busy = 0;
  4506  00100C  0E00               	movlw	0
  4507  00100E  0100               	movlb	0	; () banked
  4508  001010  6F77               	movwf	lcd_start_up@busy& (0+255),b
  4509                           
  4510                           ;main_lcd.c: 563: x_pos = 0;
  4511  001012  0E00               	movlw	0
  4512  001014  0100               	movlb	0	; () banked
  4513  001016  6F78               	movwf	lcd_start_up@x_pos& (0+255),b
  4514                           
  4515                           ; BSR set to: 0
  4516                           ;main_lcd.c: 564: (LCDByte(0b00000001,0));
  4517  001018  0E00               	movlw	0
  4518  00101A  6E42               	movwf	LCDByte@isdata,c
  4519  00101C  0E01               	movlw	1
  4520  00101E  EC67  F009         	call	_LCDByte
  4521  001022                     l4027:
  4522                           
  4523                           ;main_lcd.c: 565: }
  4524                           ;main_lcd.c: 566: _delay_10ms(50);
  4525  001022  0E00               	movlw	0
  4526  001024  6E40               	movwf	__delay_10ms@length+1,c
  4527  001026  0E32               	movlw	50
  4528  001028  6E3F               	movwf	__delay_10ms@length,c
  4529  00102A  EC34  F00A         	call	__delay_10ms	;wreg free
  4530  00102E                     l4029:
  4531  00102E  0100               	movlb	0	; () banked
  4532  001030  6777               	tstfsz	lcd_start_up@busy& (0+255),b
  4533  001032  D7CF               	goto	l4015
  4534                           
  4535                           ; BSR set to: 0
  4536                           
  4537                           ; BSR set to: 0
  4538  001034  0012               	return	
  4539  001036                     __end_of_lcd_start_up:
  4540                           	opt stack 0
  4541                           tblptru	equ	0xFF8
  4542                           tblptrh	equ	0xFF7
  4543                           tblptrl	equ	0xFF6
  4544                           tablat	equ	0xFF5
  4545                           prodh	equ	0xFF4
  4546                           prodl	equ	0xFF3
  4547                           intcon	equ	0xFF2
  4548                           postinc0	equ	0xFEE
  4549                           wreg	equ	0xFE8
  4550                           postinc1	equ	0xFE6
  4551                           postdec1	equ	0xFE5
  4552                           fsr1l	equ	0xFE1
  4553                           indf2	equ	0xFDF
  4554                           postinc2	equ	0xFDE
  4555                           fsr2h	equ	0xFDA
  4556                           fsr2l	equ	0xFD9
  4557                           status	equ	0xFD8
  4558                           
  4559 ;; *************** function __delay_10ms *****************
  4560 ;; Defined at:
  4561 ;;		line 81 in file "lcd_hd44780.c"
  4562 ;; Parameters:    Size  Location     Type
  4563 ;;  length          2   14[COMRAM] int 
  4564 ;; Auto vars:     Size  Location     Type
  4565 ;;		None
  4566 ;; Return value:  Size  Location     Type
  4567 ;;		None               void
  4568 ;; Registers used:
  4569 ;;		wreg, status,2, status,0
  4570 ;; Tracked objects:
  4571 ;;		On entry : 0/0
  4572 ;;		On exit  : 0/0
  4573 ;;		Unchanged: 0/0
  4574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4575 ;;      Params:         2       0       0       0       0       0       0       0       0
  4576 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4577 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4578 ;;      Totals:         3       0       0       0       0       0       0       0       0
  4579 ;;Total ram usage:        3 bytes
  4580 ;; Hardware stack levels used:    1
  4581 ;; Hardware stack levels required when called:    1
  4582 ;; This function calls:
  4583 ;;		Nothing
  4584 ;; This function is called by:
  4585 ;;		_lcd_update
  4586 ;;		_lcd_start_up
  4587 ;;		_lcd_connection
  4588 ;;		_LCDWriteSmartString
  4589 ;; This function uses a non-reentrant model
  4590 ;;
  4591                           
  4592                           	psect	text11
  4593  001468                     __ptext11:
  4594                           	opt stack 0
  4595  001468                     __delay_10ms:
  4596                           	opt stack 27
  4597                           
  4598                           ;lcd_hd44780.c: 82: while(length){
  4599                           
  4600                           ; BSR set to: 0
  4601                           ;incstack = 0
  4602  001468  D00B               	goto	l31
  4603  00146A                     l3433:
  4604                           
  4605                           ;lcd_hd44780.c: 83: _delay((unsigned long)((10)*(48000000/4000.0)));
  4606  00146A  0E9C               	movlw	156
  4607  00146C  6E41               	movwf	??__delay_10ms& (0+255),c
  4608  00146E  0ED7               	movlw	215
  4609  001470                     u3357:
  4610  001470  2EE8               	decfsz	wreg,f,c
  4611  001472  D7FE               	goto	u3357
  4612  001474  2E41               	decfsz	??__delay_10ms& (0+255),f,c
  4613  001476  D7FC               	goto	u3357
  4614  001478  F000               	nop	
  4615                           
  4616                           ;lcd_hd44780.c: 84: length--;
  4617  00147A  063F               	decf	__delay_10ms@length,f,c
  4618  00147C  A0D8               	btfss	status,0,c
  4619  00147E  0640               	decf	__delay_10ms@length+1,f,c
  4620  001480                     l31:
  4621  001480  5040               	movf	__delay_10ms@length+1,w,c
  4622  001482  103F               	iorwf	__delay_10ms@length,w,c
  4623  001484  B4D8               	btfsc	status,2,c
  4624  001486  0012               	return	
  4625  001488  D7F0               	goto	l3433
  4626  00148A                     __end_of__delay_10ms:
  4627                           	opt stack 0
  4628                           tblptru	equ	0xFF8
  4629                           tblptrh	equ	0xFF7
  4630                           tblptrl	equ	0xFF6
  4631                           tablat	equ	0xFF5
  4632                           prodh	equ	0xFF4
  4633                           prodl	equ	0xFF3
  4634                           intcon	equ	0xFF2
  4635                           postinc0	equ	0xFEE
  4636                           wreg	equ	0xFE8
  4637                           postinc1	equ	0xFE6
  4638                           postdec1	equ	0xFE5
  4639                           fsr1l	equ	0xFE1
  4640                           indf2	equ	0xFDF
  4641                           postinc2	equ	0xFDE
  4642                           fsr2h	equ	0xFDA
  4643                           fsr2l	equ	0xFD9
  4644                           status	equ	0xFD8
  4645                           
  4646 ;; *************** function _LCDWriteString *****************
  4647 ;; Defined at:
  4648 ;;		line 296 in file "lcd_hd44780.c"
  4649 ;; Parameters:    Size  Location     Type
  4650 ;;  msg             2   23[COMRAM] PTR const unsigned char 
  4651 ;;		 -> STR_54(3), STR_53(3), STR_52(3), STR_51(3), 
  4652 ;;		 -> STR_50(3), STR_49(3), STR_48(3), STR_47(3), 
  4653 ;;		 -> STR_46(3), STR_45(3), STR_44(3), STR_43(3), 
  4654 ;;		 -> STR_42(2), STR_41(2), STR_40(11), STR_39(11), 
  4655 ;;		 -> STR_38(3), STR_37(3), STR_36(3), STR_35(3), 
  4656 ;;		 -> STR_34(3), STR_33(3), STR_32(3), STR_31(3), 
  4657 ;;		 -> STR_30(3), lcd_start_up@start(6), STR_29(17), STR_28(17), 
  4658 ;;		 -> STR_27(17), STR_26(17), STR_25(17), STR_24(17), 
  4659 ;;		 -> STR_23(17), STR_22(17), STR_21(17), STR_20(10), 
  4660 ;;		 -> STR_19(10), STR_18(9), STR_17(9), STR_16(9), 
  4661 ;;		 -> STR_15(9), STR_14(9), STR_13(9), STR_12(9), 
  4662 ;;		 -> STR_11(9), STR_10(9), STR_9(9), STR_8(9), 
  4663 ;;		 -> STR_7(9), STR_6(17), STR_5(17), STR_4(17), 
  4664 ;;		 -> STR_3(17), STR_2(17), STR_1(17), 
  4665 ;; Auto vars:     Size  Location     Type
  4666 ;;  cc              1    0[BANK0 ] char 
  4667 ;; Return value:  Size  Location     Type
  4668 ;;		None               void
  4669 ;; Registers used:
  4670 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4671 ;; Tracked objects:
  4672 ;;		On entry : 0/0
  4673 ;;		On exit  : 0/0
  4674 ;;		Unchanged: 0/0
  4675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4676 ;;      Params:         2       0       0       0       0       0       0       0       0
  4677 ;;      Locals:         0       1       0       0       0       0       0       0       0
  4678 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4679 ;;      Totals:         3       1       0       0       0       0       0       0       0
  4680 ;;Total ram usage:        4 bytes
  4681 ;; Hardware stack levels used:    1
  4682 ;; Hardware stack levels required when called:    3
  4683 ;; This function calls:
  4684 ;;		_LCDByte
  4685 ;; This function is called by:
  4686 ;;		_lcd_update
  4687 ;;		_lcd_start_up
  4688 ;;		_lcd_connection
  4689 ;;		_lcd_screensaver
  4690 ;; This function uses a non-reentrant model
  4691 ;;
  4692                           
  4693                           	psect	text12
  4694  000DFE                     __ptext12:
  4695                           	opt stack 0
  4696  000DFE                     _LCDWriteString:
  4697                           	opt stack 25
  4698                           
  4699                           ;lcd_hd44780.c: 325: while (*msg != '\0') {
  4700                           
  4701                           ;incstack = 0
  4702  000DFE  D06B               	goto	l3537
  4703  000E00                     l3517:
  4704                           
  4705                           ;lcd_hd44780.c: 327: if (*msg == '%') {
  4706  000E00  C048  FFF6         	movff	LCDWriteString@msg,tblptrl
  4707  000E04  C049  FFF7         	movff	LCDWriteString@msg+1,tblptrh
  4708  000E08  6AF8               	clrf	tblptru,c
  4709  000E0A  0E07               	movlw	(high __ramtop+-1)
  4710  000E0C  64F7               	cpfsgt	tblptrh,c
  4711  000E0E  D003               	bra	u2417
  4712  000E10  0008               	tblrd		*
  4713  000E12  50F5               	movf	tablat,w,c
  4714  000E14  D005               	bra	u2410
  4715  000E16                     u2417:
  4716  000E16  CFF6 FFE9          	movff	tblptrl,fsr0l
  4717  000E1A  CFF7 FFEA          	movff	tblptrh,fsr0h
  4718  000E1E  50EF               	movf	indf0,w,c
  4719  000E20                     u2410:
  4720  000E20  0A25               	xorlw	37
  4721  000E22  A4D8               	btfss	status,2,c
  4722  000E24  D042               	goto	l3533
  4723                           
  4724                           ;lcd_hd44780.c: 328: msg++;
  4725  000E26  4A48               	infsnz	LCDWriteString@msg,f,c
  4726  000E28  2A49               	incf	LCDWriteString@msg+1,f,c
  4727                           
  4728                           ;lcd_hd44780.c: 329: int8_t cc = *msg - '0';
  4729  000E2A  C048  FFF6         	movff	LCDWriteString@msg,tblptrl
  4730  000E2E  C049  FFF7         	movff	LCDWriteString@msg+1,tblptrh
  4731  000E32  6AF8               	clrf	tblptru,c
  4732  000E34  0E07               	movlw	(high __ramtop+-1)
  4733  000E36  64F7               	cpfsgt	tblptrh,c
  4734  000E38  D003               	bra	u2437
  4735  000E3A  0008               	tblrd		*
  4736  000E3C  50F5               	movf	tablat,w,c
  4737  000E3E  D005               	bra	u2430
  4738  000E40                     u2437:
  4739  000E40  CFF6 FFE9          	movff	tblptrl,fsr0l
  4740  000E44  CFF7 FFEA          	movff	tblptrh,fsr0h
  4741  000E48  50EF               	movf	indf0,w,c
  4742  000E4A                     u2430:
  4743  000E4A  0FD0               	addlw	208
  4744  000E4C  0100               	movlb	0	; () banked
  4745  000E4E  6F70               	movwf	LCDWriteString@cc& (0+255),b
  4746                           
  4747                           ; BSR set to: 0
  4748                           ;lcd_hd44780.c: 331: if (cc >= 0 && cc <= 7) {
  4749  000E50  0100               	movlb	0	; () banked
  4750  000E52  BF70               	btfsc	LCDWriteString@cc& (0+255),7,b
  4751  000E54  D010               	goto	l3529
  4752                           
  4753                           ; BSR set to: 0
  4754  000E56  0100               	movlb	0	; () banked
  4755  000E58  5170               	movf	LCDWriteString@cc& (0+255),w,b
  4756  000E5A  0A80               	xorlw	128
  4757  000E5C  6E4A               	movwf	??_LCDWriteString& (0+255),c
  4758  000E5E  0E08               	movlw	8
  4759  000E60  0A80               	xorlw	128
  4760  000E62  5C4A               	subwf	??_LCDWriteString,w,c
  4761  000E64  B0D8               	btfsc	status,0,c
  4762  000E66  D007               	goto	l3529
  4763                           
  4764                           ; BSR set to: 0
  4765                           ;lcd_hd44780.c: 332: (LCDByte(cc,1));
  4766  000E68  0E01               	movlw	1
  4767  000E6A  6E42               	movwf	LCDByte@isdata,c
  4768  000E6C  0100               	movlb	0	; () banked
  4769  000E6E  5170               	movf	LCDWriteString@cc& (0+255),w,b
  4770  000E70  EC67  F009         	call	_LCDByte
  4771                           
  4772                           ;lcd_hd44780.c: 333: } else {
  4773  000E74  D02E               	goto	l3535
  4774  000E76                     l3529:
  4775                           
  4776                           ;lcd_hd44780.c: 334: (LCDByte('%',1));
  4777  000E76  0E01               	movlw	1
  4778  000E78  6E42               	movwf	LCDByte@isdata,c
  4779  000E7A  0E25               	movlw	37
  4780  000E7C  EC67  F009         	call	_LCDByte
  4781                           
  4782                           ;lcd_hd44780.c: 335: (LCDByte(*msg,1));
  4783  000E80  0E01               	movlw	1
  4784  000E82  6E42               	movwf	LCDByte@isdata,c
  4785  000E84  C048  FFF6         	movff	LCDWriteString@msg,tblptrl
  4786  000E88  C049  FFF7         	movff	LCDWriteString@msg+1,tblptrh
  4787  000E8C  6AF8               	clrf	tblptru,c
  4788  000E8E  0E07               	movlw	(high __ramtop+-1)
  4789  000E90  64F7               	cpfsgt	tblptrh,c
  4790  000E92  D003               	bra	u2467
  4791  000E94  0008               	tblrd		*
  4792  000E96  50F5               	movf	tablat,w,c
  4793  000E98  D005               	bra	u2460
  4794  000E9A                     u2467:
  4795  000E9A  CFF6 FFE9          	movff	tblptrl,fsr0l
  4796  000E9E  CFF7 FFEA          	movff	tblptrh,fsr0h
  4797  000EA2  50EF               	movf	indf0,w,c
  4798  000EA4                     u2460:
  4799  000EA4  EC67  F009         	call	_LCDByte
  4800  000EA8  D014               	goto	l3535
  4801  000EAA                     l3533:
  4802                           
  4803                           ;lcd_hd44780.c: 338: (LCDByte(*msg,1));
  4804  000EAA  0E01               	movlw	1
  4805  000EAC  6E42               	movwf	LCDByte@isdata,c
  4806  000EAE  C048  FFF6         	movff	LCDWriteString@msg,tblptrl
  4807  000EB2  C049  FFF7         	movff	LCDWriteString@msg+1,tblptrh
  4808  000EB6  6AF8               	clrf	tblptru,c
  4809  000EB8  0E07               	movlw	(high __ramtop+-1)
  4810  000EBA  64F7               	cpfsgt	tblptrh,c
  4811  000EBC  D003               	bra	u2477
  4812  000EBE  0008               	tblrd		*
  4813  000EC0  50F5               	movf	tablat,w,c
  4814  000EC2  D005               	bra	u2470
  4815  000EC4                     u2477:
  4816  000EC4  CFF6 FFE9          	movff	tblptrl,fsr0l
  4817  000EC8  CFF7 FFEA          	movff	tblptrh,fsr0h
  4818  000ECC  50EF               	movf	indf0,w,c
  4819  000ECE                     u2470:
  4820  000ECE  EC67  F009         	call	_LCDByte
  4821  000ED2                     l3535:
  4822                           
  4823                           ;lcd_hd44780.c: 339: }
  4824                           ;lcd_hd44780.c: 340: msg++;
  4825  000ED2  4A48               	infsnz	LCDWriteString@msg,f,c
  4826  000ED4  2A49               	incf	LCDWriteString@msg+1,f,c
  4827  000ED6                     l3537:
  4828  000ED6  C048  FFF6         	movff	LCDWriteString@msg,tblptrl
  4829  000EDA  C049  FFF7         	movff	LCDWriteString@msg+1,tblptrh
  4830  000EDE  6AF8               	clrf	tblptru,c
  4831  000EE0  0E07               	movlw	(high __ramtop+-1)
  4832  000EE2  64F7               	cpfsgt	tblptrh,c
  4833  000EE4  D003               	bra	u2487
  4834  000EE6  0008               	tblrd		*
  4835  000EE8  50F5               	movf	tablat,w,c
  4836  000EEA  D005               	bra	u2480
  4837  000EEC                     u2487:
  4838  000EEC  CFF6 FFE9          	movff	tblptrl,fsr0l
  4839  000EF0  CFF7 FFEA          	movff	tblptrh,fsr0h
  4840  000EF4  50EF               	movf	indf0,w,c
  4841  000EF6                     u2480:
  4842  000EF6  0900               	iorlw	0
  4843  000EF8  B4D8               	btfsc	status,2,c
  4844  000EFA  0012               	return	
  4845  000EFC  D781               	goto	l3517
  4846  000EFE                     __end_of_LCDWriteString:
  4847                           	opt stack 0
  4848                           tblptru	equ	0xFF8
  4849                           tblptrh	equ	0xFF7
  4850                           tblptrl	equ	0xFF6
  4851                           tablat	equ	0xFF5
  4852                           prodh	equ	0xFF4
  4853                           prodl	equ	0xFF3
  4854                           intcon	equ	0xFF2
  4855                           indf0	equ	0xFEF
  4856                           postinc0	equ	0xFEE
  4857                           fsr0h	equ	0xFEA
  4858                           fsr0l	equ	0xFE9
  4859                           wreg	equ	0xFE8
  4860                           postinc1	equ	0xFE6
  4861                           postdec1	equ	0xFE5
  4862                           fsr1l	equ	0xFE1
  4863                           indf2	equ	0xFDF
  4864                           postinc2	equ	0xFDE
  4865                           fsr2h	equ	0xFDA
  4866                           fsr2l	equ	0xFD9
  4867                           status	equ	0xFD8
  4868                           
  4869 ;; *************** function _LCDGotoXY *****************
  4870 ;; Defined at:
  4871 ;;		line 491 in file "lcd_hd44780.c"
  4872 ;; Parameters:    Size  Location     Type
  4873 ;;  x               1    wreg     unsigned char 
  4874 ;;  y               1   23[COMRAM] unsigned char 
  4875 ;; Auto vars:     Size  Location     Type
  4876 ;;  x               1   24[COMRAM] unsigned char 
  4877 ;; Return value:  Size  Location     Type
  4878 ;;		None               void
  4879 ;; Registers used:
  4880 ;;		wreg, status,2, status,0, cstack
  4881 ;; Tracked objects:
  4882 ;;		On entry : 0/0
  4883 ;;		On exit  : 0/0
  4884 ;;		Unchanged: 0/0
  4885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4886 ;;      Params:         1       0       0       0       0       0       0       0       0
  4887 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4888 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4889 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4890 ;;Total ram usage:        2 bytes
  4891 ;; Hardware stack levels used:    1
  4892 ;; Hardware stack levels required when called:    3
  4893 ;; This function calls:
  4894 ;;		_LCDByte
  4895 ;; This function is called by:
  4896 ;;		_lcd_update
  4897 ;;		_lcd_start_up
  4898 ;;		_lcd_connection
  4899 ;;		_lcd_screensaver
  4900 ;;		_LCDWriteSmartString
  4901 ;; This function uses a non-reentrant model
  4902 ;;
  4903                           
  4904                           	psect	text13
  4905  0013D0                     __ptext13:
  4906                           	opt stack 0
  4907  0013D0                     _LCDGotoXY:
  4908                           	opt stack 25
  4909                           
  4910                           ;incstack = 0
  4911                           ;LCDGotoXY@x stored from wreg
  4912  0013D0  6E49               	movwf	LCDGotoXY@x,c
  4913                           
  4914                           ;lcd_hd44780.c: 492: if (x >= 20) return;
  4915  0013D2  0E13               	movlw	19
  4916  0013D4  6449               	cpfsgt	LCDGotoXY@x,c
  4917  0013D6  D008               	goto	l3551
  4918  0013D8  D01A               	goto	l142
  4919  0013DA                     l3543:
  4920                           
  4921                           ;lcd_hd44780.c: 500: x |= 0b01000000;
  4922  0013DA  8C49               	bsf	LCDGotoXY@x,6,c
  4923                           
  4924                           ;lcd_hd44780.c: 501: break;
  4925  0013DC  D012               	goto	l3553
  4926  0013DE                     l3545:
  4927                           
  4928                           ;lcd_hd44780.c: 503: x += 0x14;
  4929  0013DE  0E14               	movlw	20
  4930  0013E0  D001               	goto	L5
  4931  0013E2                     l3547:
  4932                           
  4933                           ;lcd_hd44780.c: 506: x += 0x54;
  4934  0013E2  0E54               	movlw	84
  4935  0013E4                     L5:
  4936  0013E4  2649               	addwf	LCDGotoXY@x,f,c
  4937                           
  4938                           ;lcd_hd44780.c: 507: break;
  4939  0013E6  D00D               	goto	l3553
  4940  0013E8                     l3551:
  4941  0013E8  5048               	movf	LCDGotoXY@y,w,c
  4942                           
  4943                           ; Switch size 1, requested type "space"
  4944                           ; Number of cases is 4, Range of values is 0 to 3
  4945                           ; switch strategies available:
  4946                           ; Name         Instructions Cycles
  4947                           ; simple_byte           13     7 (average)
  4948                           ;	Chosen strategy is simple_byte
  4949  0013EA  0A00               	xorlw	0	; case 0
  4950  0013EC  B4D8               	btfsc	status,2,c
  4951  0013EE  D009               	goto	l3553
  4952  0013F0  0A01               	xorlw	1	; case 1
  4953  0013F2  B4D8               	btfsc	status,2,c
  4954  0013F4  D7F2               	goto	l3543
  4955  0013F6  0A03               	xorlw	3	; case 2
  4956  0013F8  B4D8               	btfsc	status,2,c
  4957  0013FA  D7F1               	goto	l3545
  4958  0013FC  0A01               	xorlw	1	; case 3
  4959  0013FE  B4D8               	btfsc	status,2,c
  4960  001400  D7F0               	goto	l3547
  4961  001402                     l3553:
  4962                           
  4963                           ;lcd_hd44780.c: 529: x |= 0b10000000;
  4964  001402  8E49               	bsf	LCDGotoXY@x,7,c
  4965                           
  4966                           ;lcd_hd44780.c: 530: (LCDByte(x,0));
  4967  001404  0E00               	movlw	0
  4968  001406  6E42               	movwf	LCDByte@isdata,c
  4969  001408  5049               	movf	LCDGotoXY@x,w,c
  4970  00140A  EC67  F009         	call	_LCDByte
  4971  00140E                     l142:
  4972  00140E  0012               	return	
  4973  001410                     __end_of_LCDGotoXY:
  4974                           	opt stack 0
  4975                           tblptru	equ	0xFF8
  4976                           tblptrh	equ	0xFF7
  4977                           tblptrl	equ	0xFF6
  4978                           tablat	equ	0xFF5
  4979                           prodh	equ	0xFF4
  4980                           prodl	equ	0xFF3
  4981                           intcon	equ	0xFF2
  4982                           indf0	equ	0xFEF
  4983                           postinc0	equ	0xFEE
  4984                           fsr0h	equ	0xFEA
  4985                           fsr0l	equ	0xFE9
  4986                           wreg	equ	0xFE8
  4987                           postinc1	equ	0xFE6
  4988                           postdec1	equ	0xFE5
  4989                           fsr1l	equ	0xFE1
  4990                           indf2	equ	0xFDF
  4991                           postinc2	equ	0xFDE
  4992                           fsr2h	equ	0xFDA
  4993                           fsr2l	equ	0xFD9
  4994                           status	equ	0xFD8
  4995                           
  4996 ;; *************** function _init_pic *****************
  4997 ;; Defined at:
  4998 ;;		line 55 in file "main_lcd.c"
  4999 ;; Parameters:    Size  Location     Type
  5000 ;;		None
  5001 ;; Auto vars:     Size  Location     Type
  5002 ;;		None
  5003 ;; Return value:  Size  Location     Type
  5004 ;;		None               void
  5005 ;; Registers used:
  5006 ;;		wreg, status,2, status,0, cstack
  5007 ;; Tracked objects:
  5008 ;;		On entry : 0/0
  5009 ;;		On exit  : 0/0
  5010 ;;		Unchanged: 0/0
  5011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5012 ;;      Params:         0       0       0       0       0       0       0       0       0
  5013 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5014 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5015 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5016 ;;Total ram usage:        0 bytes
  5017 ;; Hardware stack levels used:    1
  5018 ;; Hardware stack levels required when called:    2
  5019 ;; This function calls:
  5020 ;;		_init_timer0
  5021 ;;		_init_uart_m
  5022 ;; This function is called by:
  5023 ;;		_main
  5024 ;; This function uses a non-reentrant model
  5025 ;;
  5026                           
  5027                           	psect	text14
  5028  00138C                     __ptext14:
  5029                           	opt stack 0
  5030  00138C                     _init_pic:
  5031                           	opt stack 28
  5032                           
  5033                           ;main_lcd.c: 56: TRISA = 0x00;
  5034                           
  5035                           ;incstack = 0
  5036  00138C  0E00               	movlw	0
  5037  00138E  6E92               	movwf	3986,c	;volatile
  5038                           
  5039                           ;main_lcd.c: 57: TRISB = 0x0F;
  5040  001390  0E0F               	movlw	15
  5041  001392  6E93               	movwf	3987,c	;volatile
  5042                           
  5043                           ;main_lcd.c: 58: TRISC = 0x00;
  5044  001394  0E00               	movlw	0
  5045  001396  6E94               	movwf	3988,c	;volatile
  5046                           
  5047                           ;main_lcd.c: 60: ADCON1bits.PCFG = 0b1111;
  5048  001398  80C1               	bsf	4033,0,c	;volatile
  5049  00139A  82C1               	bsf	4033,1,c	;volatile
  5050  00139C  84C1               	bsf	4033,2,c	;volatile
  5051  00139E  86C1               	bsf	4033,3,c	;volatile
  5052                           
  5053                           ;main_lcd.c: 62: init_timer0(0,0,0b001);
  5054  0013A0  0E00               	movlw	0
  5055  0013A2  6E3F               	movwf	init_timer0@presc,c
  5056  0013A4  0E01               	movlw	1
  5057  0013A6  6E40               	movwf	init_timer0@presc_val,c
  5058  0013A8  0E00               	movlw	0
  5059  0013AA  EC1E  F00A         	call	_init_timer0
  5060                           
  5061                           ;main_lcd.c: 63: init_uart_m(12, 0, 0);
  5062  0013AE  0E00               	movlw	0
  5063  0013B0  6E40               	movwf	init_uart_m@baud+1,c
  5064  0013B2  0E0C               	movlw	12
  5065  0013B4  6E3F               	movwf	init_uart_m@baud,c
  5066  0013B6  0E00               	movlw	0
  5067  0013B8  6E41               	movwf	init_uart_m@TX_inv,c
  5068  0013BA  0E00               	movlw	0
  5069  0013BC  6E42               	movwf	init_uart_m@RX_inv,c
  5070  0013BE  EC08  F00A         	call	_init_uart_m	;wreg free
  5071                           
  5072                           ;main_lcd.c: 65: PIR1bits.RCIF = 0;
  5073  0013C2  9A9E               	bcf	3998,5,c	;volatile
  5074                           
  5075                           ;main_lcd.c: 66: PIE1bits.RCIE = 1;
  5076  0013C4  8A9D               	bsf	3997,5,c	;volatile
  5077                           
  5078                           ;main_lcd.c: 67: INTCONbits.PEIE = 0;
  5079  0013C6  9CF2               	bcf	intcon,6,c	;volatile
  5080                           
  5081                           ;main_lcd.c: 69: brightness = 4;
  5082  0013C8  0E04               	movlw	4
  5083  0013CA  6E51               	movwf	_brightness,c
  5084                           
  5085                           ;main_lcd.c: 70: (PORTAbits.RA5 = 0);
  5086  0013CC  9A80               	bcf	3968,5,c	;volatile
  5087  0013CE  0012               	return	
  5088  0013D0                     __end_of_init_pic:
  5089                           	opt stack 0
  5090                           tblptru	equ	0xFF8
  5091                           tblptrh	equ	0xFF7
  5092                           tblptrl	equ	0xFF6
  5093                           tablat	equ	0xFF5
  5094                           prodh	equ	0xFF4
  5095                           prodl	equ	0xFF3
  5096                           intcon	equ	0xFF2
  5097                           indf0	equ	0xFEF
  5098                           postinc0	equ	0xFEE
  5099                           fsr0h	equ	0xFEA
  5100                           fsr0l	equ	0xFE9
  5101                           wreg	equ	0xFE8
  5102                           postinc1	equ	0xFE6
  5103                           postdec1	equ	0xFE5
  5104                           fsr1l	equ	0xFE1
  5105                           indf2	equ	0xFDF
  5106                           postinc2	equ	0xFDE
  5107                           fsr2h	equ	0xFDA
  5108                           fsr2l	equ	0xFD9
  5109                           status	equ	0xFD8
  5110                           
  5111 ;; *************** function _init_uart_m *****************
  5112 ;; Defined at:
  5113 ;;		line 8 in file "../common_files/c/uart_m.c"
  5114 ;; Parameters:    Size  Location     Type
  5115 ;;  baud            2   14[COMRAM] int 
  5116 ;;  TX_inv          1   16[COMRAM] unsigned char 
  5117 ;;  RX_inv          1   17[COMRAM] unsigned char 
  5118 ;; Auto vars:     Size  Location     Type
  5119 ;;		None
  5120 ;; Return value:  Size  Location     Type
  5121 ;;		None               void
  5122 ;; Registers used:
  5123 ;;		None
  5124 ;; Tracked objects:
  5125 ;;		On entry : 0/0
  5126 ;;		On exit  : 0/0
  5127 ;;		Unchanged: 0/0
  5128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5129 ;;      Params:         4       0       0       0       0       0       0       0       0
  5130 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5131 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5132 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5133 ;;Total ram usage:        4 bytes
  5134 ;; Hardware stack levels used:    1
  5135 ;; Hardware stack levels required when called:    1
  5136 ;; This function calls:
  5137 ;;		Nothing
  5138 ;; This function is called by:
  5139 ;;		_init_pic
  5140 ;; This function uses a non-reentrant model
  5141 ;;
  5142                           
  5143                           	psect	text15
  5144  001410                     __ptext15:
  5145                           	opt stack 0
  5146  001410                     _init_uart_m:
  5147                           	opt stack 28
  5148                           
  5149                           ;uart_m.c: 17: SPBRG = baud;
  5150                           
  5151                           ;incstack = 0
  5152  001410  C03F  FFAF         	movff	init_uart_m@baud,4015	;volatile
  5153                           
  5154                           ;uart_m.c: 20: TXSTAbits.CSRC = 0;
  5155  001414  9EAC               	bcf	4012,7,c	;volatile
  5156                           
  5157                           ;uart_m.c: 21: TXSTAbits.BRGH = 0;
  5158  001416  94AC               	bcf	4012,2,c	;volatile
  5159                           
  5160                           ;uart_m.c: 22: TXSTAbits.TXEN = 0;
  5161  001418  9AAC               	bcf	4012,5,c	;volatile
  5162                           
  5163                           ;uart_m.c: 23: TXSTAbits.TX9 = 0;
  5164  00141A  9CAC               	bcf	4012,6,c	;volatile
  5165                           
  5166                           ;uart_m.c: 24: TXSTAbits.SYNC = 0;
  5167  00141C  98AC               	bcf	4012,4,c	;volatile
  5168                           
  5169                           ;uart_m.c: 27: RCSTAbits.SPEN = 0;
  5170  00141E  9EAB               	bcf	4011,7,c	;volatile
  5171                           
  5172                           ;uart_m.c: 28: RCSTAbits.RX9 = 0;
  5173  001420  9CAB               	bcf	4011,6,c	;volatile
  5174                           
  5175                           ;uart_m.c: 29: RCSTAbits.ADDEN = 0;
  5176  001422  96AB               	bcf	4011,3,c	;volatile
  5177                           
  5178                           ;uart_m.c: 32: BAUDCONbits.TXCKP = TX_inv;
  5179  001424  B041               	btfsc	init_uart_m@TX_inv,0,c
  5180  001426  D002               	bra	u475
  5181  001428  98B8               	bcf	4024,4,c	;volatile
  5182  00142A  D001               	bra	u476
  5183  00142C                     u475:
  5184  00142C  88B8               	bsf	4024,4,c	;volatile
  5185  00142E                     u476:
  5186                           
  5187                           ;uart_m.c: 33: BAUDCONbits.RXDTP = RX_inv;
  5188  00142E  B042               	btfsc	init_uart_m@RX_inv,0,c
  5189  001430  D002               	bra	u485
  5190  001432  9AB8               	bcf	4024,5,c	;volatile
  5191  001434  D001               	bra	u486
  5192  001436                     u485:
  5193  001436  8AB8               	bsf	4024,5,c	;volatile
  5194  001438                     u486:
  5195                           
  5196                           ;uart_m.c: 34: BAUDCONbits.BRG16 = 0;
  5197  001438  96B8               	bcf	4024,3,c	;volatile
  5198  00143A  0012               	return	
  5199  00143C                     __end_of_init_uart_m:
  5200                           	opt stack 0
  5201                           tblptru	equ	0xFF8
  5202                           tblptrh	equ	0xFF7
  5203                           tblptrl	equ	0xFF6
  5204                           tablat	equ	0xFF5
  5205                           prodh	equ	0xFF4
  5206                           prodl	equ	0xFF3
  5207                           intcon	equ	0xFF2
  5208                           indf0	equ	0xFEF
  5209                           postinc0	equ	0xFEE
  5210                           fsr0h	equ	0xFEA
  5211                           fsr0l	equ	0xFE9
  5212                           wreg	equ	0xFE8
  5213                           postinc1	equ	0xFE6
  5214                           postdec1	equ	0xFE5
  5215                           fsr1l	equ	0xFE1
  5216                           indf2	equ	0xFDF
  5217                           postinc2	equ	0xFDE
  5218                           fsr2h	equ	0xFDA
  5219                           fsr2l	equ	0xFD9
  5220                           status	equ	0xFD8
  5221                           
  5222 ;; *************** function _init_timer0 *****************
  5223 ;; Defined at:
  5224 ;;		line 7 in file "../common_files/c/timer0.c"
  5225 ;; Parameters:    Size  Location     Type
  5226 ;;  eight_bit       1    wreg     unsigned char 
  5227 ;;  presc           1   14[COMRAM] unsigned char 
  5228 ;;  presc_val       1   15[COMRAM] unsigned char 
  5229 ;; Auto vars:     Size  Location     Type
  5230 ;;  eight_bit       1   16[COMRAM] unsigned char 
  5231 ;; Return value:  Size  Location     Type
  5232 ;;		None               void
  5233 ;; Registers used:
  5234 ;;		wreg, status,2, status,0
  5235 ;; Tracked objects:
  5236 ;;		On entry : 0/0
  5237 ;;		On exit  : 0/0
  5238 ;;		Unchanged: 0/0
  5239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5240 ;;      Params:         2       0       0       0       0       0       0       0       0
  5241 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5242 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5243 ;;      Totals:         3       0       0       0       0       0       0       0       0
  5244 ;;Total ram usage:        3 bytes
  5245 ;; Hardware stack levels used:    1
  5246 ;; Hardware stack levels required when called:    1
  5247 ;; This function calls:
  5248 ;;		Nothing
  5249 ;; This function is called by:
  5250 ;;		_init_pic
  5251 ;; This function uses a non-reentrant model
  5252 ;;
  5253                           
  5254                           	psect	text16
  5255  00143C                     __ptext16:
  5256                           	opt stack 0
  5257  00143C                     _init_timer0:
  5258                           	opt stack 28
  5259                           
  5260                           ;incstack = 0
  5261                           ;init_timer0@eight_bit stored from wreg
  5262  00143C  6E41               	movwf	init_timer0@eight_bit,c
  5263                           
  5264                           ;timer0.c: 8: T0CONbits.TMR0ON = 0;
  5265  00143E  9ED5               	bcf	4053,7,c	;volatile
  5266                           
  5267                           ;timer0.c: 9: T0CONbits.T08BIT = eight_bit;
  5268  001440  B041               	btfsc	init_timer0@eight_bit,0,c
  5269  001442  D002               	bra	u455
  5270  001444  9CD5               	bcf	4053,6,c	;volatile
  5271  001446  D001               	bra	u456
  5272  001448                     u455:
  5273  001448  8CD5               	bsf	4053,6,c	;volatile
  5274  00144A                     u456:
  5275                           
  5276                           ;timer0.c: 10: T0CONbits.T0CS = 0;
  5277  00144A  9AD5               	bcf	4053,5,c	;volatile
  5278                           
  5279                           ;timer0.c: 11: T0CONbits.T0CS = 0;
  5280  00144C  9AD5               	bcf	4053,5,c	;volatile
  5281                           
  5282                           ;timer0.c: 12: T0CONbits.PSA = presc;
  5283  00144E  B03F               	btfsc	init_timer0@presc,0,c
  5284  001450  D002               	bra	u465
  5285  001452  96D5               	bcf	4053,3,c	;volatile
  5286  001454  D001               	bra	u466
  5287  001456                     u465:
  5288  001456  86D5               	bsf	4053,3,c	;volatile
  5289  001458                     u466:
  5290                           
  5291                           ;timer0.c: 13: T0CONbits.T0PS = presc_val;
  5292  001458  50D5               	movf	4053,w,c	;volatile
  5293  00145A  1840               	xorwf	init_timer0@presc_val,w,c
  5294  00145C  0BF8               	andlw	-8
  5295  00145E  1840               	xorwf	init_timer0@presc_val,w,c
  5296  001460  6ED5               	movwf	4053,c	;volatile
  5297                           
  5298                           ;timer0.c: 15: TMR0L = 0;
  5299  001462  0E00               	movlw	0
  5300  001464  6ED6               	movwf	4054,c	;volatile
  5301  001466  0012               	return	
  5302  001468                     __end_of_init_timer0:
  5303                           	opt stack 0
  5304                           tblptru	equ	0xFF8
  5305                           tblptrh	equ	0xFF7
  5306                           tblptrl	equ	0xFF6
  5307                           tablat	equ	0xFF5
  5308                           prodh	equ	0xFF4
  5309                           prodl	equ	0xFF3
  5310                           intcon	equ	0xFF2
  5311                           indf0	equ	0xFEF
  5312                           postinc0	equ	0xFEE
  5313                           fsr0h	equ	0xFEA
  5314                           fsr0l	equ	0xFE9
  5315                           wreg	equ	0xFE8
  5316                           postinc1	equ	0xFE6
  5317                           postdec1	equ	0xFE5
  5318                           fsr1l	equ	0xFE1
  5319                           indf2	equ	0xFDF
  5320                           postinc2	equ	0xFDE
  5321                           fsr2h	equ	0xFDA
  5322                           fsr2l	equ	0xFD9
  5323                           status	equ	0xFD8
  5324                           
  5325 ;; *************** function _enable_uart_m *****************
  5326 ;; Defined at:
  5327 ;;		line 59 in file "../common_files/c/uart_m.c"
  5328 ;; Parameters:    Size  Location     Type
  5329 ;;		None
  5330 ;; Auto vars:     Size  Location     Type
  5331 ;;		None
  5332 ;; Return value:  Size  Location     Type
  5333 ;;		None               void
  5334 ;; Registers used:
  5335 ;;		None
  5336 ;; Tracked objects:
  5337 ;;		On entry : 0/0
  5338 ;;		On exit  : 0/0
  5339 ;;		Unchanged: 0/0
  5340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5341 ;;      Params:         0       0       0       0       0       0       0       0       0
  5342 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5343 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5344 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5345 ;;Total ram usage:        0 bytes
  5346 ;; Hardware stack levels used:    1
  5347 ;; Hardware stack levels required when called:    1
  5348 ;; This function calls:
  5349 ;;		Nothing
  5350 ;; This function is called by:
  5351 ;;		_main
  5352 ;; This function uses a non-reentrant model
  5353 ;;
  5354                           
  5355                           	psect	text17
  5356  0014B8                     __ptext17:
  5357                           	opt stack 0
  5358  0014B8                     _enable_uart_m:
  5359                           	opt stack 29
  5360                           
  5361                           ;uart_m.c: 60: TRISCbits.TRISC7 = 1;
  5362                           
  5363                           ;incstack = 0
  5364  0014B8  8E94               	bsf	3988,7,c	;volatile
  5365                           
  5366                           ;uart_m.c: 61: TRISCbits.TRISC6 = 0;
  5367  0014BA  9C94               	bcf	3988,6,c	;volatile
  5368                           
  5369                           ;uart_m.c: 63: TXSTAbits.TXEN = 1;
  5370  0014BC  8AAC               	bsf	4012,5,c	;volatile
  5371                           
  5372                           ;uart_m.c: 64: RCSTAbits.CREN = 1;
  5373  0014BE  88AB               	bsf	4011,4,c	;volatile
  5374                           
  5375                           ;uart_m.c: 65: RCSTAbits.SPEN = 1;
  5376  0014C0  8EAB               	bsf	4011,7,c	;volatile
  5377  0014C2  0012               	return	
  5378  0014C4                     __end_of_enable_uart_m:
  5379                           	opt stack 0
  5380                           tblptru	equ	0xFF8
  5381                           tblptrh	equ	0xFF7
  5382                           tblptrl	equ	0xFF6
  5383                           tablat	equ	0xFF5
  5384                           prodh	equ	0xFF4
  5385                           prodl	equ	0xFF3
  5386                           intcon	equ	0xFF2
  5387                           indf0	equ	0xFEF
  5388                           postinc0	equ	0xFEE
  5389                           fsr0h	equ	0xFEA
  5390                           fsr0l	equ	0xFE9
  5391                           wreg	equ	0xFE8
  5392                           postinc1	equ	0xFE6
  5393                           postdec1	equ	0xFE5
  5394                           fsr1l	equ	0xFE1
  5395                           indf2	equ	0xFDF
  5396                           postinc2	equ	0xFDE
  5397                           fsr2h	equ	0xFDA
  5398                           fsr2l	equ	0xFD9
  5399                           status	equ	0xFD8
  5400                           
  5401 ;; *************** function _LCDInit *****************
  5402 ;; Defined at:
  5403 ;;		line 198 in file "lcd_hd44780.c"
  5404 ;; Parameters:    Size  Location     Type
  5405 ;;  style           1    wreg     unsigned char 
  5406 ;; Auto vars:     Size  Location     Type
  5407 ;;  style           1   23[COMRAM] unsigned char 
  5408 ;;  __i             1   24[COMRAM] unsigned char 
  5409 ;; Return value:  Size  Location     Type
  5410 ;;		None               void
  5411 ;; Registers used:
  5412 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5413 ;; Tracked objects:
  5414 ;;		On entry : 0/0
  5415 ;;		On exit  : 0/0
  5416 ;;		Unchanged: 0/0
  5417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5418 ;;      Params:         0       0       0       0       0       0       0       0       0
  5419 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5420 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5421 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5422 ;;Total ram usage:        2 bytes
  5423 ;; Hardware stack levels used:    1
  5424 ;; Hardware stack levels required when called:    3
  5425 ;; This function calls:
  5426 ;;		_LCDBusyLoop
  5427 ;;		_LCDByte
  5428 ;; This function is called by:
  5429 ;;		_main
  5430 ;; This function uses a non-reentrant model
  5431 ;;
  5432                           
  5433                           	psect	text18
  5434  001158                     __ptext18:
  5435                           	opt stack 0
  5436  001158                     _LCDInit:
  5437                           	opt stack 27
  5438                           
  5439                           ;incstack = 0
  5440                           ;LCDInit@style stored from wreg
  5441  001158  6E48               	movwf	LCDInit@style,c
  5442                           
  5443                           ;lcd_hd44780.c: 216: (LCDByte(0b00001000,0));
  5444  00115A  0E00               	movlw	0
  5445  00115C  6E42               	movwf	LCDByte@isdata,c
  5446  00115E  0E08               	movlw	8
  5447  001160  EC67  F009         	call	_LCDByte
  5448                           
  5449                           ;lcd_hd44780.c: 219: TRISA &= (~(0x0F << 1));
  5450  001164  0EE1               	movlw	225
  5451  001166  1692               	andwf	3986,f,c	;volatile
  5452                           
  5453                           ;lcd_hd44780.c: 221: TRISCbits.TRISC1 = 0;
  5454  001168  9294               	bcf	3988,1,c	;volatile
  5455                           
  5456                           ;lcd_hd44780.c: 222: TRISCbits.TRISC0 = 0;
  5457  00116A  9094               	bcf	3988,0,c	;volatile
  5458                           
  5459                           ;lcd_hd44780.c: 223: TRISCbits.TRISC1 = 0;
  5460  00116C  9294               	bcf	3988,1,c	;volatile
  5461                           
  5462                           ;lcd_hd44780.c: 225: PORTA &= (~(0x0F << 1));
  5463  00116E  0EE1               	movlw	225
  5464  001170  1680               	andwf	3968,f,c	;volatile
  5465                           
  5466                           ;lcd_hd44780.c: 227: (PORTCbits.RC2=0);
  5467  001172  9482               	bcf	3970,2,c	;volatile
  5468                           
  5469                           ;lcd_hd44780.c: 228: (PORTCbits.RC1=0);
  5470  001174  9282               	bcf	3970,1,c	;volatile
  5471                           
  5472                           ;lcd_hd44780.c: 229: (PORTCbits.RC0=0);
  5473  001176  9082               	bcf	3970,0,c	;volatile
  5474                           
  5475                           ;lcd_hd44780.c: 232: _delay((unsigned long)((0.5)*(48000000/4000000.0)));
  5476  001178  D000               	nop2		;2 cycle nop
  5477  00117A  D000               	nop2		;2 cycle nop
  5478  00117C  D000               	nop2		;2 cycle nop
  5479                           
  5480                           ;lcd_hd44780.c: 234: (PORTCbits.RC2=1);
  5481  00117E  8482               	bsf	3970,2,c	;volatile
  5482                           
  5483                           ;lcd_hd44780.c: 235: PORTA |= ((0b00000010) << 1);
  5484  001180  8480               	bsf	3968,2,c	;volatile
  5485                           
  5486                           ;lcd_hd44780.c: 236: _delay((unsigned long)((1)*(48000000/4000000.0)));
  5487  001182  0E04               	movlw	4
  5488  001184                     u3367:
  5489  001184  2EE8               	decfsz	wreg,f,c
  5490  001186  D7FE               	goto	u3367
  5491                           
  5492                           ;lcd_hd44780.c: 237: (PORTCbits.RC2=0);
  5493  001188  9482               	bcf	3970,2,c	;volatile
  5494                           
  5495                           ;lcd_hd44780.c: 238: _delay((unsigned long)((1)*(48000000/4000000.0)));
  5496  00118A  0E04               	movlw	4
  5497  00118C                     u3377:
  5498  00118C  2EE8               	decfsz	wreg,f,c
  5499  00118E  D7FE               	goto	u3377
  5500                           
  5501                           ;lcd_hd44780.c: 241: LCDBusyLoop();
  5502  001190  EC31  F009         	call	_LCDBusyLoop	;wreg free
  5503                           
  5504                           ;lcd_hd44780.c: 246: (LCDByte(0b00101000,0));
  5505  001194  0E00               	movlw	0
  5506  001196  6E42               	movwf	LCDByte@isdata,c
  5507  001198  0E28               	movlw	40
  5508  00119A  EC67  F009         	call	_LCDByte
  5509                           
  5510                           ;lcd_hd44780.c: 247: (LCDByte(0b00001100 | style,0));
  5511  00119E  0E00               	movlw	0
  5512  0011A0  6E42               	movwf	LCDByte@isdata,c
  5513  0011A2  5048               	movf	LCDInit@style,w,c
  5514  0011A4  090C               	iorlw	12
  5515  0011A6  EC67  F009         	call	_LCDByte
  5516                           
  5517                           ;lcd_hd44780.c: 250: (LCDByte(0b01000000,0));
  5518  0011AA  0E00               	movlw	0
  5519  0011AC  6E42               	movwf	LCDByte@isdata,c
  5520  0011AE  0E40               	movlw	64
  5521  0011B0  EC67  F009         	call	_LCDByte
  5522                           
  5523                           ;lcd_hd44780.c: 252: uint8_t __i;
  5524                           ;lcd_hd44780.c: 253: for (__i = 0; __i<sizeof (__costum1); __i++)
  5525  0011B4  0E00               	movlw	0
  5526  0011B6  6E49               	movwf	LCDInit@__i,c
  5527  0011B8  D00F               	goto	L6
  5528  0011BA                     l3881:
  5529                           
  5530                           ;lcd_hd44780.c: 254: (LCDByte(__costum1[__i],1));
  5531  0011BA  0E01               	movlw	1
  5532  0011BC  6E42               	movwf	LCDByte@isdata,c
  5533  0011BE  5049               	movf	LCDInit@__i,w,c
  5534  0011C0  0D01               	mullw	1
  5535  0011C2  0ECB               	movlw	low ___costum1
  5536  0011C4  24F3               	addwf	prodl,w,c
  5537  0011C6  6EF6               	movwf	tblptrl,c
  5538  0011C8  0E7D               	movlw	high ___costum1
  5539  0011CA  20F4               	addwfc	prodh,w,c
  5540  0011CC  6EF7               	movwf	tblptrh,c
  5541  0011CE                     	if	0	;There are less than 3 active tblptr bytes
  5542  0011CE                     	endif
  5543  0011CE  0008               	tblrd		*
  5544  0011D0  50F5               	movf	tablat,w,c
  5545  0011D2  EC67  F009         	call	_LCDByte
  5546  0011D6  2A49               	incf	LCDInit@__i,f,c
  5547  0011D8                     L6:
  5548  0011D8  0E3F               	movlw	63
  5549  0011DA  6449               	cpfsgt	LCDInit@__i,c
  5550  0011DC  D7EE               	goto	l3881
  5551  0011DE  0012               	return	
  5552  0011E0                     __end_of_LCDInit:
  5553                           	opt stack 0
  5554                           tblptru	equ	0xFF8
  5555                           tblptrh	equ	0xFF7
  5556                           tblptrl	equ	0xFF6
  5557                           tablat	equ	0xFF5
  5558                           prodh	equ	0xFF4
  5559                           prodl	equ	0xFF3
  5560                           intcon	equ	0xFF2
  5561                           indf0	equ	0xFEF
  5562                           postinc0	equ	0xFEE
  5563                           fsr0h	equ	0xFEA
  5564                           fsr0l	equ	0xFE9
  5565                           wreg	equ	0xFE8
  5566                           postinc1	equ	0xFE6
  5567                           postdec1	equ	0xFE5
  5568                           fsr1l	equ	0xFE1
  5569                           indf2	equ	0xFDF
  5570                           postinc2	equ	0xFDE
  5571                           fsr2h	equ	0xFDA
  5572                           fsr2l	equ	0xFD9
  5573                           status	equ	0xFD8
  5574                           
  5575 ;; *************** function _LCDByte *****************
  5576 ;; Defined at:
  5577 ;;		line 88 in file "lcd_hd44780.c"
  5578 ;; Parameters:    Size  Location     Type
  5579 ;;  c               1    wreg     unsigned char 
  5580 ;;  isdata          1   17[COMRAM] unsigned char 
  5581 ;; Auto vars:     Size  Location     Type
  5582 ;;  c               1   21[COMRAM] unsigned char 
  5583 ;;  temp            1   22[COMRAM] unsigned char 
  5584 ;;  ln              1   20[COMRAM] unsigned char 
  5585 ;;  hn              1   19[COMRAM] unsigned char 
  5586 ;; Return value:  Size  Location     Type
  5587 ;;		None               void
  5588 ;; Registers used:
  5589 ;;		wreg, status,2, status,0, cstack
  5590 ;; Tracked objects:
  5591 ;;		On entry : 0/0
  5592 ;;		On exit  : 0/0
  5593 ;;		Unchanged: 0/0
  5594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5595 ;;      Params:         1       0       0       0       0       0       0       0       0
  5596 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5597 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5598 ;;      Totals:         6       0       0       0       0       0       0       0       0
  5599 ;;Total ram usage:        6 bytes
  5600 ;; Hardware stack levels used:    1
  5601 ;; Hardware stack levels required when called:    2
  5602 ;; This function calls:
  5603 ;;		_LCDBusyLoop
  5604 ;; This function is called by:
  5605 ;;		_LCDInit
  5606 ;;		_LCDLoadCostum
  5607 ;;		_LCDWriteString
  5608 ;;		_LCDWriteInt
  5609 ;;		_LCDGotoXY
  5610 ;;		_main
  5611 ;;		_lcd_start_up
  5612 ;;		_lcd_screensaver
  5613 ;;		_LCDWriteSmartString
  5614 ;;		_LCDWriteBin
  5615 ;;		_LCDWriteHex
  5616 ;; This function uses a non-reentrant model
  5617 ;;
  5618                           
  5619                           	psect	text19
  5620  0012CE                     __ptext19:
  5621                           	opt stack 0
  5622  0012CE                     _LCDByte:
  5623                           	opt stack 25
  5624                           
  5625                           ;incstack = 0
  5626                           ;LCDByte@c stored from wreg
  5627  0012CE  6E46               	movwf	LCDByte@c,c
  5628                           
  5629                           ;lcd_hd44780.c: 96: uint8_t hn, ln;
  5630                           ;lcd_hd44780.c: 97: uint8_t temp;
  5631                           ;lcd_hd44780.c: 99: hn = c >> 4;
  5632  0012D0  3846               	swapf	LCDByte@c,w,c
  5633  0012D2  0B0F               	andlw	15
  5634  0012D4  6E44               	movwf	LCDByte@hn,c
  5635                           
  5636                           ;lcd_hd44780.c: 100: ln = (c & 0x0F);
  5637  0012D6  5046               	movf	LCDByte@c,w,c
  5638  0012D8  0B0F               	andlw	15
  5639  0012DA  6E45               	movwf	LCDByte@ln,c
  5640                           
  5641                           ;lcd_hd44780.c: 102: if (isdata == 0)
  5642  0012DC  6642               	tstfsz	LCDByte@isdata,c
  5643  0012DE  D002               	goto	l37
  5644                           
  5645                           ;lcd_hd44780.c: 103: (PORTCbits.RC0=0);
  5646  0012E0  9082               	bcf	3970,0,c	;volatile
  5647  0012E2  D001               	goto	l38
  5648  0012E4                     l37:
  5649                           
  5650                           ;lcd_hd44780.c: 104: else
  5651                           ;lcd_hd44780.c: 105: (PORTCbits.RC0=1);
  5652  0012E4  8082               	bsf	3970,0,c	;volatile
  5653  0012E6                     l38:
  5654                           
  5655                           ;lcd_hd44780.c: 107: _delay((unsigned long)((0.5)*(48000000/4000000.0)));
  5656  0012E6  D000               	nop2		;2 cycle nop
  5657  0012E8  D000               	nop2		;2 cycle nop
  5658  0012EA  D000               	nop2		;2 cycle nop
  5659                           
  5660                           ;lcd_hd44780.c: 109: (PORTCbits.RC2=1);
  5661  0012EC  8482               	bsf	3970,2,c	;volatile
  5662                           
  5663                           ;lcd_hd44780.c: 113: temp = (PORTA & (~(0X0F << 1))) | ((hn << 1));
  5664  0012EE  90D8               	bcf	status,0,c
  5665  0012F0  3444               	rlcf	LCDByte@hn,w,c
  5666  0012F2  6E43               	movwf	??_LCDByte& (0+255),c
  5667  0012F4  5080               	movf	3968,w,c	;volatile
  5668  0012F6  0BE1               	andlw	225
  5669  0012F8  1043               	iorwf	??_LCDByte,w,c
  5670  0012FA  6E47               	movwf	LCDByte@temp,c
  5671                           
  5672                           ;lcd_hd44780.c: 114: PORTA = temp;
  5673  0012FC  C047  FF80         	movff	LCDByte@temp,3968	;volatile
  5674                           
  5675                           ;lcd_hd44780.c: 116: _delay((unsigned long)((1)*(48000000/4000000.0)));
  5676  001300  0E04               	movlw	4
  5677  001302                     u3387:
  5678  001302  2EE8               	decfsz	wreg,f,c
  5679  001304  D7FE               	goto	u3387
  5680                           
  5681                           ;lcd_hd44780.c: 120: (PORTCbits.RC2=0);
  5682  001306  9482               	bcf	3970,2,c	;volatile
  5683                           
  5684                           ;lcd_hd44780.c: 122: _delay((unsigned long)((1)*(48000000/4000000.0)));
  5685  001308  0E04               	movlw	4
  5686  00130A                     u3397:
  5687  00130A  2EE8               	decfsz	wreg,f,c
  5688  00130C  D7FE               	goto	u3397
  5689                           
  5690                           ;lcd_hd44780.c: 125: (PORTCbits.RC2=1);
  5691  00130E  8482               	bsf	3970,2,c	;volatile
  5692                           
  5693                           ;lcd_hd44780.c: 127: temp = (PORTA & (~(0X0F << 1))) | ((ln << 1));
  5694  001310  90D8               	bcf	status,0,c
  5695  001312  3445               	rlcf	LCDByte@ln,w,c
  5696  001314  6E43               	movwf	??_LCDByte& (0+255),c
  5697  001316  5080               	movf	3968,w,c	;volatile
  5698  001318  0BE1               	andlw	225
  5699  00131A  1043               	iorwf	??_LCDByte,w,c
  5700  00131C  6E47               	movwf	LCDByte@temp,c
  5701                           
  5702                           ;lcd_hd44780.c: 129: PORTA = temp;
  5703  00131E  C047  FF80         	movff	LCDByte@temp,3968	;volatile
  5704                           
  5705                           ;lcd_hd44780.c: 131: _delay((unsigned long)((1)*(48000000/4000000.0)));
  5706  001322  0E04               	movlw	4
  5707  001324                     u3407:
  5708  001324  2EE8               	decfsz	wreg,f,c
  5709  001326  D7FE               	goto	u3407
  5710                           
  5711                           ;lcd_hd44780.c: 135: (PORTCbits.RC2=0);
  5712  001328  9482               	bcf	3970,2,c	;volatile
  5713                           
  5714                           ;lcd_hd44780.c: 137: _delay((unsigned long)((1)*(48000000/4000000.0)));
  5715  00132A  0E04               	movlw	4
  5716  00132C                     u3417:
  5717  00132C  2EE8               	decfsz	wreg,f,c
  5718  00132E  D7FE               	goto	u3417
  5719                           
  5720                           ;lcd_hd44780.c: 139: LCDBusyLoop();
  5721  001330  EC31  F009         	call	_LCDBusyLoop	;wreg free
  5722  001334  0012               	return	
  5723  001336                     __end_of_LCDByte:
  5724                           	opt stack 0
  5725                           tblptru	equ	0xFF8
  5726                           tblptrh	equ	0xFF7
  5727                           tblptrl	equ	0xFF6
  5728                           tablat	equ	0xFF5
  5729                           prodh	equ	0xFF4
  5730                           prodl	equ	0xFF3
  5731                           intcon	equ	0xFF2
  5732                           indf0	equ	0xFEF
  5733                           postinc0	equ	0xFEE
  5734                           fsr0h	equ	0xFEA
  5735                           fsr0l	equ	0xFE9
  5736                           wreg	equ	0xFE8
  5737                           postinc1	equ	0xFE6
  5738                           postdec1	equ	0xFE5
  5739                           fsr1l	equ	0xFE1
  5740                           indf2	equ	0xFDF
  5741                           postinc2	equ	0xFDE
  5742                           fsr2h	equ	0xFDA
  5743                           fsr2l	equ	0xFD9
  5744                           status	equ	0xFD8
  5745                           
  5746 ;; *************** function _LCDBusyLoop *****************
  5747 ;; Defined at:
  5748 ;;		line 142 in file "lcd_hd44780.c"
  5749 ;; Parameters:    Size  Location     Type
  5750 ;;		None
  5751 ;; Auto vars:     Size  Location     Type
  5752 ;;  status          1   16[COMRAM] unsigned char 
  5753 ;;  temp            1   15[COMRAM] unsigned char 
  5754 ;;  busy            1   14[COMRAM] unsigned char 
  5755 ;; Return value:  Size  Location     Type
  5756 ;;		None               void
  5757 ;; Registers used:
  5758 ;;		wreg, status,2, status,0
  5759 ;; Tracked objects:
  5760 ;;		On entry : 0/0
  5761 ;;		On exit  : 0/0
  5762 ;;		Unchanged: 0/0
  5763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5764 ;;      Params:         0       0       0       0       0       0       0       0       0
  5765 ;;      Locals:         3       0       0       0       0       0       0       0       0
  5766 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5767 ;;      Totals:         3       0       0       0       0       0       0       0       0
  5768 ;;Total ram usage:        3 bytes
  5769 ;; Hardware stack levels used:    1
  5770 ;; Hardware stack levels required when called:    1
  5771 ;; This function calls:
  5772 ;;		Nothing
  5773 ;; This function is called by:
  5774 ;;		_LCDByte
  5775 ;;		_LCDInit
  5776 ;; This function uses a non-reentrant model
  5777 ;;
  5778                           
  5779                           	psect	text20
  5780  001262                     __ptext20:
  5781                           	opt stack 0
  5782  001262                     _LCDBusyLoop:
  5783                           	opt stack 25
  5784                           
  5785                           ;lcd_hd44780.c: 145: uint8_t busy, status = 0x00, temp;
  5786                           
  5787                           ;incstack = 0
  5788  001262  0E00               	movlw	0
  5789  001264  6E41               	movwf	LCDBusyLoop@status,c
  5790                           
  5791                           ;lcd_hd44780.c: 148: TRISA |= (0x0f << 1);
  5792  001266  0E1E               	movlw	30
  5793  001268  1292               	iorwf	3986,f,c	;volatile
  5794                           
  5795                           ;lcd_hd44780.c: 151: (PORTCbits.RC1=1);
  5796  00126A  8282               	bsf	3970,1,c	;volatile
  5797                           
  5798                           ;lcd_hd44780.c: 152: (PORTCbits.RC0=0);
  5799  00126C  9082               	bcf	3970,0,c	;volatile
  5800                           
  5801                           ;lcd_hd44780.c: 156: _delay((unsigned long)((0.5)*(48000000/4000000.0)));
  5802  00126E  D000               	nop2		;2 cycle nop
  5803  001270  D000               	nop2		;2 cycle nop
  5804  001272  D000               	nop2		;2 cycle nop
  5805  001274                     l3367:
  5806                           
  5807                           ;lcd_hd44780.c: 161: (PORTCbits.RC2=1);
  5808  001274  8482               	bsf	3970,2,c	;volatile
  5809                           
  5810                           ;lcd_hd44780.c: 164: _delay((unsigned long)((0.5)*(48000000/4000000.0)));
  5811  001276  D000               	nop2		;2 cycle nop
  5812  001278  D000               	nop2		;2 cycle nop
  5813  00127A  D000               	nop2		;2 cycle nop
  5814                           
  5815                           ;lcd_hd44780.c: 166: status = (PORTA >> 1);
  5816  00127C  90D8               	bcf	status,0,c
  5817  00127E  3080               	rrcf	3968,w,c	;volatile
  5818  001280  6E41               	movwf	LCDBusyLoop@status,c
  5819                           
  5820                           ;lcd_hd44780.c: 167: status = status << 4;
  5821  001282  3841               	swapf	LCDBusyLoop@status,w,c
  5822  001284  0BF0               	andlw	240
  5823  001286  6E41               	movwf	LCDBusyLoop@status,c
  5824                           
  5825                           ;lcd_hd44780.c: 169: _delay((unsigned long)((0.5)*(48000000/4000000.0)));
  5826  001288  D000               	nop2		;2 cycle nop
  5827  00128A  D000               	nop2		;2 cycle nop
  5828  00128C  D000               	nop2		;2 cycle nop
  5829                           
  5830                           ;lcd_hd44780.c: 172: (PORTCbits.RC2=0);
  5831  00128E  9482               	bcf	3970,2,c	;volatile
  5832                           
  5833                           ;lcd_hd44780.c: 173: _delay((unsigned long)((1)*(48000000/4000000.0)));
  5834  001290  0E04               	movlw	4
  5835  001292                     u3427:
  5836  001292  2EE8               	decfsz	wreg,f,c
  5837  001294  D7FE               	goto	u3427
  5838                           
  5839                           ;lcd_hd44780.c: 175: (PORTCbits.RC2=1);
  5840  001296  8482               	bsf	3970,2,c	;volatile
  5841                           
  5842                           ;lcd_hd44780.c: 176: _delay((unsigned long)((0.5)*(48000000/4000000.0)));
  5843  001298  D000               	nop2		;2 cycle nop
  5844  00129A  D000               	nop2		;2 cycle nop
  5845  00129C  D000               	nop2		;2 cycle nop
  5846                           
  5847                           ;lcd_hd44780.c: 178: temp = (PORTA >> 1);
  5848  00129E  90D8               	bcf	status,0,c
  5849  0012A0  3080               	rrcf	3968,w,c	;volatile
  5850  0012A2  6E40               	movwf	LCDBusyLoop@temp,c
  5851                           
  5852                           ;lcd_hd44780.c: 179: temp &= 0x0F;
  5853  0012A4  0E0F               	movlw	15
  5854  0012A6  1640               	andwf	LCDBusyLoop@temp,f,c
  5855                           
  5856                           ;lcd_hd44780.c: 181: status = status | temp;
  5857  0012A8  5041               	movf	LCDBusyLoop@status,w,c
  5858  0012AA  1040               	iorwf	LCDBusyLoop@temp,w,c
  5859  0012AC  6E41               	movwf	LCDBusyLoop@status,c
  5860                           
  5861                           ;lcd_hd44780.c: 183: busy = status & 0b10000000;
  5862  0012AE  5041               	movf	LCDBusyLoop@status,w,c
  5863  0012B0  0B80               	andlw	128
  5864  0012B2  6E3F               	movwf	LCDBusyLoop@busy,c
  5865                           
  5866                           ;lcd_hd44780.c: 185: _delay((unsigned long)((0.5)*(48000000/4000000.0)));
  5867  0012B4  D000               	nop2		;2 cycle nop
  5868  0012B6  D000               	nop2		;2 cycle nop
  5869  0012B8  D000               	nop2		;2 cycle nop
  5870                           
  5871                           ;lcd_hd44780.c: 187: (PORTCbits.RC2=0);
  5872  0012BA  9482               	bcf	3970,2,c	;volatile
  5873                           
  5874                           ;lcd_hd44780.c: 188: _delay((unsigned long)((1)*(48000000/4000000.0)));
  5875  0012BC  0E04               	movlw	4
  5876  0012BE                     u3437:
  5877  0012BE  2EE8               	decfsz	wreg,f,c
  5878  0012C0  D7FE               	goto	u3437
  5879                           
  5880                           ;lcd_hd44780.c: 189: } while (busy);
  5881  0012C2  663F               	tstfsz	LCDBusyLoop@busy,c
  5882  0012C4  D7D7               	goto	l3367
  5883                           
  5884                           ;lcd_hd44780.c: 191: (PORTCbits.RC1=0);
  5885  0012C6  9282               	bcf	3970,1,c	;volatile
  5886                           
  5887                           ;lcd_hd44780.c: 194: TRISA &= (~(0x0F << 1));
  5888  0012C8  0EE1               	movlw	225
  5889  0012CA  1692               	andwf	3986,f,c	;volatile
  5890  0012CC  0012               	return	
  5891  0012CE                     __end_of_LCDBusyLoop:
  5892                           	opt stack 0
  5893                           tblptru	equ	0xFF8
  5894                           tblptrh	equ	0xFF7
  5895                           tblptrl	equ	0xFF6
  5896                           tablat	equ	0xFF5
  5897                           prodh	equ	0xFF4
  5898                           prodl	equ	0xFF3
  5899                           intcon	equ	0xFF2
  5900                           indf0	equ	0xFEF
  5901                           postinc0	equ	0xFEE
  5902                           fsr0h	equ	0xFEA
  5903                           fsr0l	equ	0xFE9
  5904                           wreg	equ	0xFE8
  5905                           postinc1	equ	0xFE6
  5906                           postdec1	equ	0xFE5
  5907                           fsr1l	equ	0xFE1
  5908                           indf2	equ	0xFDF
  5909                           postinc2	equ	0xFDE
  5910                           fsr2h	equ	0xFDA
  5911                           fsr2l	equ	0xFD9
  5912                           status	equ	0xFD8
  5913                           
  5914 ;; *************** function _ISR *****************
  5915 ;; Defined at:
  5916 ;;		line 409 in file "main_lcd.c"
  5917 ;; Parameters:    Size  Location     Type
  5918 ;;		None
  5919 ;; Auto vars:     Size  Location     Type
  5920 ;;		None
  5921 ;; Return value:  Size  Location     Type
  5922 ;;		None               void
  5923 ;; Registers used:
  5924 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5925 ;; Tracked objects:
  5926 ;;		On entry : 0/0
  5927 ;;		On exit  : 0/0
  5928 ;;		Unchanged: 0/0
  5929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5930 ;;      Params:         0       0       0       0       0       0       0       0       0
  5931 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5932 ;;      Temps:         14       0       0       0       0       0       0       0       0
  5933 ;;      Totals:        14       0       0       0       0       0       0       0       0
  5934 ;;Total ram usage:       14 bytes
  5935 ;; Hardware stack levels used:    1
  5936 ;; This function calls:
  5937 ;;		Nothing
  5938 ;; This function is called by:
  5939 ;;		Interrupt level 2
  5940 ;; This function uses a non-reentrant model
  5941 ;;
  5942                           
  5943                           	psect	intcode
  5944  000008                     __pintcode:
  5945                           	opt stack 0
  5946  000008                     _ISR:
  5947                           	opt stack 25
  5948                           
  5949                           ;incstack = 0
  5950  000008  CFFA F031          	movff	pclath,??_ISR
  5951  00000C  CFFB F032          	movff	pclatu,??_ISR+1
  5952  000010  CFE9 F033          	movff	fsr0l,??_ISR+2
  5953  000014  ED1B  F008         	call	int_func,f	;refresh shadow registers
  5954                           pclatu	equ	0xFFB
  5955                           pclath	equ	0xFFA
  5956                           tblptru	equ	0xFF8
  5957                           tblptrh	equ	0xFF7
  5958                           tblptrl	equ	0xFF6
  5959                           tablat	equ	0xFF5
  5960                           prodh	equ	0xFF4
  5961                           prodl	equ	0xFF3
  5962                           intcon	equ	0xFF2
  5963                           indf0	equ	0xFEF
  5964                           postinc0	equ	0xFEE
  5965                           fsr0h	equ	0xFEA
  5966                           fsr0l	equ	0xFE9
  5967                           wreg	equ	0xFE8
  5968                           postinc1	equ	0xFE6
  5969                           postdec1	equ	0xFE5
  5970                           fsr1l	equ	0xFE1
  5971                           indf2	equ	0xFDF
  5972                           postinc2	equ	0xFDE
  5973                           fsr2h	equ	0xFDA
  5974                           fsr2l	equ	0xFD9
  5975                           status	equ	0xFD8
  5976                           
  5977                           	psect	intcode_body
  5978  001036                     __pintcode_body:
  5979                           	opt stack 25
  5980  001036                     int_func:
  5981                           	opt stack 25
  5982  001036  0006               	pop		; remove dummy address from shadow register refresh
  5983  001038  CFEA F034          	movff	fsr0h,??_ISR+3
  5984  00103C  CFE1 F035          	movff	fsr1l,??_ISR+4
  5985  001040  CFE2 F036          	movff	fsr1h,??_ISR+5
  5986  001044  CFD9 F037          	movff	fsr2l,??_ISR+6
  5987  001048  CFDA F038          	movff	fsr2h,??_ISR+7
  5988  00104C  CFF3 F039          	movff	prodl,??_ISR+8
  5989  001050  CFF4 F03A          	movff	prodh,??_ISR+9
  5990  001054  CFF6 F03B          	movff	tblptrl,??_ISR+10
  5991  001058  CFF7 F03C          	movff	tblptrh,??_ISR+11
  5992  00105C  CFF8 F03D          	movff	tblptru,??_ISR+12
  5993  001060  CFF5 F03E          	movff	tablat,??_ISR+13
  5994                           
  5995                           ;main_lcd.c: 410: if (PIR1bits.RCIF) {
  5996  001064  AA9E               	btfss	3998,5,c	;volatile
  5997  001066  D013               	goto	i2l374
  5998                           
  5999                           ;main_lcd.c: 411: uart_rx_block[uart_block_count] = RCREG;
  6000  001068  5028               	movf	_uart_block_count,w,c
  6001  00106A  0D01               	mullw	1
  6002  00106C  0E09               	movlw	low _uart_rx_block
  6003  00106E  24F3               	addwf	prodl,w,c
  6004  001070  6ED9               	movwf	fsr2l,c
  6005  001072  0E00               	movlw	high _uart_rx_block
  6006  001074  20F4               	addwfc	prodh,w,c
  6007  001076  6EDA               	movwf	fsr2h,c
  6008  001078  CFAE FFDF          	movff	4014,indf2	;volatile
  6009                           
  6010                           ;main_lcd.c: 412: uart_block_count++;
  6011  00107C  2A28               	incf	_uart_block_count,f,c
  6012                           
  6013                           ;main_lcd.c: 413: if (uart_block_count == 8) {
  6014  00107E  5028               	movf	_uart_block_count,w,c
  6015  001080  0A08               	xorlw	8
  6016  001082  A4D8               	btfss	status,2,c
  6017  001084  D004               	goto	i2l374
  6018                           
  6019                           ;main_lcd.c: 414: uart_block_count = 0;
  6020  001086  0E00               	movlw	0
  6021  001088  6E28               	movwf	_uart_block_count,c
  6022                           
  6023                           ;main_lcd.c: 415: inputs = (0xFF & 0x10);
  6024  00108A  0E10               	movlw	16
  6025  00108C  6E1F               	movwf	_inputs,c
  6026  00108E                     i2l374:
  6027  00108E  C03E  FFF5         	movff	??_ISR+13,tablat
  6028  001092  C03D  FFF8         	movff	??_ISR+12,tblptru
  6029  001096  C03C  FFF7         	movff	??_ISR+11,tblptrh
  6030  00109A  C03B  FFF6         	movff	??_ISR+10,tblptrl
  6031  00109E  C03A  FFF4         	movff	??_ISR+9,prodh
  6032  0010A2  C039  FFF3         	movff	??_ISR+8,prodl
  6033  0010A6  C038  FFDA         	movff	??_ISR+7,fsr2h
  6034  0010AA  C037  FFD9         	movff	??_ISR+6,fsr2l
  6035  0010AE  C036  FFE2         	movff	??_ISR+5,fsr1h
  6036  0010B2  C035  FFE1         	movff	??_ISR+4,fsr1l
  6037  0010B6  C034  FFEA         	movff	??_ISR+3,fsr0h
  6038  0010BA  C033  FFE9         	movff	??_ISR+2,fsr0l
  6039  0010BE  C032  FFFB         	movff	??_ISR+1,pclatu
  6040  0010C2  C031  FFFA         	movff	??_ISR,pclath
  6041  0010C6  0011               	retfie		f
  6042  0010C8                     __end_of_ISR:
  6043                           	opt stack 0
  6044                           pclatu	equ	0xFFB
  6045                           pclath	equ	0xFFA
  6046                           tblptru	equ	0xFF8
  6047                           tblptrh	equ	0xFF7
  6048                           tblptrl	equ	0xFF6
  6049                           tablat	equ	0xFF5
  6050                           prodh	equ	0xFF4
  6051                           prodl	equ	0xFF3
  6052                           intcon	equ	0xFF2
  6053                           indf0	equ	0xFEF
  6054                           postinc0	equ	0xFEE
  6055                           fsr0h	equ	0xFEA
  6056                           fsr0l	equ	0xFE9
  6057                           wreg	equ	0xFE8
  6058                           postinc1	equ	0xFE6
  6059                           postdec1	equ	0xFE5
  6060                           fsr1h	equ	0xFE2
  6061                           fsr1l	equ	0xFE1
  6062                           indf2	equ	0xFDF
  6063                           postinc2	equ	0xFDE
  6064                           fsr2h	equ	0xFDA
  6065                           fsr2l	equ	0xFD9
  6066                           status	equ	0xFD8
  6067                           pclatu	equ	0xFFB
  6068                           pclath	equ	0xFFA
  6069                           tblptru	equ	0xFF8
  6070                           tblptrh	equ	0xFF7
  6071                           tblptrl	equ	0xFF6
  6072                           tablat	equ	0xFF5
  6073                           prodh	equ	0xFF4
  6074                           prodl	equ	0xFF3
  6075                           intcon	equ	0xFF2
  6076                           indf0	equ	0xFEF
  6077                           postinc0	equ	0xFEE
  6078                           fsr0h	equ	0xFEA
  6079                           fsr0l	equ	0xFE9
  6080                           wreg	equ	0xFE8
  6081                           postinc1	equ	0xFE6
  6082                           postdec1	equ	0xFE5
  6083                           fsr1h	equ	0xFE2
  6084                           fsr1l	equ	0xFE1
  6085                           indf2	equ	0xFDF
  6086                           postinc2	equ	0xFDE
  6087                           fsr2h	equ	0xFDA
  6088                           fsr2l	equ	0xFD9
  6089                           status	equ	0xFD8
  6090                           
  6091                           	psect	rparam
  6092  0000                     pclatu	equ	0xFFB
  6093                           pclath	equ	0xFFA
  6094                           tblptru	equ	0xFF8
  6095                           tblptrh	equ	0xFF7
  6096                           tblptrl	equ	0xFF6
  6097                           tablat	equ	0xFF5
  6098                           prodh	equ	0xFF4
  6099                           prodl	equ	0xFF3
  6100                           intcon	equ	0xFF2
  6101                           indf0	equ	0xFEF
  6102                           postinc0	equ	0xFEE
  6103                           fsr0h	equ	0xFEA
  6104                           fsr0l	equ	0xFE9
  6105                           wreg	equ	0xFE8
  6106                           postinc1	equ	0xFE6
  6107                           postdec1	equ	0xFE5
  6108                           fsr1h	equ	0xFE2
  6109                           fsr1l	equ	0xFE1
  6110                           indf2	equ	0xFDF
  6111                           postinc2	equ	0xFDE
  6112                           fsr2h	equ	0xFDA
  6113                           fsr2l	equ	0xFD9
  6114                           status	equ	0xFD8


Data Sizes:
    Strings     292
    Constant    335
    Data        22
    BSS         48
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     26      81
    BANK0           160     12      28
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    uart_write_block@data	PTR unsigned char  size(2) Largest target is 8
		 -> uart_tx_block(COMRAM[8]), 

    lcd_start_up@st	PTR const unsigned char  size(2) Largest target is 6
		 -> lcd_start_up@start(BANK0[6]), 

    LCDWriteString@msg	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_54(CODE[3]), STR_53(CODE[3]), STR_52(CODE[3]), STR_51(CODE[3]), 
		 -> STR_50(CODE[3]), STR_49(CODE[3]), STR_48(CODE[3]), STR_47(CODE[3]), 
		 -> STR_46(CODE[3]), STR_45(CODE[3]), STR_44(CODE[3]), STR_43(CODE[3]), 
		 -> STR_42(CODE[2]), STR_41(CODE[2]), STR_40(CODE[11]), STR_39(CODE[11]), 
		 -> STR_38(CODE[3]), STR_37(CODE[3]), STR_36(CODE[3]), STR_35(CODE[3]), 
		 -> STR_34(CODE[3]), STR_33(CODE[3]), STR_32(CODE[3]), STR_31(CODE[3]), 
		 -> STR_30(CODE[3]), lcd_start_up@start(BANK0[6]), STR_29(CODE[17]), STR_28(CODE[17]), 
		 -> STR_27(CODE[17]), STR_26(CODE[17]), STR_25(CODE[17]), STR_24(CODE[17]), 
		 -> STR_23(CODE[17]), STR_22(CODE[17]), STR_21(CODE[17]), STR_20(CODE[10]), 
		 -> STR_19(CODE[10]), STR_18(CODE[9]), STR_17(CODE[9]), STR_16(CODE[9]), 
		 -> STR_15(CODE[9]), STR_14(CODE[9]), STR_13(CODE[9]), STR_12(CODE[9]), 
		 -> STR_11(CODE[9]), STR_10(CODE[9]), STR_9(CODE[9]), STR_8(CODE[9]), 
		 -> STR_7(CODE[9]), STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[17]), 
		 -> STR_3(CODE[17]), STR_2(CODE[17]), STR_1(CODE[17]), 


Critical Paths under _main in COMRAM

    _lcd_update->_LCDWriteInt
    _lcd_update->_LCDWriteString
    _lcd_screensaver->_LCDWriteString
    _lcd_connection->_LCDWriteString
    _LCDLoadCostum->_LCDByte
    _LCDWriteInt->_LCDByte
    _lcd_start_up->_LCDWriteString
    _LCDWriteString->_LCDByte
    _LCDGotoXY->_LCDByte
    _init_pic->_init_uart_m
    _LCDInit->_LCDByte
    _LCDByte->_LCDBusyLoop

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_lcd_start_up
    _lcd_update->_LCDWriteInt
    _lcd_screensaver->_LCDWriteString
    _lcd_connection->_LCDWriteString
    _lcd_start_up->_LCDWriteString

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   92179
                                             11 BANK0      1     1      0
                            _LCDByte
                            _LCDInit
                      _enable_uart_m
                           _init_pic
                       _lcd_start_up
                         _lcd_update
                       _read_buttons
                   _uart_write_block
 ---------------------------------------------------------------------------------
 (1) _uart_write_block                                     3     0      3     454
                                             14 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (1) _read_buttons                                         5     5      0       0
                                             14 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (1) _lcd_update                                           0     0      0   64535
                          _LCDGotoXY
                        _LCDWriteInt
                     _LCDWriteString
                        __delay_10ms
                     _lcd_connection
                    _lcd_screensaver
 ---------------------------------------------------------------------------------
 (2) _lcd_screensaver                                      0     0      0   23012
                            _LCDByte
                          _LCDGotoXY
                      _LCDLoadCostum
                     _LCDWriteString
 ---------------------------------------------------------------------------------
 (2) _lcd_connection                                       1     1      0   20298
                                              1 BANK0      1     1      0
                          _LCDGotoXY
                      _LCDLoadCostum
                     _LCDWriteString
                        __delay_10ms
 ---------------------------------------------------------------------------------
 (3) _LCDLoadCostum                                        2     2      0    3956
                                             23 COMRAM     2     2      0
                            _LCDByte
 ---------------------------------------------------------------------------------
 (2) _LCDWriteInt                                         14    11      3    4883
                                             23 COMRAM     3     0      3
                                              0 BANK0     11    11      0
                            _LCDByte
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4     428
                                             14 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     432
                                             14 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _lcd_start_up                                        10    10      0   19867
                                              1 BANK0     10    10      0
                            _LCDByte
                          _LCDGotoXY
                     _LCDWriteString
                        __delay_10ms
 ---------------------------------------------------------------------------------
 (3) __delay_10ms                                          3     1      2     617
                                             14 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _LCDWriteString                                       4     2      2    7823
                                             23 COMRAM     3     1      2
                                              0 BANK0      1     1      0
                            _LCDByte
 ---------------------------------------------------------------------------------
 (3) _LCDGotoXY                                            2     1      1    7902
                                             23 COMRAM     2     1      1
                            _LCDByte
 ---------------------------------------------------------------------------------
 (1) _init_pic                                             0     0      0     355
                        _init_timer0
                        _init_uart_m
 ---------------------------------------------------------------------------------
 (2) _init_uart_m                                          4     0      4     204
                                             14 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (2) _init_timer0                                          3     1      2     151
                                             14 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _enable_uart_m                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCDInit                                              2     2      0    3637
                                             23 COMRAM     2     2      0
                        _LCDBusyLoop
                            _LCDByte
 ---------------------------------------------------------------------------------
 (4) _LCDByte                                              6     5      1    3331
                                             17 COMRAM     6     5      1
                        _LCDBusyLoop
 ---------------------------------------------------------------------------------
 (5) _LCDBusyLoop                                          3     3      0     176
                                             14 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR                                                 14    14      0       0
                                              0 COMRAM    14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCDByte
     _LCDBusyLoop
   _LCDInit
     _LCDBusyLoop
     _LCDByte
       _LCDBusyLoop
   _enable_uart_m
   _init_pic
     _init_timer0
     _init_uart_m
   _lcd_start_up
     _LCDByte
       _LCDBusyLoop
     _LCDGotoXY
       _LCDByte
         _LCDBusyLoop
     _LCDWriteString
       _LCDByte
         _LCDBusyLoop
     __delay_10ms
   _lcd_update
     _LCDGotoXY
       _LCDByte
         _LCDBusyLoop
     _LCDWriteInt
       _LCDByte
         _LCDBusyLoop
       ___awdiv
       ___awmod
     _LCDWriteString
       _LCDByte
         _LCDBusyLoop
     __delay_10ms
     _lcd_connection
       _LCDGotoXY
         _LCDByte
           _LCDBusyLoop
       _LCDLoadCostum
         _LCDByte
           _LCDBusyLoop
       _LCDWriteString
         _LCDByte
           _LCDBusyLoop
       __delay_10ms
     _lcd_screensaver
       _LCDByte
         _LCDBusyLoop
       _LCDGotoXY
         _LCDByte
           _LCDBusyLoop
       _LCDLoadCostum
         _LCDByte
           _LCDBusyLoop
       _LCDWriteString
         _LCDByte
           _LCDBusyLoop
   _read_buttons
   _uart_write_block

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      C      1C       5       17.5%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     1A      51       1       85.3%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      6D      20        0.0%
DATA                 0      0      6D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Mon Mar  9 16:48:00 2015

             ?_LCDBusyLoop 0031                          _i 001E                          _j 0020  
     __size_of__delay_10ms 0022                         l31 1480                         l37 12E4  
                       l38 12E6                         l72 0CBA             ?_LCDLoadCostum 0031  
             ___awdiv@sign 0044                __CFG_BORV$3 000000               __CFG_CP0$OFF 000000  
             __CFG_CP1$OFF 000000               __CFG_CP2$OFF 000000               __CFG_CP3$OFF 000000  
              __CFG_LVP$ON 000000              ?_lcd_start_up 0031                        l109 0DFC  
                      l142 140E                        l412 082C                        l433 0B5C  
                      l450 09DC                        l346 0496                        l428 0B50  
                      l380 1260                        l348 0390                        l445 09D0  
                      l537 1498               __CFG_CPB$OFF 000000                        _PR2 000FCB  
             __CFG_CPD$OFF 000000                        _ISR 0008                        u455 1448  
                      u456 144A                        u720 11EC                        u465 1456  
                      u466 1458                        u730 11F8                        u475 142C  
                      u476 142E                        u740 120A                        u485 1436  
                      u486 1438                        u750 121E                        u726 11EE  
                      u736 11FA                        u746 120C                        u756 1220  
             __CFG_BOR$OFF 000000               ___awmod@sign 0044                        prod 000FF3  
                      wreg 000FE8    LCDWriteInt@field_length 004A            __end_of_LCDByte 1336  
          __end_of_LCDInit 11E0               ?_LCDWriteInt 0048                       ?_ISR 0031  
              LCDByte@temp 0047               __CFG_WDT$OFF 000000                       l4015 0FD2  
                     l4007 07D0                       l4027 1022                       l4211 006C  
                     l4029 102E                       l1709 124C                       l4213 008E  
                     l1719 125E                       l4311 0206                       l4303 01CE  
                     l4231 00DE                       l3433 146A                       l3505 0C72  
                     l3513 0C98                       l4217 0098                       l3451 0B9E  
                     l4331 0238                       l4323 0224                       l4315 0210  
                     l3533 0EAA                       l3517 0E00                       l3621 1122  
                     l3613 1108                       l3445 0B78                       l4413 03B2  
                     l4309 01D8                       l4261 014A                       l4253 0136  
                     l4237 00E8                       l4229 00BC                       l3367 1274  
                     l3543 13DA                       l3551 13E8                       l3535 0ED2  
                     l3463 0BD0                       l3439 0B6C                       l1871 148C  
                     l4431 03F6                       l4423 03D4                       l4351 027C  
                     l4335 0244                       l4327 022E                       l4319 021A  
                     l4271 017E                       l4239 0106                       l4247 0110  
                     l4191 0038                       l3545 13DE                       l3553 1402  
                     l3529 0E76                       l3537 0ED6                       l3633 114E  
                     l3625 1136                       l3617 1116                       l3609 10EC  
                     l3481 0C0E                       l3457 0BAA                       l3721 0AD0  
                     l4345 025C                       l4265 0154                       l4257 0140  
                     l4249 012C                       l4185 0028                       l3547 13E2  
                     l3571 0F42                       l3619 111E                       l3475 0C02  
                     l1875 14A2                       l4443 0410                       l4371 02A8  
                     l4363 0298                       l4355 0286                       l4347 0272  
                     l4339 0252                       l4291 01B0                       l4283 019C  
                     l4275 0188                       l4195 0042                       l4451 043A  
                     l3581 0F64                       l3565 0F22                       l3629 1140  
                     l3661 0D6E                       l3493 0C40                       l3469 0BDC  
                     l3733 0B12                       l3725 0AE6                       l4445 0416  
                     l4437 0402                       l4269 015C                       l4381 02CE  
                     l3663 0D74                       l3655 0D5E                       l3487 0C34  
                     l3743 0B42                       l3831 09C2                       l3911 0536  
                     l4383 032C                       l4295 01BA                       l4287 01A6  
                     l4279 0192                       l4199 004C                       l3577 0F58  
                     l3593 0F8A                       l3665 0D90                       l3649 0D0E  
                     l3905 0508                       l4377 02B2                       l3579 0F60  
                     l3667 0DBA                       l3499 0C66                       l3747 0B5A  
                     l3739 0B36                       l3835 09DA                       l3755 0844  
                     l3923 0592                       l4299 01C4                       l3597 0F98  
                     l3589 0F80                       l3757 084A                       l3941 061C  
                     l3917 0564                       l3775 088E                       l3767 0870  
                     l3935 05EE                       l4399 0376                       l3881 11BA  
                     l3777 0894                       l3769 0876                       l3929 05C0  
                     l3947 064A                       l3955 0678                       l3891 04A6  
                     l3981 0754                       l3973 071A                       l3965 06E0  
                     l3957 06A6                       l3893 04AC                       l3889 04A0  
                     l3899 04DA                       l3997 07A0                       l3989 078E  
                     STR_1 7F73                       STR_2 7EFC                       STR_3 7F0D  
                     STR_4 7EDA                       STR_5 7EEB                       STR_6 7EDA  
                     STR_7 7FC7                       STR_8 7FB5                       STR_9 7FB5  
                     u2410 0E20                       u2430 0E4A                       u2417 0E16  
                     u2460 0EA4                       u2437 0E40                       u2470 0ECE  
                     u3407 1324                       u2631 0CC6                       u2480 0EF6  
                     u3417 132C                       u3427 1292                       u2467 0E9A  
                     u2740 0B4C                       u3437 12BE                       u2477 0EC4  
                     u3357 1470                       u3367 1184                       u2487 0EEC  
                     u3377 118C                       u2746 0B4E                       u3387 1302  
                     u3397 130A                       u2941 0FB8                       u2890 09CC  
                     _RCIF 007CF5                       u2896 09CE                       _main 001C  
       __size_of_LCDGotoXY 0040                       _scrs 0024                       fsr0h 000FEA  
                     fsr1h 000FE2                       indf0 000FEF                       fsr0l 000FE9  
                     fsr2h 000FDA                       fsr1l 000FE1                       indf2 000FDF  
                     fsr2l 000FD9                       pclat 000FFA                       prodh 000FF4  
                     prodl 000FF3                       start 0018           ?_lcd_screensaver 0031  
            __CFG_IESO$OFF 000000              __CFG_MCLRE$ON 000000                      ??_ISR 0031  
            __CFG_PLLDIV$5 000000             ??_lcd_start_up 004B                      ?_main 0031  
          __end_of___brght 7EDA            __end_of___awdiv 0FA2                      STR_10 7FD0  
                    STR_11 7FD0                      STR_12 7FAC                      STR_20 7F8F  
                    STR_13 7FAC                      STR_21 7F40                      STR_22 7EDA  
                    STR_30 7FE2                      STR_14 7FA3                      STR_15 7FA3  
                    STR_31 7FE5                      STR_23 7F62                      STR_40 7EE0  
                    STR_24 7EDA                      STR_32 7FEE                      STR_16 7FBE  
                    STR_17 7FBE                      STR_41 7FFA                      STR_33 7FF1  
                    STR_25 7F2F                      STR_26 7EDA                      STR_50 7FE5  
                    STR_42 7FFC                      STR_34 7FE8                      STR_18 7FD9  
                    STR_43 7FE2                      STR_51 7FE8                      STR_35 7FEB  
                    STR_19 7F99                      STR_27 7F1E                      STR_28 7EDA  
                    STR_44 7FE5                      STR_52 7FEB                      STR_36 7FF4  
          __end_of___awmod 1158                      STR_45 7FE8                      STR_53 7FEE  
                    STR_37 7FF7                      STR_29 7F51                      STR_46 7FEB  
                    STR_54 7FF1                      STR_38 7FF1                      STR_47 7FEE  
                    STR_39 7F84                      STR_48 7FF1                      STR_49 7FE2  
             LCDInit@style 0048            ___awdiv@divisor 0041                      i2l374 108E  
          ___awdiv@counter 0043                      _RCREG 000FAE                      _TMR0L 000FD6  
                    _SPBRG 000FAF                      _PORTA 000F80                      _PORTB 000F81  
            __CFG_USBDIV$2 000000                      _TRISA 000F92                      _TRISB 000F93  
                    _TRISC 000F94                      _TXREG 000FAD              __CFG_PWRT$OFF 000000  
            __CFG_WRT0$OFF 000000              __CFG_WRT1$OFF 000000               ?_init_timer0 003F  
            __CFG_WRT2$OFF 000000              __CFG_WRT3$OFF 000000               ?_init_uart_m 003F  
           __CFG_EBTR0$OFF 000000             __CFG_FCMEN$OFF 000000             __CFG_EBTR1$OFF 000000  
           __CFG_EBTR2$OFF 000000             __CFG_EBTR3$OFF 000000              __CFG_WRTB$OFF 000000  
            __CFG_WRTC$OFF 000000              __CFG_WRTD$OFF 000000             __CFG_EBTRB$OFF 000000  
                    _first 001B                      tablat 000FF5                      status 000FD8  
          __initialization 1336               __end_of_main 049E            ??_LCDLoadCostum 0048  
                   ??_main 007B          __end_of_LCDGotoXY 1410              __activetblptr 000002  
            LCDByte@isdata 0042                  ??_LCDByte 0043                  ??_LCDInit 0048  
          __CFG_CCP2MX$OFF 000000           ___awdiv@dividend 003F       uart_write_block@data 003F  
 __end_of_uart_write_block 14A8           ??_lcd_connection 0071             __CFG_XINST$OFF 000000  
           _LCDWriteString 0DFE              ?_read_buttons 0031                  ??___awdiv 0043  
           __CFG_STVREN$ON 000000                  ??___awmod 0043       __size_of_LCDBusyLoop 006C  
         __end_of_init_pic 13D0                     clear_0 133C                     _inputs 001F  
         ___awdiv@quotient 0045            ___awmod@divisor 0041            ___awmod@counter 0043  
             __pdataCOMRAM 004B              _fsm_old_state 001D              _fsm_new_state 001C  
             LCDWriteInt@i 0079               LCDWriteInt@j 0077               __mediumconst 7D8A  
                   tblptrh 000FF7                     tblptrl 000FF6                     tblptru 000FF8  
     __size_of_LCDWriteInt 0142                 __accesstop 0060    __end_of__initialization 1382  
          __CFG_PBADEN$OFF 000000       __end_of_lcd_start_up 1036     __end_of_LCDWriteString 0EFE  
                LCDByte@hn 0044                  LCDByte@ln 0045             ??_read_buttons 003F  
           __pcstackCOMRAM 0031               __pidataBANK0 14A8       __size_of_init_timer0 002C  
     __size_of_init_uart_m 002C      __end_of_enable_uart_m 14C4                 __pnvCOMRAM 0051  
          ?_LCDWriteString 0048              ??__delay_10ms 0041           LCDLoadCostum@__i 0049  
        __end_of___costum0 7DCB          __end_of___costum1 7E0B          __end_of___costum2 7E4B  
        __end_of___costum3 7E8B          __end_of___costum4 7ECB           init_timer0@presc 003F  
                  _LCDByte 12CE                    _LCDInit 1158                 _brightness 0051  
               _lcd_update 049E            __CFG_VREGEN$OFF 000000                  ?_init_pic 0031  
                  __Hparam 0000                    __Lparam 0000                    ___brght 7ECB  
                  ___awdiv 0EFE                    ___awmod 10C8   __size_of_lcd_screensaver 01B0  
                  __pcinit 1336                    __ramtop 0800        __end_of__delay_10ms 148A  
                  __ptext0 001C                    __ptext1 148A                    __ptext2 11E0  
                  __ptext3 049E                    __ptext4 082E                    __ptext5 09DE  
                  __ptext6 0B5E                    __ptext7 0CBC                    __ptext8 10C8  
                  __ptext9 0EFE                  _T0CONbits 000FD5               __size_of_ISR 10C0  
                _T2CONbits 000FCA           ___awmod@dividend 003F                  _LCDGotoXY 13D0  
     __end_of_read_buttons 1262      __size_of_lcd_start_up 0094             __pintcode_body 1036  
     end_of_initialization 1382              __Lmediumconst 7D8A                    int_func 1036  
               ??_init_pic 0043             lcd_start_up@st 0079          ?_uart_write_block 003F  
       ??_uart_write_block 0042                  _RCSTAbits 000FAB                    postdec1 000FE5  
               _scrs_speed 0026                    postinc0 000FEE                    postinc1 000FE6  
                  postinc2 000FDE      __end_of_LCDLoadCostum 0CBC         __delay_10ms@length 003F  
                _PORTAbits 000F80                  _PORTBbits 000F81                  _PORTCbits 000F82  
             _lcd_start_up 0FA2          LCDWriteString@msg 0048                  _TRISCbits 000F94  
               ?_LCDGotoXY 0048                ?_lcd_update 0031                 LCDInit@__i 0049  
                _TXSTAbits 000FAC                 LCDGotoXY@x 0049                 LCDGotoXY@y 0048  
              __delay_10ms 1468              ??_LCDBusyLoop 003F                _BAUDCONbits 000FB8  
         _uart_block_count 0028              __pidataCOMRAM 14C4        start_initialization 1336  
        ??_lcd_screensaver 004B                __end_of_ISR 10C8              ??_LCDWriteInt 0070  
         ??_LCDWriteString 004A           LCDWriteBin@F4938 0001        __size_of_lcd_update 0390  
              __pdataBANK0 0060           __CFG_LPT1OSC$OFF 000000          lcd_start_up@F5019 004B  
      __end_of_LCDBusyLoop 12CE    __size_of_lcd_connection 0180      __size_of_read_buttons 0082  
                 ?_LCDByte 0042                   ?_LCDInit 0031              ??_init_timer0 0041  
              __pbssCOMRAM 0001              ??_init_uart_m 0043                   LCDByte@c 0046  
                ___costum0 7D8B                  ___costum1 7DCB                  ___costum2 7E0B  
                ___costum3 7E4B                  ___costum4 7E8B              __pcstackBANK0 0070  
         LCDWriteHex@F4943 0016                ??_LCDGotoXY 0049        __end_of__stringdata 7FFE  
        lcd_start_up@x_pos 0078          lcd_start_up@start 0071       init_timer0@eight_bit 0041  
         LCDWriteInt@F4932 0011        __end_of_LCDWriteInt 0DFE          __size_of_init_pic 0044  
           _buttons_change 0018                  __pintcode 0008              __pmediumconst 7D8A  
             _read_buttons 11E0                   ?___awdiv 003F                   ?___awmod 003F  
   __size_of_enable_uart_m 000C            init_uart_m@baud 003F                  _main_menu 0021  
          LCDBusyLoop@busy 003F            LCDBusyLoop@temp 0040                  _read_data 0023  
     init_timer0@presc_val 0040        __end_of_init_timer0 1468        __end_of_init_uart_m 143C  
                 _PIE1bits 000F9D                   _PIR1bits 000F9E           __CFG_WDTPS$32768 000000  
              _LCDBusyLoop 1262           LCDWriteString@cc 0070          init_uart_m@RX_inv 0042  
        init_uart_m@TX_inv 0041                 _ADCON1bits 000FC1                __stringdata 7EDA  
__size_of_uart_write_block 001E     uart_write_block@length 0041           __size_of_LCDByte 0068  
         __size_of_LCDInit 0088               ??_lcd_update 004B        LCDLoadCostum@select 0048  
              _LCDWriteInt 0CBC                  copy_data0 1356                  copy_data1 1376  
            _enable_uart_m 14B8                   __Hrparam 0000                   ___HexVal 0060  
                 __Lrparam 0000               ?__delay_10ms 003F            _lcd_screensaver 082E  
         __size_of___awdiv 00A4           __size_of___awmod 0090         __end_of_lcd_update 082E  
        LCDBusyLoop@status 0041             _lcd_connection 09DE           lcd_start_up@busy 0077  
              _init_timer0 143C                _init_uart_m 1410                _buttons_old 001A  
              _buttons_new 0019                   __ptext10 0FA2                   __ptext11 1468  
                 __ptext20 1262                   __ptext12 0DFE                   __ptext13 13D0  
                 __ptext14 138C                   __ptext15 1410                   __ptext16 143C  
                 __ptext17 14B8                   __ptext18 1158                   __ptext19 12CE  
           ?_enable_uart_m 0031     __size_of_LCDLoadCostum 015E              __size_of_main 0482  
                 _init_pic 138C                   _new_data 0022              _uart_rx_block 0009  
            _uart_tx_block 0029                   _scrs_cnt 0025                   _sub_menu 0027  
   __end_of_lcd_connection 0B5E      __CFG_CPUDIV$OSC1_PLL2 000000                 _INTCONbits 000FF2  
                 intlevel2 0000             LCDWriteInt@val 0048             LCDWriteInt@str 0072  
  __end_of_lcd_screensaver 09DE            ?_lcd_connection 0031              _LCDLoadCostum 0B5E  
         _uart_write_block 148A            ??_enable_uart_m 003F         __CFG_FOSC$HSPLL_HS 000000  
  __size_of_LCDWriteString 0100  
