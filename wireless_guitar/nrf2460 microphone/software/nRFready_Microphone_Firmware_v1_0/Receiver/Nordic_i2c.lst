

HI-TECH Software PICC Macro Assembler V9.60PL3 build 3862 
                                                      Mon Oct 10 13:14:38 2011

HI-TECH Software Code Generator build 3862
     1                           	processor	16F684
     2                           	opt	pw 79
     3                           	psect	text0,local,class=CODE,delta=2
     4                           	psect	text1,local,class=CODE,delta=2
     5                           	psect	text2,local,class=CODE,delta=2
     6                           	psect	text3,local,class=CODE,delta=2
     7                           	psect	text4,local,class=CODE,delta=2
     8  0000                     
     9  0000                     
    10  0000                     
    11  0000                     
    12  0000                     
    13  0000                     
    14  0000                     
    15  0000                     
    16  0000                     
    17  0000                     
    18  0000                     
    19                           
    20                           	psect	text0
    21  0475                     _ClockEight
    22                           ;	_temp assigned to ?a_ClockEight+0
    23  0000                     _ClockEight$temp	set	?a_ClockEight
    24                           ;	_t assigned to ?a_ClockEight+1
    25  0000                     _ClockEight$t	set	?a_ClockEight+1
    26                           ;_temp stored from w
    27  0475  1283               	bcf	3,5
    28  0476  00B9               	movwf	?a_ClockEight
    29                           ;Nordic_i2c.c: 21: static void ClockEight( BYTE
      +                           temp)
    30  0477  01BA               	clrf	?a_ClockEight+1
    31  0478                     l2
    32                           ;Nordic_i2c.c: 25: {
    33  0478  1107               	bcf	7,2
    34                           ;Nordic_i2c.c: 29: if(temp & 0x80)
    35  0479  1BB9               	btfsc	?a_ClockEight,7
    36                           ;Nordic_i2c.c: 30: (RC2=1);
    37  047A  1507               	bsf	7,2
    38                           ;Nordic_i2c.c: 31: delay_us(100);
    39  047B  3064               	movlw	100
    40  047C  2431               	call	_delay_us
    41                           ;Nordic_i2c.c: 32: (RC3=1);
    42  047D  1587               	bsf	7,3
    43                           ;Nordic_i2c.c: 33: delay_us(100);
    44  047E  3064               	movlw	100
    45  047F  2431               	call	_delay_us
    46                           ;Nordic_i2c.c: 34: (RC3=0);
    47  0480  1187               	bcf	7,3
    48                           ;Nordic_i2c.c: 35: delay_us(100);
    49  0481  3064               	movlw	100
    50  0482  2431               	call	_delay_us
    51                           ;Nordic_i2c.c: 36: temp = temp<<1;
    52  0483  1003               	bcf	3,0
    53  0484  0DB9               	rlf	?a_ClockEight
    54                           ;Nordic_i2c.c: 37: (RC2=0);
    55  0485  1107               	bcf	7,2
    56  0486  0ABA               	incf	?a_ClockEight+1
    57  0487  3008               	movlw	8
    58  0488  023A               	subwf	?a_ClockEight+1,w
    59  0489  1803               	btfsc	3,0
    60  048A  0008               	return
    61  048B  2C78               	goto	l2
    62                           
    63                           	psect	text1
    64  04A4                     __end_of_ClockEight
    65                           ;       param _data8 assigned to ?_Nordic_Send+
      +                          0
    66  0000                     _Nordic_Send$data8	set	?_Nordic_Send
    67  04A4                     _Nordic_Send
    68                           ;	_address assigned to ?a_Nordic_Send+0
    69  0000                     _Nordic_Send$address	set	?a_Nordic_Send
    70                           ;	_temp assigned to ?a_Nordic_Send+1
    71  0000                     _Nordic_Send$temp	set	?a_Nordic_Send+1
    72                           ;_address stored from w
    73  04A4  1283               	bcf	3,5
    74  04A5  00B7               	movwf	?a_Nordic_Send
    75                           ;Nordic_i2c.c: 41: void Nordic_Send( BYTE addre
      +                          ss, BYTE data8)
    76  04A6  01A6               	clrf	_TransmissionError
    77                           ;Nordic_i2c.c: 48: (RC3=1);
    78  04A7  1587               	bsf	7,3
    79                           ;Nordic_i2c.c: 49: (RC2=1);
    80  04A8  1507               	bsf	7,2
    81                           ;Nordic_i2c.c: 50: delay_us(100);
    82  04A9  3064               	movlw	100
    83  04AA  2431               	call	_delay_us
    84                           ;Nordic_i2c.c: 51: (RC2=0);
    85  04AB  1107               	bcf	7,2
    86                           ;Nordic_i2c.c: 52: delay_us(100);
    87  04AC  3064               	movlw	100
    88  04AD  2431               	call	_delay_us
    89                           ;Nordic_i2c.c: 53: (RC3=0);
    90  04AE  1187               	bcf	7,3
    91                           ;Nordic_i2c.c: 54: delay_us(100);
    92  04AF  3064               	movlw	100
    93  04B0  2431               	call	_delay_us
    94                           ;Nordic_i2c.c: 56: temp = N_ADDR;
    95  04B1  083C               	movf	_N_ADDR,w
    96  04B2  00B8               	movwf	?a_Nordic_Send+1
    97                           ;Nordic_i2c.c: 57: ClockEight( temp);
    98  04B3  2475               	call	_ClockEight
    99                           ;Nordic_i2c.c: 62: TRISC|=0x04;;
   100  04B4  1683               	bsf	3,5
   101  04B5  1507               	bsf	7,2	;volatile
   102                           ;Nordic_i2c.c: 63: delay_us(3);
   103  04B6  3003               	movlw	3
   104  04B7  2431               	call	_delay_us
   105                           ;Nordic_i2c.c: 64: (RC3=1);
   106  04B8  1587               	bsf	7,3
   107                           ;Nordic_i2c.c: 65: delay_us(100);
   108  04B9  3064               	movlw	100
   109  04BA  2431               	call	_delay_us
   110                           ;Nordic_i2c.c: 66: if(RC2)
   111  04BB  1907               	btfsc	7,2
   112                           ;Nordic_i2c.c: 67: {
   113  04BC  1426               	bsf	_TransmissionError,0
   114                           ;Nordic_i2c.c: 69: }
   115  04BD  1187               	bcf	7,3
   116                           ;Nordic_i2c.c: 76: TRISC&=0xFB;;
   117  04BE  1683               	bsf	3,5
   118  04BF  1107               	bcf	7,2	;volatile
   119                           ;Nordic_i2c.c: 78: ClockEight( address);
   120  04C0  1283               	bcf	3,5
   121  04C1  0837               	movf	?a_Nordic_Send,w
   122  04C2  2475               	call	_ClockEight
   123                           ;Nordic_i2c.c: 84: TRISC|=0x04;;
   124  04C3  1683               	bsf	3,5
   125  04C4  1507               	bsf	7,2	;volatile
   126                           ;Nordic_i2c.c: 85: (RC3=1);
   127  04C5  1283               	bcf	3,5
   128  04C6  1587               	bsf	7,3
   129                           ;Nordic_i2c.c: 86: delay_us(100);
   130  04C7  3064               	movlw	100
   131  04C8  2431               	call	_delay_us
   132                           ;Nordic_i2c.c: 87: if(RC2)
   133  04C9  1907               	btfsc	7,2
   134                           ;Nordic_i2c.c: 88: {
   135  04CA  1426               	bsf	_TransmissionError,0
   136                           ;Nordic_i2c.c: 90: }
   137  04CB  1187               	bcf	7,3
   138                           ;Nordic_i2c.c: 97: TRISC&=0xFB;;
   139  04CC  1683               	bsf	3,5
   140  04CD  1107               	bcf	7,2	;volatile
   141                           ;Nordic_i2c.c: 99: ClockEight( data8);
   142  04CE  1283               	bcf	3,5
   143  04CF  0836               	movf	?_Nordic_Send,w
   144  04D0  2475               	call	_ClockEight
   145                           ;Nordic_i2c.c: 105: TRISC|=0x04;;
   146  04D1  1683               	bsf	3,5
   147  04D2  1507               	bsf	7,2	;volatile
   148                           ;Nordic_i2c.c: 107: (RC3=1);
   149  04D3  1283               	bcf	3,5
   150  04D4  1587               	bsf	7,3
   151                           ;Nordic_i2c.c: 108: delay_us(100);
   152  04D5  3064               	movlw	100
   153  04D6  2431               	call	_delay_us
   154                           ;Nordic_i2c.c: 109: if(RC2)
   155  04D7  1907               	btfsc	7,2
   156                           ;Nordic_i2c.c: 110: {
   157  04D8  1426               	bsf	_TransmissionError,0
   158                           ;Nordic_i2c.c: 113: }
   159  04D9  1187               	bcf	7,3
   160                           ;Nordic_i2c.c: 120: TRISC&=0xFB;;
   161  04DA  1683               	bsf	3,5
   162  04DB  1107               	bcf	7,2	;volatile
   163                           ;Nordic_i2c.c: 122: (RC2=0);
   164  04DC  1283               	bcf	3,5
   165  04DD  1107               	bcf	7,2
   166                           ;Nordic_i2c.c: 123: delay_us(100);
   167  04DE  3064               	movlw	100
   168  04DF  2431               	call	_delay_us
   169                           ;Nordic_i2c.c: 124: (RC3=1);
   170  04E0  1587               	bsf	7,3
   171                           ;Nordic_i2c.c: 125: delay_us(100);
   172  04E1  3064               	movlw	100
   173  04E2  2431               	call	_delay_us
   174                           ;Nordic_i2c.c: 126: (RC2=1);
   175  04E3  1507               	bsf	7,2
   176                           ;Nordic_i2c.c: 128: }
   177  04E4  0008               	return	;W free
   178                           
   179                           	psect	text2
   180  04E5                     __end_of_Nordic_Send
   181  04E5                     _Nordic_Read
   182                           ;	_raddress assigned to ?a_Nordic_Read+0
   183  0000                     _Nordic_Read$raddress	set	?a_Nordic_Read
   184                           ;	_t assigned to ?a_Nordic_Read+1
   185  0000                     _Nordic_Read$t	set	?a_Nordic_Read+1
   186                           ;	_temp assigned to ?a_Nordic_Read+2
   187  0000                     _Nordic_Read$temp	set	?a_Nordic_Read+2
   188                           ;_raddress stored from w
   189  04E5  1283               	bcf	3,5
   190  04E6  00B6               	movwf	?a_Nordic_Read
   191                           ;Nordic_i2c.c: 129: BYTE Nordic_Read( BYTE radd
      +                          ress)
   192  04E7  01A6               	clrf	_TransmissionError
   193                           ;Nordic_i2c.c: 135: (RC3=1);
   194  04E8  1587               	bsf	7,3
   195                           ;Nordic_i2c.c: 136: (RC2=1);
   196  04E9  1507               	bsf	7,2
   197                           ;Nordic_i2c.c: 137: delay_us(100);
   198  04EA  3064               	movlw	100
   199  04EB  2431               	call	_delay_us
   200                           ;Nordic_i2c.c: 138: (RC2=0);
   201  04EC  1107               	bcf	7,2
   202                           ;Nordic_i2c.c: 139: delay_us(100);
   203  04ED  3064               	movlw	100
   204  04EE  2431               	call	_delay_us
   205                           ;Nordic_i2c.c: 140: (RC3=0);
   206  04EF  1187               	bcf	7,3
   207                           ;Nordic_i2c.c: 141: delay_us(100);
   208  04F0  3064               	movlw	100
   209  04F1  2431               	call	_delay_us
   210                           ;Nordic_i2c.c: 143: temp = N_ADDR;
   211  04F2  083C               	movf	_N_ADDR,w
   212  04F3  00B8               	movwf	?a_Nordic_Read+2
   213                           ;Nordic_i2c.c: 144: ClockEight( temp);
   214  04F4  2475               	call	_ClockEight
   215                           ;Nordic_i2c.c: 150: TRISC|=0x04;;
   216  04F5  1683               	bsf	3,5
   217  04F6  1507               	bsf	7,2	;volatile
   218                           ;Nordic_i2c.c: 152: (RC3=1);
   219  04F7  1283               	bcf	3,5
   220  04F8  1587               	bsf	7,3
   221                           ;Nordic_i2c.c: 153: delay_us(100);
   222  04F9  3064               	movlw	100
   223  04FA  2431               	call	_delay_us
   224                           ;Nordic_i2c.c: 154: if(RC2)
   225  04FB  1907               	btfsc	7,2
   226                           ;Nordic_i2c.c: 155: {
   227  04FC  1426               	bsf	_TransmissionError,0
   228                           ;Nordic_i2c.c: 157: }
   229  04FD  1187               	bcf	7,3
   230                           ;Nordic_i2c.c: 164: TRISC&=0xFB;;
   231  04FE  1683               	bsf	3,5
   232  04FF  1107               	bcf	7,2	;volatile
   233                           ;Nordic_i2c.c: 167: delay_us(100);
   234  0500  3064               	movlw	100
   235  0501  2431               	call	_delay_us
   236                           ;Nordic_i2c.c: 168: ClockEight( raddress);
   237  0502  0836               	movf	?a_Nordic_Read,w
   238  0503  2475               	call	_ClockEight
   239                           ;Nordic_i2c.c: 175: TRISC|=0x04;;
   240  0504  1683               	bsf	3,5
   241  0505  1507               	bsf	7,2	;volatile
   242                           ;Nordic_i2c.c: 177: (RC3=1);
   243  0506  1283               	bcf	3,5
   244  0507  1587               	bsf	7,3
   245                           ;Nordic_i2c.c: 178: delay_us(100);
   246  0508  3064               	movlw	100
   247  0509  2431               	call	_delay_us
   248                           ;Nordic_i2c.c: 179: if(RC2)
   249  050A  1907               	btfsc	7,2
   250                           ;Nordic_i2c.c: 180: {
   251  050B  1426               	bsf	_TransmissionError,0
   252                           ;Nordic_i2c.c: 184: }
   253  050C  1187               	bcf	7,3
   254                           ;Nordic_i2c.c: 188: TRISC&=0xFB;;
   255  050D  1683               	bsf	3,5
   256  050E  1107               	bcf	7,2	;volatile
   257                           ;Nordic_i2c.c: 191: (RC2=1);
   258  050F  1283               	bcf	3,5
   259  0510  1507               	bsf	7,2
   260                           ;Nordic_i2c.c: 193: delay_us(100);
   261  0511  3064               	movlw	100
   262  0512  2431               	call	_delay_us
   263                           ;Nordic_i2c.c: 194: (RC3=1);
   264  0513  1587               	bsf	7,3
   265                           ;Nordic_i2c.c: 195: delay_us(100);
   266  0514  3064               	movlw	100
   267  0515  2431               	call	_delay_us
   268                           ;Nordic_i2c.c: 196: (RC2=0);
   269  0516  1107               	bcf	7,2
   270                           ;Nordic_i2c.c: 197: delay_us(100);
   271  0517  3064               	movlw	100
   272  0518  2431               	call	_delay_us
   273                           ;Nordic_i2c.c: 198: (RC3=0);
   274  0519  1187               	bcf	7,3
   275                           ;Nordic_i2c.c: 199: delay_us(100);
   276  051A  3064               	movlw	100
   277  051B  2431               	call	_delay_us
   278                           ;Nordic_i2c.c: 201: temp = N_ADDR+1;
   279  051C  0A3C               	incf	_N_ADDR,w
   280  051D  00B8               	movwf	?a_Nordic_Read+2
   281                           ;Nordic_i2c.c: 202: ClockEight( temp);
   282  051E  2475               	call	_ClockEight
   283                           ;Nordic_i2c.c: 205: TRISC|=0x04;;
   284  051F  1683               	bsf	3,5
   285  0520  1507               	bsf	7,2	;volatile
   286                           ;Nordic_i2c.c: 207: (RC3=1);
   287  0521  1283               	bcf	3,5
   288  0522  1587               	bsf	7,3
   289                           ;Nordic_i2c.c: 208: delay_us(100);
   290  0523  3064               	movlw	100
   291  0524  2431               	call	_delay_us
   292                           ;Nordic_i2c.c: 209: if(RC2)
   293  0525  1907               	btfsc	7,2
   294                           ;Nordic_i2c.c: 210: {
   295  0526  1426               	bsf	_TransmissionError,0
   296                           ;Nordic_i2c.c: 214: }
   297  0527  1187               	bcf	7,3
   298                           ;Nordic_i2c.c: 219: temp=30;
   299  0528  301E               	movlw	30
   300  0529  00B8               	movwf	?a_Nordic_Read+2
   301                           ;Nordic_i2c.c: 220: while ( --temp ) ;
   302  052A                     l14
   303  052A  0BB8               	decfsz	?a_Nordic_Read+2
   304  052B  2D2A               	goto	l14
   305                           ;Nordic_i2c.c: 222: temp = 0;
   306  052C  01B8               	clrf	?a_Nordic_Read+2
   307                           ;Nordic_i2c.c: 224: for(t=0;t<8;t++)
   308  052D  01B7               	clrf	?a_Nordic_Read+1
   309                           ;Nordic_i2c.c: 225: {
   310  052E  1003               	bcf	3,0
   311  052F                     L1
   312  052F  0DB8               	rlf	?a_Nordic_Read+2
   313                           ;Nordic_i2c.c: 227: delay_us(100);
   314  0530  3064               	movlw	100
   315  0531  2431               	call	_delay_us
   316                           ;Nordic_i2c.c: 228: (RC3=1);
   317  0532  1587               	bsf	7,3
   318                           ;Nordic_i2c.c: 229: delay_us(100);
   319  0533  3064               	movlw	100
   320  0534  2431               	call	_delay_us
   321                           ;Nordic_i2c.c: 230: if(RC2)
   322  0535  1907               	btfsc	7,2
   323                           ;Nordic_i2c.c: 231: temp=temp+1;
   324  0536  0AB8               	incf	?a_Nordic_Read+2
   325                           ;Nordic_i2c.c: 232: (RC3=0);
   326  0537  1187               	bcf	7,3
   327  0538  0AB7               	incf	?a_Nordic_Read+1
   328  0539  3008               	movlw	8
   329  053A  0237               	subwf	?a_Nordic_Read+1,w
   330  053B  1C03               	btfss	3,0
   331  053C  2D2F               	goto	L1
   332                           ;Nordic_i2c.c: 233: }
   333  053D  1587               	bsf	7,3
   334                           ;Nordic_i2c.c: 239: delay_us(100);
   335  053E  3064               	movlw	100
   336  053F  2431               	call	_delay_us
   337                           ;Nordic_i2c.c: 240: if(!RC2)
   338  0540  1D07               	btfss	7,2
   339                           ;Nordic_i2c.c: 241: {
   340  0541  1426               	bsf	_TransmissionError,0
   341                           ;Nordic_i2c.c: 244: }
   342  0542  1187               	bcf	7,3
   343                           ;Nordic_i2c.c: 253: TRISC&=0xFB;;
   344  0543  1683               	bsf	3,5
   345  0544  1107               	bcf	7,2	;volatile
   346                           ;Nordic_i2c.c: 255: (RC2=0);
   347  0545  1283               	bcf	3,5
   348  0546  1107               	bcf	7,2
   349                           ;Nordic_i2c.c: 256: (RC3=1);
   350  0547  1587               	bsf	7,3
   351                           ;Nordic_i2c.c: 257: delay_us(100);
   352  0548  3064               	movlw	100
   353  0549  2431               	call	_delay_us
   354                           ;Nordic_i2c.c: 258: (RC2=1);
   355  054A  1507               	bsf	7,2
   356                           ;Nordic_i2c.c: 259: return(temp);
   357  054B  0838               	movf	?a_Nordic_Read+2,w
   358                           ;Nordic_i2c.c: 260: }
   359  054C  0008               	return	;uses W
   360                           
   361                           	psect	text3
   362  045F                     __end_of_Nordic_Read
   363                           ;       param _data8 assigned to ?_Nordic_Readb
      +                          ack+0
   364  0000                     _Nordic_Readback$data8	set	?_Nordic_Readback
   365  045F                     _Nordic_Readback
   366                           ;	_raddress assigned to ?a_Nordic_Readback+0
   367  0000                     _Nordic_Readback$raddress	set	?a_Nordic_Readbac
      +                          k
   368                           ;	_rdata assigned to ?a_Nordic_Readback+1
   369  0000                     _Nordic_Readback$rdata	set	?a_Nordic_Readback+1
   370                           ;	_temp assigned to ?a_Nordic_Readback+2
   371  0000                     _Nordic_Readback$temp	set	?a_Nordic_Readback+2
   372                           ;	_address assigned to ?a_Nordic_Readback+3
   373  0000                     _Nordic_Readback$address	set	?a_Nordic_Readback
      +                          +3
   374                           ;_address stored from w
   375  045F  1283               	bcf	3,5
   376  0460  00B5               	movwf	?a_Nordic_Readback+3
   377                           ;Nordic_i2c.c: 262: BYTE Nordic_Readback ( BYTE
      +                           address, BYTE data8)
   378  0461  30FA               	movlw	-6
   379  0462  00B4               	movwf	?a_Nordic_Readback+2
   380                           ;Nordic_i2c.c: 266: raddress=address;
   381  0463  0835               	movf	?a_Nordic_Readback+3,w
   382  0464  00B2               	movwf	?a_Nordic_Readback
   383                           ;Nordic_i2c.c: 267: rdata=data8;
   384  0465  0831               	movf	?_Nordic_Readback,w
   385  0466  00B3               	movwf	?a_Nordic_Readback+1
   386                           ;Nordic_i2c.c: 268: Nordic_Send(address,data8);
   387  0467  0831               	movf	?_Nordic_Readback,w
   388  0468  00B6               	movwf	?_Nordic_Send
   389  0469  0835               	movf	?a_Nordic_Readback+3,w
   390  046A  24A4               	call	_Nordic_Send
   391                           ;Nordic_i2c.c: 269: while ( --temp );
   392  046B                     l23
   393  046B  0BB4               	decfsz	?a_Nordic_Readback+2
   394  046C  2C6B               	goto	l23
   395                           ;Nordic_i2c.c: 270: data8= Nordic_Read(address)
      +                          ;
   396  046D  0835               	movf	?a_Nordic_Readback+3,w
   397  046E  24E5               	call	_Nordic_Read
   398  046F  00B1               	movwf	?_Nordic_Readback
   399                           ;Nordic_i2c.c: 271: return (rdata==data8 );
   400  0470  0633               	xorwf	?a_Nordic_Readback+1,w
   401  0471  3000               	movlw	0
   402  0472  1903               	btfsc	3,2
   403  0473  3001               	movlw	1
   404                           ;Nordic_i2c.c: 273: }
   405  0474  0008               	return	;uses W
   406                           
   407                           	psect	text4
   408  0031                     __end_of_Nordic_Readback
   409  0000                     
   410  0000                     
   411  0000                     
   412  0000                     
   413  0000                     
   414  0000                     
   415  0000                     
   416  0000                     
   417  0000                     
   418  0000                     
   419  0000                     
   420  0000                     
   421  0000                     
   422  0000                     
   423  0000                     
   424  0000                     
   425  0000                     
   426  0000                     
   427  0000                     
   428  0000                     
   429  0000                     
   430  0000                     
   431  0000                     
   432  0000                     
   433  0000                     
   434  0000                     
   435  0000                     
   436  0000                     
   437  0000                     
   438  0000                     
   439  0000                     
   440  0000                     
   441  0000                     
   442  0000                     
   443  0000                     
   444  0000                     
   445  0000                     
   446  0000                     
   447  0000                     
   448  0000                     
   449  0000                     
   450  0000                     
   451  0000                     
   452  0000                     
   453  0000                     
   454  0000                     
   455  0000                     
   456  0000                     
   457  0000                     
   458  0000                     
   459  0000                     
   460  0000                     
   461  0000                     
   462  0000                     
   463  0000                     
   464  0000                     
   465  0000                     
   466  0000                     
   467  0000                     
   468  0000                     
   469  0000                     
   470  0000                     
   471  0000                     
   472  0000                     
   473  0000                     
   474  0000                     
   475  0000                     
   476  0000                     
   477  0000                     
   478  0000                     
   479  0000                     
   480  0000                     
   481  0000                     
   482  0000                     
   483  0000                     
   484  0000                     
   485  0000                     
   486  0000                     
   487  0000                     
   488  0000                     
   489  0000                     
   490  0000                     
   491  0000                     
   492  0000                     
   493  0000                     
   494  0000                     
   495  0000                     
   496  0000                     
   497  0000                     
   498  0000                     
   499  0000                     
   500  0000                     
   501  0000                     
   502  0000                     
   503  0000                     
   504  0000                     
   505  0000                     
   506  0000                     
   507  0000                     
   508  0000                     
   509  0000                     
   510  0000                     
   511  0000                     
   512  0000                     
   513  0000                     
   514  0000                     
   515  0000                     
   516  0000                     
   517  0000                     
   518  0000                     
   519  0000                     
   520  0000                     
   521  0000                     
   522  0000                     
   523  0000                     
   524  0000                     
   525  0000                     
   526  0000                     
   527  0000                     
   528  0000                     
   529  0000                     
   530  0000                     
   531  0000                     
   532  0000                     
   533  0000                     
   534  0000                     
   535  0000                     
   536  0000                     
   537  0000                     
   538  0000                     
   539  0000                     
   540  0000                     
   541  0000                     
   542  0000                     
   543  0000                     
   544  0000                     
   545  0000                     
   546  0000                     
   547  0000                     
   548  0000                     
   549  0000                     
   550  0000                     
   551  0000                     
   552  0000                     
   553  0000                     
   554  0000                     
   555  0000                     
   556  0000                     
   557  0000                     
   558  0000                     
   559  0000                     
   560  0000                     
   561  0000                     
   562  0000                     
   563  0000                     
   564  0000                     
   565  0000                     
   566  0000                     
   567  0000                     
   568  0000                     
   569  0000                     
   570  0000                     
   571  0000                     
   572  0000                     
   573  0000                     
   574  0000                     
   575  0000                     
   576  0000                     
   577  0000                     
   578  0000                     
   579  0000                     
   580  0000                     
   581  0000                     
   582  0000                     
   583  0000                     
   584  0000                     
   585  0000                     
   586  0000                     
   587  0000                     
   588  0000                     
   589  0000                     
   590  0000                     
   591  0000                     
   592  0000                     
   593  0000                     
   594  0000                     
   595  0000                     
   596  0000                     
   597  0000                     
   598  0000                     
   599  0000                     
   600  0000                     
   601  0000                     
   602  0000                     
   603  0000                     
   604  0000                     
   605  0000                     
   606  0000                     
   607  0000                     
   608  0000                     
   609  0000                     
   610  0000                     
   611  0000                     
   612  0000                     
   613  0000                     
   614  0000                     
   615  0000                     
   616  0000                     
   617  0000                     
   618  0000                     
   619  0000                     
   620  0000                     
   621  0000                     
   622  0000                     
   623  0000                     
   624  0000                     
   625  0000                     
   626  0000                     


HI-TECH Software PICC Macro Assembler V9.60PL3 build 3862 
Symbol Table                                          Mon Oct 10 13:14:38 2011

                _delay_us 0431                         l2 0478  
                      l14 052A                        l23 046B  
                  _N_ADDR 003C              ?a_ClockEight 0039  
       _TransmissionError 0026           _Nordic_Readback 045F  
     __end_of_Nordic_Read 045F       __end_of_Nordic_Send 04E5  
            ?_Nordic_Send 0036               _Nordic_Read 04E5  
              _ClockEight 0475               _Nordic_Send 04A4  
                   status 0003         ?a_Nordic_Readback 0032  
 __end_of_Nordic_Readback 0031             ?a_Nordic_Read 0036  
           ?a_Nordic_Send 0037          ?_Nordic_Readback 0031  
      __end_of_ClockEight 04A4  
