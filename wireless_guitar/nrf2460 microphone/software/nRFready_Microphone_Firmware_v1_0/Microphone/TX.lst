

HI-TECH Software PIC LITE Macro Assembler V9.82 build 9453 
                                                                                               Mon Oct 10 13:09:33 2011

HI-TECH Software Omniscient Code Generator (Lite mode) build 9453
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 9453"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F684
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           # 20 "C:\Projects\Nordic\dual wireless mic ref design\clean source code\TX\Main.c"
    43                           	psect config,class=CONFIG,delta=2 ;#
    44                           # 20 "C:\Projects\Nordic\dual wireless mic ref design\clean source code\TX\Main.c"
    45  2007  30D4               	dw 0x30D4 ;#
    46                           	FNCALL	_main,_SetupProcessor
    47                           	FNCALL	_main,_Timer_Constructor
    48                           	FNCALL	_main,_IntializeStateMachine
    49                           	FNCALL	_main,_ProcessStateMachine
    50                           	FNCALL	_ProcessStateMachine,__Timer_IsExpired
    51                           	FNCALL	_ProcessStateMachine,__Timer_Start
    52                           	FNCALL	_ProcessStateMachine,_ProcessButton
    53                           	FNCALL	_ProcessStateMachine,_ProcessLink
    54                           	FNCALL	_ProcessStateMachine,_ProcessNordicBoot
    55                           	FNCALL	_ProcessStateMachine,_ProcessAKMBoot
    56                           	FNCALL	_ProcessStateMachine,_ProcessEnterSleep
    57                           	FNCALL	_ProcessStateMachine,_ProcessPairing
    58                           	FNCALL	_ProcessLink,_Nordic_LinkPresent
    59                           	FNCALL	_ProcessLink,_delay_ms
    60                           	FNCALL	_ProcessNordicBoot,_delay_ms
    61                           	FNCALL	_ProcessNordicBoot,_Nordic_Wakeup
    62                           	FNCALL	_ProcessAKMBoot,_AKM_Constructor
    63                           	FNCALL	_ProcessPairing,_SPI_Send
    64                           	FNCALL	_ProcessPairing,_delay_ms
    65                           	FNCALL	_ProcessPairing,_Nordic_LinkPresent
    66                           	FNCALL	_ProcessPairing,_Nordic_Read
    67                           	FNCALL	_ProcessEnterSleep,_SPI_Send
    68                           	FNCALL	_ProcessEnterSleep,_delay_ms
    69                           	FNCALL	_Nordic_Wakeup,_SPI_Send
    70                           	FNCALL	_Nordic_Wakeup,_Nordic_Read
    71                           	FNCALL	_Nordic_LinkPresent,_Nordic_Read
    72                           	FNCALL	_AKM_Constructor,_SPI_Send
    73                           	FNCALL	_ProcessButton,_delay_ms
    74                           	FNCALL	_Nordic_Read,_delay_ms
    75                           	FNCALL	_Nordic_Read,_ClockEight
    76                           	FNCALL	_IntializeStateMachine,__Timer_Start
    77                           	FNCALL	_SPI_Send,_delay_ms
    78                           	FNCALL	_SPI_Send,_ClockEight
    79                           	FNROOT	_main
    80                           	FNCALL	_ISR,_TimerSystem_TickIsr
    81                           	FNCALL	intlevel1,_ISR
    82                           	global	intlevel1
    83                           	FNROOT	intlevel1
    84                           	global	_linkcount
    85                           psect	idataBANK0,class=CODE,space=0,delta=2
    86                           global __pidataBANK0
    87  0651                     __pidataBANK0:
    88                           	file	"C:\Projects\Nordic\dual wireless mic ref design\clean source code\TX\statemachine
                                 .c"
    89                           	line	26
    90                           
    91                           ;initializer for _linkcount
    92  0651  34FF               	retlw	0FFh
    93                           	global	_NordicRegData
    94                           psect	strings,class=STRING,delta=2
    95                           global __pstrings
    96  0300                     __pstrings:
    97                           ;	global	stringdir,stringtab,__stringbase
    98  0300                     stringtab:
    99                           ;	String table - string pointers are 1 byte each
   100  0300                     stringcode:stringdir:
      + 0300                     stringdir:	
   101  0300  3003               movlw high(stringdir)
   102  0301  008A               movwf pclath
   103  0302  0804               movf fsr,w
   104  0303  0A84               incf fsr
   105  0304  0782               	addwf pc
   106  0305                     __stringbase:
   107  0305  3400               	retlw	0
   108                           psect	strings
   109                           	file	"C:\Projects\Nordic\dual wireless mic ref design\clean source code\TX\table.c"
   110                           	line	28
   111  0306                     _NordicRegData:
   112  0306  3400               	retlw	0
   113  0307  3451               	retlw	051h
   114  0308  3400               	retlw	0
   115  0309  3400               	retlw	0
   116  030A  3400               	retlw	0
   117  030B  3400               	retlw	0
   118  030C  3400               	retlw	0
   119  030D  3400               	retlw	0
   120  030E  3400               	retlw	0
   121  030F  3400               	retlw	0
   122  0310  3400               	retlw	0
   123  0311  3400               	retlw	0
   124  0312  341F               	retlw	01Fh
   125  0313  343B               	retlw	03Bh
   126  0314  3411               	retlw	011h
   127  0315  3404               	retlw	04h
   128  0316  342D               	retlw	02Dh
   129  0317  3449               	retlw	049h
   130  0318  3400               	retlw	0
   131  0319  3400               	retlw	0
   132  031A  3400               	retlw	0
   133  031B  3400               	retlw	0
   134  031C  3400               	retlw	0
   135  031D  3400               	retlw	0
   136  031E  3400               	retlw	0
   137  031F  3400               	retlw	0
   138  0320  3400               	retlw	0
   139  0321  3400               	retlw	0
   140  0322  3400               	retlw	0
   141  0323  3400               	retlw	0
   142  0324  3400               	retlw	0
   143  0325  3400               	retlw	0
   144  0326  3400               	retlw	0
   145  0327  3400               	retlw	0
   146  0328  3400               	retlw	0
   147  0329  3400               	retlw	0
   148  032A  3400               	retlw	0
   149  032B  3400               	retlw	0
   150  032C  3400               	retlw	0
   151  032D  3400               	retlw	0
   152  032E  3400               	retlw	0
   153  032F  3400               	retlw	0
   154  0330  3400               	retlw	0
   155  0331  3400               	retlw	0
   156  0332  3400               	retlw	0
   157  0333  3400               	retlw	0
   158  0334  3400               	retlw	0
   159  0335  3400               	retlw	0
   160  0336  3400               	retlw	0
   161  0337  3400               	retlw	0
   162  0338  3400               	retlw	0
   163  0339  3402               	retlw	02h
   164  033A  3406               	retlw	06h
   165  033B  3403               	retlw	03h
   166  033C  3400               	retlw	0
   167  033D  3400               	retlw	0
   168  033E  3400               	retlw	0
   169  033F  34AB               	retlw	0ABh
   170  0340  3431               	retlw	031h
   171  0341  343E               	retlw	03Eh
   172  0342  343F               	retlw	03Fh
   173  0343  343A               	retlw	03Ah
   174  0344  3400               	retlw	0
   175  0345  3400               	retlw	0
   176  0346  3400               	retlw	0
   177  0347  3400               	retlw	0
   178  0348  3400               	retlw	0
   179  0349  3400               	retlw	0
   180  034A  3400               	retlw	0
   181  034B  3400               	retlw	0
   182  034C  3400               	retlw	0
   183  034D  3400               	retlw	0
   184  034E  3400               	retlw	0
   185  034F  3403               	retlw	03h
   186  0350  3400               	retlw	0
   187  0351  3400               	retlw	0
   188  0352  3400               	retlw	0
   189  0353  3400               	retlw	0
   190  0354  3400               	retlw	0
   191  0355  3400               	retlw	0
   192  0356  3400               	retlw	0
   193  0357  3400               	retlw	0
   194  0358  3406               	retlw	06h
   195  0359  3400               	retlw	0
   196  035A  3480               	retlw	080h
   197  035B  3400               	retlw	0
   198  035C  3403               	retlw	03h
   199  035D  3400               	retlw	0
   200  035E  3400               	retlw	0
   201  035F  3400               	retlw	0
   202  0360  3400               	retlw	0
   203  0361  3400               	retlw	0
   204  0362  3400               	retlw	0
   205  0363  3400               	retlw	0
   206  0364  3400               	retlw	0
   207  0365  3400               	retlw	0
   208  0366  3400               	retlw	0
   209  0367  3400               	retlw	0
   210  0368  3400               	retlw	0
   211  0369  3400               	retlw	0
   212  036A  3400               	retlw	0
   213  036B  3400               	retlw	0
   214  036C  3400               	retlw	0
   215  036D  3400               	retlw	0
   216  036E  3400               	retlw	0
   217  036F  3400               	retlw	0
   218  0370  3400               	retlw	0
   219  0371  3400               	retlw	0
   220  0372  3400               	retlw	0
   221  0373  3400               	retlw	0
   222  0374  3400               	retlw	0
   223  0375  3400               	retlw	0
   224  0376  3400               	retlw	0
   225  0377  3400               	retlw	0
   226  0378  3400               	retlw	0
   227  0379  3400               	retlw	0
   228  037A  3400               	retlw	0
   229  037B  3400               	retlw	0
   230  037C  3400               	retlw	0
   231  037D  3400               	retlw	0
   232  037E  3400               	retlw	0
   233  037F  3400               	retlw	0
   234  0380  3400               	retlw	0
   235  0381  3400               	retlw	0
   236  0382  3400               	retlw	0
   237  0383  3400               	retlw	0
   238  0384  3400               	retlw	0
   239  0385  3400               	retlw	0
   240  0386  3420               	retlw	020h
   241  0387  3483               	retlw	083h
   242                           	global	_PairingAddress
   243                           psect	strings
   244                           	file	"C:\Projects\Nordic\dual wireless mic ref design\clean source code\TX\table.c"
   245                           	line	19
   246  0388                     _PairingAddress:
   247  0388  345D               	retlw	05Dh
   248  0389  346C               	retlw	06Ch
   249  038A  347B               	retlw	07Bh
   250  038B  348A               	retlw	08Ah
   251  038C  3490               	retlw	090h
   252                           	global	_NordicRegData
   253                           	global	_PairingAddress
   254                           	global	_PSwitchCount
   255                           	global	_now
   256                           	global	_i
   257                           	global	_no_link_count
   258                           	global	_timeout
   259                           	global	_Timer_SysTime
   260                           	global	_link
   261                           	global	_SYSTEM_ON
   262                           	global	_StateMachineTimer
   263                           	global	_CurrentState
   264                           psect	nvBANK0,class=BANK0,space=1
   265                           global __pnvBANK0
   266  003B                     __pnvBANK0:
   267  003B                     _CurrentState:
   268  003B                            ds      1
   269                           
   270                           	global	_CMCON0
   271  0019                     _CMCON0	set	25
   272                           	global	_CMCON1
   273  001A                     _CMCON1	set	26
   274                           	global	_PORTA
   275  0005                     _PORTA	set	5
   276                           	global	_PORTC
   277  0007                     _PORTC	set	7
   278                           	global	_T1CON
   279  0010                     _T1CON	set	16
   280                           	global	_TMR1H
   281  000F                     _TMR1H	set	15
   282                           	global	_TMR1L
   283  000E                     _TMR1L	set	14
   284                           	global	_WDTCON
   285  0018                     _WDTCON	set	24
   286                           	global	_ADON
   287  00F8                     _ADON	set	248
   288                           	global	_CARRY
   289  0018                     _CARRY	set	24
   290                           	global	_GIE
   291  005F                     _GIE	set	95
   292                           	global	_INTE
   293  005C                     _INTE	set	92
   294                           	global	_PEIE
   295  005E                     _PEIE	set	94
   296                           	global	_RA0
   297  0028                     _RA0	set	40
   298                           	global	_RA1
   299  0029                     _RA1	set	41
   300                           	global	_RA2
   301  002A                     _RA2	set	42
   302                           	global	_RA3
   303  002B                     _RA3	set	43
   304                           	global	_RAIE
   305  005B                     _RAIE	set	91
   306                           	global	_RC0
   307  0038                     _RC0	set	56
   308                           	global	_RC1
   309  0039                     _RC1	set	57
   310                           	global	_RC2
   311  003A                     _RC2	set	58
   312                           	global	_RC3
   313  003B                     _RC3	set	59
   314                           	global	_RC5
   315  003D                     _RC5	set	61
   316                           	global	_T0IE
   317  005D                     _T0IE	set	93
   318                           	global	_TMR1IF
   319  0060                     _TMR1IF	set	96
   320                           	global	_ANSEL
   321  0091                     _ANSEL	set	145
   322                           	global	_EEADR
   323  009B                     _EEADR	set	155
   324                           	global	_EECON1
   325  009C                     _EECON1	set	156
   326                           	global	_EECON2
   327  009D                     _EECON2	set	157
   328                           	global	_EEDATA
   329  009A                     _EEDATA	set	154
   330                           	global	_OSCCON
   331  008F                     _OSCCON	set	143
   332                           	global	_TRISA
   333  0085                     _TRISA	set	133
   334                           	global	_TRISC
   335  0087                     _TRISC	set	135
   336                           	global	_PSA
   337  040B                     _PSA	set	1035
   338                           	global	_RD
   339  04E0                     _RD	set	1248
   340                           	global	_TMR1IE
   341  0460                     _TMR1IE	set	1120
   342                           	global	_WR
   343  04E1                     _WR	set	1249
   344                           	global	_WREN
   345  04E2                     _WREN	set	1250
   346                           	file	"C:\Users\JOHN~1.SJA\AppData\Local\Temp\s5p4."
   347                           	line	#
   348                           psect cinit,class=CODE,delta=2
   349                           global start_initialization
   350  0614                     start_initialization:
   351                           
   352                           psect	bitbssCOMMON,class=COMMON,bit,space=1
   353                           global __pbitbssCOMMON
   354  03C8                     __pbitbssCOMMON:
   355  03C8                     _SYSTEM_ON:
   356  03C8                            ds      1
   357                           
   358                           psect	bssCOMMON,class=COMMON,space=1
   359                           global __pbssCOMMON
   360  0076                     __pbssCOMMON:
   361  0076                     _Timer_SysTime:
   362  0076                            ds      2
   363                           
   364  0078                     _link:
   365  0078                            ds      1
   366                           
   367                           psect	bssBANK0,class=BANK0,space=1
   368                           global __pbssBANK0
   369  002E                     __pbssBANK0:
   370  002E                     _PSwitchCount:
   371  002E                            ds      4
   372                           
   373  0032                     _now:
   374  0032                            ds      2
   375                           
   376  0034                     _i:
   377  0034                            ds      1
   378                           
   379  0035                     _no_link_count:
   380  0035                            ds      1
   381                           
   382  0036                     _timeout:
   383  0036                            ds      1
   384                           
   385  0037                     _StateMachineTimer:
   386  0037                            ds      4
   387                           
   388                           psect	dataBANK0,class=BANK0,space=1
   389                           global __pdataBANK0
   390  003C                     __pdataBANK0:
   391                           	file	"C:\Projects\Nordic\dual wireless mic ref design\clean source code\TX\statemachine
                                 .c"
   392                           	line	26
   393  003C                     _linkcount:
   394  003C                            ds      1
   395                           
   396                           psect clrtext,class=CODE,delta=2
   397                           global clear_ram
   398                           ;	Called with FSR containing the base address, and
   399                           ;	W with the last address+1
   400  0642                     clear_ram:
   401  0642  0064               	clrwdt			;clear the watchdog before getting into this loop
   402  0643                     clrloop:
   403  0643  0180               	clrf	indf		;clear RAM location pointed to by FSR
   404  0644  0A84               	incf	fsr,f		;increment pointer
   405  0645  0604               	xorwf	fsr,w		;XOR with final address
   406  0646  1903               	btfsc	status,2	;have we reached the end yet?
   407  0647  3400               	retlw	0		;all done for this memory range, return
   408  0648  0604               	xorwf	fsr,w		;XOR again to restore value
   409  0649  2E43               	goto	clrloop		;do the next byte
   410                           
   411                           ; Clear objects allocated to BITCOMMON
   412                           psect cinit,class=CODE,delta=2
   413  0614  01F9               	clrf	((__pbitbssCOMMON/8)+0)&07Fh
   414                           ; Clear objects allocated to COMMON
   415                           psect cinit,class=CODE,delta=2
   416  0615  01F6               	clrf	((__pbssCOMMON)+0)&07Fh
   417  0616  01F7               	clrf	((__pbssCOMMON)+1)&07Fh
   418  0617  01F8               	clrf	((__pbssCOMMON)+2)&07Fh
   419                           ; Clear objects allocated to BANK0
   420                           psect cinit,class=CODE,delta=2
   421  0618  1383               	bcf	status, 7	;select IRP bank0
   422  0619  302E               	movlw	low(__pbssBANK0)
   423  061A  0084               	movwf	fsr
   424  061B  303B               	movlw	low((__pbssBANK0)+0Dh)
   425  061C  2642               	fcall	clear_ram
   426                           ; Initialize objects allocated to BANK0
   427                           	global __pidataBANK0
   428                           psect cinit,class=CODE,delta=2
   429  061D  2651               	fcall	__pidataBANK0+0		;fetch initializer
   430  061E  00BC               	movwf	__pdataBANK0+0&07fh		
   431                           psect cinit,class=CODE,delta=2
   432                           global end_of_initialization
   433                           
   434                           ;End of C runtime variable initialization code
   435                           
   436  061F                     end_of_initialization:
   437  061F  0183               clrf status
   438  0620  2E38               ljmp _main	;jump to C main() function
   439                           psect	cstackCOMMON,class=COMMON,space=1
   440                           global __pcstackCOMMON
   441  0070                     __pcstackCOMMON:
   442                           	global	?_SetupProcessor
   443  0070                     ?_SetupProcessor:	; 0 bytes @ 0x0
   444                           	global	?_Timer_Constructor
   445  0070                     ?_Timer_Constructor:	; 0 bytes @ 0x0
   446                           	global	?_IntializeStateMachine
   447  0070                     ?_IntializeStateMachine:	; 0 bytes @ 0x0
   448                           	global	?_ProcessStateMachine
   449  0070                     ?_ProcessStateMachine:	; 0 bytes @ 0x0
   450                           	global	?_TimerSystem_TickIsr
   451  0070                     ?_TimerSystem_TickIsr:	; 0 bytes @ 0x0
   452                           	global	??_TimerSystem_TickIsr
   453  0070                     ??_TimerSystem_TickIsr:	; 0 bytes @ 0x0
   454                           	global	?_AKM_Constructor
   455  0070                     ?_AKM_Constructor:	; 0 bytes @ 0x0
   456                           	global	?_delay_ms
   457  0070                     ?_delay_ms:	; 0 bytes @ 0x0
   458                           	global	?_main
   459  0070                     ?_main:	; 0 bytes @ 0x0
   460                           	global	?_ISR
   461  0070                     ?_ISR:	; 0 bytes @ 0x0
   462                           	global	??_ISR
   463  0070                     ??_ISR:	; 0 bytes @ 0x0
   464                           	global	?_Nordic_Wakeup
   465  0070                     ?_Nordic_Wakeup:	; 0 bytes @ 0x0
   466                           	global	?_ClockEight
   467  0070                     ?_ClockEight:	; 0 bytes @ 0x0
   468                           	global	?_ProcessEnterSleep
   469  0070                     ?_ProcessEnterSleep:	; 0 bytes @ 0x0
   470                           	global	?_ProcessButton
   471  0070                     ?_ProcessButton:	; 0 bytes @ 0x0
   472                           	global	?_ProcessPairing
   473  0070                     ?_ProcessPairing:	; 0 bytes @ 0x0
   474                           	global	?_ProcessAKMBoot
   475  0070                     ?_ProcessAKMBoot:	; 0 bytes @ 0x0
   476                           	global	?_ProcessNordicBoot
   477  0070                     ?_ProcessNordicBoot:	; 0 bytes @ 0x0
   478                           	global	?_ProcessLink
   479  0070                     ?_ProcessLink:	; 0 bytes @ 0x0
   480                           	global	?_Nordic_Read
   481  0070                     ?_Nordic_Read:	; 1 bytes @ 0x0
   482                           	global	?__Timer_IsExpired
   483  0070                     ?__Timer_IsExpired:	; 1 bytes @ 0x0
   484                           	global	?_Nordic_LinkPresent
   485  0070                     ?_Nordic_LinkPresent:	; 1 bytes @ 0x0
   486  0070                     	ds	4
   487                           	global	??_SetupProcessor
   488  0074                     ??_SetupProcessor:	; 0 bytes @ 0x4
   489                           	global	??_Timer_Constructor
   490  0074                     ??_Timer_Constructor:	; 0 bytes @ 0x4
   491                           	global	?__Timer_Start
   492  0074                     ?__Timer_Start:	; 0 bytes @ 0x4
   493                           	global	??__Timer_IsExpired
   494  0074                     ??__Timer_IsExpired:	; 0 bytes @ 0x4
   495                           	global	??_delay_ms
   496  0074                     ??_delay_ms:	; 0 bytes @ 0x4
   497                           	global	??_ClockEight
   498  0074                     ??_ClockEight:	; 0 bytes @ 0x4
   499                           	global	__Timer_Start@length
   500  0074                     __Timer_Start@length:	; 2 bytes @ 0x4
   501  0074                     	ds	1
   502                           	global	??_ProcessButton
   503  0075                     ??_ProcessButton:	; 0 bytes @ 0x5
   504  0075                     	ds	1
   505                           	global	??_SPI_Send
   506  0076                     ??_SPI_Send:	; 0 bytes @ 0x6
   507                           	global	??_IntializeStateMachine
   508  0076                     ??_IntializeStateMachine:	; 0 bytes @ 0x6
   509                           	global	??_ProcessStateMachine
   510  0076                     ??_ProcessStateMachine:	; 0 bytes @ 0x6
   511                           	global	??__Timer_Start
   512  0076                     ??__Timer_Start:	; 0 bytes @ 0x6
   513                           	global	??_main
   514  0076                     ??_main:	; 0 bytes @ 0x6
   515                           	global	??_ProcessNordicBoot
   516  0076                     ??_ProcessNordicBoot:	; 0 bytes @ 0x6
   517                           psect	cstackBANK0,class=BANK0,space=1
   518                           global __pcstackBANK0
   519  0020                     __pcstackBANK0:
   520                           	global	delay_ms@time
   521  0020                     delay_ms@time:	; 1 bytes @ 0x0
   522                           	global	ClockEight@data
   523  0020                     ClockEight@data:	; 1 bytes @ 0x0
   524                           	global	__Timer_Start@theTimer
   525  0020                     __Timer_Start@theTimer:	; 1 bytes @ 0x0
   526                           	global	__Timer_IsExpired@theTimer
   527  0020                     __Timer_IsExpired@theTimer:	; 1 bytes @ 0x0
   528  0020                     	ds	1
   529                           	global	delay_ms@temp
   530  0021                     delay_ms@temp:	; 1 bytes @ 0x1
   531                           	global	ClockEight@t
   532  0021                     ClockEight@t:	; 1 bytes @ 0x1
   533                           	global	__Timer_IsExpired@length
   534  0021                     __Timer_IsExpired@length:	; 2 bytes @ 0x1
   535  0021                     	ds	1
   536                           	global	delay_ms@temp2
   537  0022                     delay_ms@temp2:	; 1 bytes @ 0x2
   538  0022                     	ds	1
   539                           	global	?_SPI_Send
   540  0023                     ?_SPI_Send:	; 0 bytes @ 0x3
   541                           	global	??_Nordic_Read
   542  0023                     ??_Nordic_Read:	; 0 bytes @ 0x3
   543                           	global	SPI_Send@data8
   544  0023                     SPI_Send@data8:	; 1 bytes @ 0x3
   545  0023                     	ds	1
   546                           	global	SPI_Send@Target
   547  0024                     SPI_Send@Target:	; 1 bytes @ 0x4
   548  0024                     	ds	1
   549                           	global	SPI_Send@address
   550  0025                     SPI_Send@address:	; 1 bytes @ 0x5
   551                           	global	Nordic_Read@raddress2
   552  0025                     Nordic_Read@raddress2:	; 1 bytes @ 0x5
   553  0025                     	ds	1
   554                           	global	??_AKM_Constructor
   555  0026                     ??_AKM_Constructor:	; 0 bytes @ 0x6
   556                           	global	??_ProcessEnterSleep
   557  0026                     ??_ProcessEnterSleep:	; 0 bytes @ 0x6
   558                           	global	Nordic_Read@t
   559  0026                     Nordic_Read@t:	; 1 bytes @ 0x6
   560  0026                     	ds	1
   561                           	global	Nordic_Read@data8
   562  0027                     Nordic_Read@data8:	; 1 bytes @ 0x7
   563  0027                     	ds	1
   564                           	global	??_Nordic_LinkPresent
   565  0028                     ??_Nordic_LinkPresent:	; 0 bytes @ 0x8
   566                           	global	??_Nordic_Wakeup
   567  0028                     ??_Nordic_Wakeup:	; 0 bytes @ 0x8
   568                           	global	AKM_Constructor@address
   569  0028                     AKM_Constructor@address:	; 1 bytes @ 0x8
   570  0028                     	ds	1
   571                           	global	??_ProcessAKMBoot
   572  0029                     ??_ProcessAKMBoot:	; 0 bytes @ 0x9
   573                           	global	Nordic_LinkPresent@temp
   574  0029                     Nordic_LinkPresent@temp:	; 1 bytes @ 0x9
   575                           	global	Nordic_Wakeup@dataR
   576  0029                     Nordic_Wakeup@dataR:	; 1 bytes @ 0x9
   577  0029                     	ds	1
   578                           	global	??_ProcessPairing
   579  002A                     ??_ProcessPairing:	; 0 bytes @ 0xA
   580                           	global	??_ProcessLink
   581  002A                     ??_ProcessLink:	; 0 bytes @ 0xA
   582                           	global	Nordic_Wakeup@raddress
   583  002A                     Nordic_Wakeup@raddress:	; 1 bytes @ 0xA
   584  002A                     	ds	1
   585                           	global	Nordic_Wakeup@address
   586  002B                     Nordic_Wakeup@address:	; 1 bytes @ 0xB
   587  002B                     	ds	1
   588                           	global	Nordic_Wakeup@data8
   589  002C                     Nordic_Wakeup@data8:	; 1 bytes @ 0xC
   590  002C                     	ds	1
   591                           	global	Nordic_Wakeup@pointer
   592  002D                     Nordic_Wakeup@pointer:	; 1 bytes @ 0xD
   593  002D                     	ds	1
   594 ;;Data sizes: Strings 0, constant 135, data 1, bss 16, persistent 1 stack 0
   595 ;;Auto spaces:   Size  Autos    Used
   596 ;; COMMON          14      6      10
   597 ;; BANK0           80     14      29
   598 ;; BANK1           32      0       0
   599                           
   600 ;;
   601 ;; Pointer list with targets:
   602                           
   603 ;; _Timer_IsExpired@theTimer	PTR struct . size(1) Largest target is 4
   604 ;;		 -> StateMachineTimer(BANK0[4]), 
   605 ;;
   606 ;; _Timer_Start@theTimer	PTR struct . size(1) Largest target is 4
   607 ;;		 -> StateMachineTimer(BANK0[4]), 
   608 ;;
   609                           
   610                           
   611 ;;
   612 ;; Critical Paths under _main in COMMON
   613 ;;
   614 ;;   _ProcessStateMachine->__Timer_IsExpired
   615 ;;   _ProcessStateMachine->__Timer_Start
   616 ;;   _ProcessStateMachine->_ProcessButton
   617 ;;   _ProcessButton->_delay_ms
   618 ;;   _Nordic_Read->_ClockEight
   619 ;;   _IntializeStateMachine->__Timer_Start
   620 ;;   _SPI_Send->_ClockEight
   621 ;;
   622 ;; Critical Paths under _ISR in COMMON
   623 ;;
   624 ;;   None.
   625 ;;
   626 ;; Critical Paths under _main in BANK0
   627 ;;
   628 ;;   _ProcessLink->_Nordic_LinkPresent
   629 ;;   _ProcessNordicBoot->_Nordic_Wakeup
   630 ;;   _ProcessAKMBoot->_AKM_Constructor
   631 ;;   _ProcessPairing->_Nordic_LinkPresent
   632 ;;   _ProcessEnterSleep->_SPI_Send
   633 ;;   _Nordic_Wakeup->_Nordic_Read
   634 ;;   _Nordic_LinkPresent->_Nordic_Read
   635 ;;   _AKM_Constructor->_SPI_Send
   636 ;;   _ProcessButton->_delay_ms
   637 ;;   _Nordic_Read->_delay_ms
   638 ;;   _IntializeStateMachine->__Timer_Start
   639 ;;   _SPI_Send->_delay_ms
   640 ;;
   641 ;; Critical Paths under _ISR in BANK0
   642 ;;
   643 ;;   None.
   644 ;;
   645 ;; Critical Paths under _main in BANK1
   646 ;;
   647 ;;   None.
   648 ;;
   649 ;; Critical Paths under _ISR in BANK1
   650 ;;
   651 ;;   None.
   652                           
   653 ;;
   654 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   655 ;;
   656                           
   657 ;;
   658 ;;Call Graph Tables:
   659 ;;
   660 ;; ---------------------------------------------------------------------------------
   661 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   662 ;; ---------------------------------------------------------------------------------
   663 ;; (0) _main                                                 0     0      0    5474
   664 ;;                     _SetupProcessor
   665 ;;                  _Timer_Constructor
   666 ;;              _IntializeStateMachine
   667 ;;                _ProcessStateMachine
   668 ;; ---------------------------------------------------------------------------------
   669 ;; (1) _ProcessStateMachine                                  0     0      0    5341
   670 ;;                   __Timer_IsExpired
   671 ;;                       __Timer_Start
   672 ;;                      _ProcessButton
   673 ;;                        _ProcessLink
   674 ;;                  _ProcessNordicBoot
   675 ;;                     _ProcessAKMBoot
   676 ;;                  _ProcessEnterSleep
   677 ;;                     _ProcessPairing
   678 ;; ---------------------------------------------------------------------------------
   679 ;; (2) _ProcessLink                                          1     1      0     664
   680 ;;                                             10 BANK0      1     1      0
   681 ;;                 _Nordic_LinkPresent
   682 ;;                           _delay_ms
   683 ;; ---------------------------------------------------------------------------------
   684 ;; (2) _ProcessNordicBoot                                    0     0      0    1462
   685 ;;                           _delay_ms
   686 ;;                      _Nordic_Wakeup
   687 ;; ---------------------------------------------------------------------------------
   688 ;; (2) _ProcessAKMBoot                                       1     1      0     839
   689 ;;                                              9 BANK0      1     1      0
   690 ;;                    _AKM_Constructor
   691 ;; ---------------------------------------------------------------------------------
   692 ;; (2) _ProcessPairing                                       1     1      0    1517
   693 ;;                                             10 BANK0      1     1      0
   694 ;;                           _SPI_Send
   695 ;;                           _delay_ms
   696 ;;                 _Nordic_LinkPresent
   697 ;;                        _Nordic_Read
   698 ;; ---------------------------------------------------------------------------------
   699 ;; (2) _ProcessEnterSleep                                    1     1      0     485
   700 ;;                                              6 BANK0      1     1      0
   701 ;;                           _SPI_Send
   702 ;;                           _delay_ms
   703 ;; ---------------------------------------------------------------------------------
   704 ;; (3) _Nordic_Wakeup                                        7     7      0    1348
   705 ;;                                              8 BANK0      6     6      0
   706 ;;                           _SPI_Send
   707 ;;                        _Nordic_Read
   708 ;; ---------------------------------------------------------------------------------
   709 ;; (3) _Nordic_LinkPresent                                   2     2      0     550
   710 ;;                                              8 BANK0      2     2      0
   711 ;;                        _Nordic_Read
   712 ;; ---------------------------------------------------------------------------------
   713 ;; (3) _AKM_Constructor                                      3     3      0     839
   714 ;;                                              6 BANK0      3     3      0
   715 ;;                           _SPI_Send
   716 ;; ---------------------------------------------------------------------------------
   717 ;; (2) _ProcessButton                                        1     1      0     114
   718 ;;                                              5 COMMON     1     1      0
   719 ;;                           _delay_ms
   720 ;; ---------------------------------------------------------------------------------
   721 ;; (3) _Nordic_Read                                          5     5      0     482
   722 ;;                                              3 BANK0      5     5      0
   723 ;;                           _delay_ms
   724 ;;                         _ClockEight
   725 ;; ---------------------------------------------------------------------------------
   726 ;; (1) _IntializeStateMachine                                0     0      0     133
   727 ;;                       __Timer_Start
   728 ;; ---------------------------------------------------------------------------------
   729 ;; (3) _SPI_Send                                             3     1      2     371
   730 ;;                                              3 BANK0      3     1      2
   731 ;;                           _delay_ms
   732 ;;                         _ClockEight
   733 ;; ---------------------------------------------------------------------------------
   734 ;; (2) __Timer_IsExpired                                     5     5      0     127
   735 ;;                                              4 COMMON     2     2      0
   736 ;;                                              0 BANK0      3     3      0
   737 ;; ---------------------------------------------------------------------------------
   738 ;; (2) __Timer_Start                                         3     1      2     133
   739 ;;                                              4 COMMON     2     0      2
   740 ;;                                              0 BANK0      1     1      0
   741 ;; ---------------------------------------------------------------------------------
   742 ;; (4) _ClockEight                                           4     4      0     133
   743 ;;                                              4 COMMON     2     2      0
   744 ;;                                              0 BANK0      2     2      0
   745 ;; ---------------------------------------------------------------------------------
   746 ;; (1) _Timer_Constructor                                    0     0      0       0
   747 ;; ---------------------------------------------------------------------------------
   748 ;; (1) _SetupProcessor                                       0     0      0       0
   749 ;; ---------------------------------------------------------------------------------
   750 ;; (4) _delay_ms                                             4     4      0     114
   751 ;;                                              4 COMMON     1     1      0
   752 ;;                                              0 BANK0      3     3      0
   753 ;; ---------------------------------------------------------------------------------
   754 ;; Estimated maximum stack depth 4
   755 ;; ---------------------------------------------------------------------------------
   756 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   757 ;; ---------------------------------------------------------------------------------
   758 ;; (6) _ISR                                                  4     4      0       0
   759 ;;                                              0 COMMON     4     4      0
   760 ;;                _TimerSystem_TickIsr
   761 ;; ---------------------------------------------------------------------------------
   762 ;; (7) _TimerSystem_TickIsr                                  0     0      0       0
   763 ;; ---------------------------------------------------------------------------------
   764 ;; Estimated maximum stack depth 7
   765 ;; ---------------------------------------------------------------------------------
   766                           
   767 ;; Call Graph Graphs:
   768                           
   769 ;; _main (ROOT)
   770 ;;   _SetupProcessor
   771 ;;   _Timer_Constructor
   772 ;;   _IntializeStateMachine
   773 ;;     __Timer_Start
   774 ;;   _ProcessStateMachine
   775 ;;     __Timer_IsExpired
   776 ;;     __Timer_Start
   777 ;;     _ProcessButton
   778 ;;       _delay_ms
   779 ;;     _ProcessLink
   780 ;;       _Nordic_LinkPresent
   781 ;;         _Nordic_Read
   782 ;;           _delay_ms
   783 ;;           _ClockEight
   784 ;;       _delay_ms
   785 ;;     _ProcessNordicBoot
   786 ;;       _delay_ms
   787 ;;       _Nordic_Wakeup
   788 ;;         _SPI_Send
   789 ;;           _delay_ms
   790 ;;           _ClockEight
   791 ;;         _Nordic_Read
   792 ;;           _delay_ms
   793 ;;           _ClockEight
   794 ;;     _ProcessAKMBoot
   795 ;;       _AKM_Constructor
   796 ;;         _SPI_Send
   797 ;;           _delay_ms
   798 ;;           _ClockEight
   799 ;;     _ProcessEnterSleep
   800 ;;       _SPI_Send
   801 ;;         _delay_ms
   802 ;;         _ClockEight
   803 ;;       _delay_ms
   804 ;;     _ProcessPairing
   805 ;;       _SPI_Send
   806 ;;         _delay_ms
   807 ;;         _ClockEight
   808 ;;       _delay_ms
   809 ;;       _Nordic_LinkPresent
   810 ;;         _Nordic_Read
   811 ;;           _delay_ms
   812 ;;           _ClockEight
   813 ;;       _Nordic_Read
   814 ;;         _delay_ms
   815 ;;         _ClockEight
   816 ;;
   817 ;; _ISR (ROOT)
   818 ;;   _TimerSystem_TickIsr
   819 ;;
   820                           
   821 ;; Address spaces:
   822                           
   823 ;;Name               Size   Autos  Total    Cost      Usage
   824 ;;SFR1                 0      0       0       2        0.0%
   825 ;;BITSFR1              0      0       0       2        0.0%
   826 ;;BANK1               20      0       0       5        0.0%
   827 ;;BITBANK1            20      0       0       7        0.0%
   828 ;;CODE                 0      0       0       0        0.0%
   829 ;;DATA                 0      0      30       8        0.0%
   830 ;;ABS                  0      0      27       6        0.0%
   831 ;;NULL                 0      0       0       0        0.0%
   832 ;;STACK                0      0       9       2        0.0%
   833 ;;BANK0               50      E      1D       4       36.3%
   834 ;;BITBANK0            50      0       0       3        0.0%
   835 ;;SFR0                 0      0       0       1        0.0%
   836 ;;BITSFR0              0      0       0       1        0.0%
   837 ;;COMMON               E      6       A       1       71.4%
   838 ;;BITCOMMON            E      0       1       0        7.1%
   839 ;;EEDATA             100      0       0       0        0.0%
   840                           
   841                           	global	_main
   842                           psect	maintext,global,class=CODE,delta=2
   843                           global __pmaintext
   844  0638                     __pmaintext:
   845                           
   846 ;; *************** function _main *****************
   847 ;; Defined at:
   848 ;;		line 25 in file "C:\Projects\Nordic\dual wireless mic ref design\clean source code\TX\Main.c"
   849 ;; Parameters:    Size  Location     Type
   850 ;;		None
   851 ;; Auto vars:     Size  Location     Type
   852 ;;		None
   853 ;; Return value:  Size  Location     Type
   854 ;;		None               void
   855 ;; Registers used:
   856 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   857 ;; Tracked objects:
   858 ;;		On entry : 17F/0
   859 ;;		On exit  : 0/0
   860 ;;		Unchanged: 0/0
   861 ;; Data sizes:     COMMON   BANK0   BANK1
   862 ;;      Params:         0       0       0
   863 ;;      Locals:         0       0       0
   864 ;;      Temps:          0       0       0
   865 ;;      Totals:         0       0       0
   866 ;;Total ram usage:        0 bytes
   867 ;; Hardware stack levels required when called:    7
   868 ;; This function calls:
   869 ;;		_SetupProcessor
   870 ;;		_Timer_Constructor
   871 ;;		_IntializeStateMachine
   872 ;;		_ProcessStateMachine
   873 ;; This function is called by:
   874 ;;		Startup code after reset
   875 ;; This function uses a non-reentrant model
   876 ;;
   877                           psect	maintext
   878                           	file	"C:\Projects\Nordic\dual wireless mic ref design\clean source code\TX\Main.c"
   879                           	line	25
   880                           	global	__size_of_main
   881  000A                     	__size_of_main	equ	__end_of_main-_main
   882                           	
   883  0638                     _main:	
   884                           	opt	stack 1
   885                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   886                           	line	26
   887                           	
   888  0638                     l6665:	
   889                           ;Main.c: 26: SetupProcessor();
   890  0638  259E               	fcall	_SetupProcessor
   891                           	line	27
   892                           ;Main.c: 27: Timer_Constructor();
   893  0639  25E8               	fcall	_Timer_Constructor
   894                           	line	28
   895                           	
   896  063A                     l6667:	
   897                           ;Main.c: 28: IntializeStateMachine();
   898  063A  262D               	fcall	_IntializeStateMachine
   899  063B  2E3C               	goto	l6669
   900                           	line	30
   901                           ;Main.c: 30: while(1)
   902                           	
   903  063C                     l1122:	
   904                           	line	32
   905                           	
   906  063C                     l6669:	
   907                           ;Main.c: 31: {
   908                           ;Main.c: 32: GIE=0;
   909  063C  138B               	bcf	(95/8),(95)&7
   910                           	line	33
   911                           	
   912  063D                     l6671:	
   913                           ;Main.c: 33: ProcessStateMachine();
   914  063D  2523               	fcall	_ProcessStateMachine
   915                           	line	34
   916                           	
   917  063E                     l6673:	
   918                           ;Main.c: 34: GIE=1;
   919  063E  178B               	bsf	(95/8),(95)&7
   920  063F  2E3C               	goto	l6669
   921                           	line	36
   922                           	
   923  0640                     l1123:	
   924                           	line	30
   925  0640  2E3C               	goto	l6669
   926                           	
   927  0641                     l1124:	
   928                           	line	37
   929                           	
   930  0641                     l1125:	
   931                           	global	start
   932  0641  280F               	ljmp	start
   933                           	opt stack 0
   934                           GLOBAL	__end_of_main
   935  0642                     	__end_of_main:
   936 ;; =============== function _main ends ============
   937                           
   938                           	signat	_main,88
   939                           	global	_ProcessStateMachine
   940                           psect	text764,local,class=CODE,delta=2
   941                           global __ptext764
   942  0523                     __ptext764:
   943                           
   944 ;; *************** function _ProcessStateMachine *****************
   945 ;; Defined at:
   946 ;;		line 228 in file "C:\Projects\Nordic\dual wireless mic ref design\clean source code\TX\statemachine.c"
   947 ;; Parameters:    Size  Location     Type
   948 ;;		None
   949 ;; Auto vars:     Size  Location     Type
   950 ;;		None
   951 ;; Return value:  Size  Location     Type
   952 ;;		None               void
   953 ;; Registers used:
   954 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   955 ;; Tracked objects:
   956 ;;		On entry : 0/0
   957 ;;		On exit  : 0/0
   958 ;;		Unchanged: 0/0
   959 ;; Data sizes:     COMMON   BANK0   BANK1
   960 ;;      Params:         0       0       0
   961 ;;      Locals:         0       0       0
   962 ;;      Temps:          0       0       0
   963 ;;      Totals:         0       0       0
   964 ;;Total ram usage:        0 bytes
   965 ;; Hardware stack levels used:    1
   966 ;; Hardware stack levels required when called:    6
   967 ;; This function calls:
   968 ;;		__Timer_IsExpired
   969 ;;		__Timer_Start
   970 ;;		_ProcessButton
   971 ;;		_ProcessLink
   972 ;;		_ProcessNordicBoot
   973 ;;		_ProcessAKMBoot
   974 ;;		_ProcessEnterSleep
   975 ;;		_ProcessPairing
   976 ;; This function is called by:
   977 ;;		_main
   978 ;; This function uses a non-reentrant model
   979 ;;
   980                           psect	text764
   981                           	file	"C:\Projects\Nordic\dual wireless mic ref design\clean source code\TX\statemachine
                                 .c"
   982                           	line	228
   983                           	global	__size_of_ProcessStateMachine
   984  002B                     	__size_of_ProcessStateMachine	equ	__end_of_ProcessStateMachine-_ProcessStateMachine
   985                           	
   986  0523                     _ProcessStateMachine:	
   987                           	opt	stack 1
   988                           ; Regs used in _ProcessStateMachine: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack
                                 ]
   989                           	
   990  0523                     l6639:	
   991                           # 228 "C:\Projects\Nordic\dual wireless mic ref design\clean source code\TX\statemachine
                                 .c"
   992  0523  0064                CLRWDT ;#
   993                           	line	230
   994                           # 230 "C:\Projects\Nordic\dual wireless mic ref design\clean source code\TX\statemachine
                                 .c"
   995                           # 229 ;#
   996                           psect	text764
   997                           	line	232
   998                           	
   999  0524                     l6641:	
  1000                           ;statemachine.c: 232: if ( _Timer_IsExpired(&(StateMachineTimer)) )
  1001  0524  3037               	movlw	(_StateMachineTimer)&0ffh
  1002  0525  2488               	fcall	__Timer_IsExpired
  1003  0526  3A00               	xorlw	0
  1004  0527  1903               	skipnz
  1005  0528  2D2A               	goto	u3661
  1006  0529  2D2B               	goto	u3660
  1007  052A                     u3661:
  1008  052A  2D4D               	goto	l2922
  1009  052B                     u3660:
  1010                           	line	235
  1011                           	
  1012  052B                     l6643:	
  1013                           ;statemachine.c: 233: {
  1014                           ;statemachine.c: 235: _Timer_Start(&(StateMachineTimer), (6));
  1015  052B  3006               	movlw	low(06h)
  1016  052C  00F4               	movwf	(?__Timer_Start)
  1017  052D  3000               	movlw	high(06h)
  1018  052E  00F5               	movwf	((?__Timer_Start))+1
  1019  052F  3037               	movlw	(_StateMachineTimer)&0ffh
  1020  0530  24C0               	fcall	__Timer_Start
  1021                           	line	237
  1022                           ;statemachine.c: 237: switch ( CurrentState ) {
  1023  0531  2D40               	goto	l6659
  1024                           	line	238
  1025                           ;statemachine.c: 238: case BUTTON_STATE:
  1026                           	
  1027  0532                     l2914:	
  1028                           	line	239
  1029                           	
  1030  0532                     l6645:	
  1031                           ;statemachine.c: 239: ProcessButton();
  1032  0532  2010               	fcall	_ProcessButton
  1033                           	line	240
  1034                           ;statemachine.c: 240: break;
  1035  0533  2D4D               	goto	l2922
  1036                           	line	241
  1037                           ;statemachine.c: 241: case LINK_CHECK:
  1038                           	
  1039  0534                     l2916:	
  1040                           	line	242
  1041                           	
  1042  0534                     l6647:	
  1043                           ;statemachine.c: 242: ProcessLink();
  1044  0534  254E               	fcall	_ProcessLink
  1045                           	line	243
  1046                           ;statemachine.c: 243: break;
  1047  0535  2D4D               	goto	l2922
  1048                           	line	244
  1049                           ;statemachine.c: 244: case LOAD_NORDIC:
  1050                           	
  1051  0536                     l2917:	
  1052                           	line	245
  1053                           	
  1054  0536                     l6649:	
  1055                           ;statemachine.c: 245: ProcessNordicBoot();
  1056  0536  2621               	fcall	_ProcessNordicBoot
  1057                           	line	246
  1058                           ;statemachine.c: 246: break;
  1059  0537  2D4D               	goto	l2922
  1060                           	line	247
  1061                           ;statemachine.c: 247: case LOAD_AKM:
  1062                           	
  1063  0538                     l2918:	
  1064                           	line	248
  1065                           	
  1066  0538                     l6651:	
  1067                           ;statemachine.c: 248: ProcessAKMBoot();
  1068  0538  264A               	fcall	_ProcessAKMBoot
  1069                           	line	249
  1070                           ;statemachine.c: 249: break;
  1071  0539  2D4D               	goto	l2922
  1072                           	line	250
  1073                           ;statemachine.c: 250: case ENTER_SLEEP:
  1074                           	
  1075  053A                     l2919:	
  1076                           	line	251
  1077                           	
  1078  053A                     l6653:	
  1079                           ;statemachine.c: 251: ProcessEnterSleep();
  1080  053A  25BD               	fcall	_ProcessEnterSleep
  1081                           	line	252
  1082                           ;statemachine.c: 252: break;
  1083  053B  2D4D               	goto	l2922
  1084                           	line	253
  1085                           ;statemachine.c: 253: case PAIRING:
  1086                           	
  1087  053C                     l2920:	
  1088                           	line	254
  1089                           	
  1090  053C                     l6655:	
  1091                           ;statemachine.c: 254: ProcessPairing();
  1092  053C  20FB               	fcall	_ProcessPairing
  1093                           	line	255
  1094                           ;statemachine.c: 255: break;
  1095  053D  2D4D               	goto	l2922
  1096                           	line	257
  1097                           ;statemachine.c: 257: default :
  1098                           	
  1099  053E                     l2921:	
  1100                           	line	258
  1101                           ;statemachine.c: 258: break;
  1102  053E  2D4D               	goto	l2922
  1103                           	line	259
  1104                           	
  1105  053F                     l6657:	
  1106                           ;statemachine.c: 259: }
  1107  053F  2D4D               	goto	l2922
  1108                           	line	237
  1109                           	
  1110  0540                     l2913:	
  1111                           	
  1112  0540                     l6659:	
  1113  0540  1283               	bcf	status, 5	;RP0=0, select bank0
  1114  0541  083B               	movf	(_CurrentState),w
  1115                           	; Switch size 1, requested type "space"
  1116                           ; Number of cases is 6, Range of values is 0 to 6
  1117                           ; switch strategies available:
  1118                           ; Name         Instructions Cycles
  1119                           ; direct_byte           13     6 (fixed)
  1120                           ; simple_byte           19    10 (average)
  1121                           ; jumptable            260     6 (fixed)
  1122                           ; rangetable            11     6 (fixed)
  1123                           ; spacedrange           20     9 (fixed)
  1124                           ; locatedrange           7     3 (fixed)
  1125                           ;	Chosen strategy is direct_byte
  1126                           
  1127  0542  0084               	movwf fsr
  1128  0543  3007               	movlw	7
  1129  0544  0204               	subwf	fsr,w
  1130  0545  1803               skipnc
  1131  0546  2D4D               goto l2922
  1132  0547  3002               movlw high(S6695)
  1133  0548  008A               movwf pclath
  1134  0549  3090               	movlw low(S6695)
  1135  054A  0704               	addwf fsr,w
  1136  054B  0082               	movwf pc
  1137                           psect	swtext1,local,class=CONST,delta=2
  1138                           global __pswtext1
  1139  0290                     __pswtext1:
  1140  0290                     S6695:
  1141  0290  2D34               	ljmp	l6647
  1142  0291  2D32               	ljmp	l6645
  1143  0292  2D36               	ljmp	l6649
  1144  0293  2D38               	ljmp	l6651
  1145  0294  2D3A               	ljmp	l6653
  1146  0295  2D4D               	ljmp	l2922
  1147  0296  2D3C               	ljmp	l6655
  1148                           psect	text764
  1149                           
  1150                           	line	259
  1151                           	
  1152  054C                     l2915:	
  1153  054C  2D4D               	goto	l2922
  1154                           	line	260
  1155                           	
  1156  054D                     l2912:	
  1157                           	line	262
  1158                           	
  1159  054D                     l2922:	
  1160  054D  0008               	return
  1161                           	opt stack 0
  1162                           GLOBAL	__end_of_ProcessStateMachine
  1163  054E                     	__end_of_ProcessStateMachine:
  1164 ;; =============== function _ProcessStateMachine ends ============
  1165                           
  1166                           	signat	_ProcessStateMachine,88
  1167                           	global	_ProcessLink
  1168                           psect	text765,local,class=CODE,delta=2
  1169                           global __ptext765
  1170  054E                     __ptext765:
  1171                           
  1172 ;; *************** function _ProcessLink *****************
  1173 ;; Defined at:
  1174 ;;		line 203 in file "C:\Projects\Nordic\dual wireless mic ref design\clean source code\TX\statemachine.c"
  1175 ;; Parameters:    Size  Location     Type
  1176 ;;		None
  1177 ;; Auto vars:     Size  Location     Type
  1178 ;;		None
  1179 ;; Return value:  Size  Location     Type
  1180 ;;		None               void
  1181 ;; Registers used:
  1182 ;;		wreg, status,2, status,0, pclath, cstack
  1183 ;; Tracked objects:
  1184 ;;		On entry : 0/0
  1185 ;;		On exit  : 0/0
  1186 ;;		Unchanged: 0/0
  1187 ;; Data sizes:     COMMON   BANK0   BANK1
  1188 ;;      Params:         0       0       0
  1189 ;;      Locals:         0       0       0
  1190 ;;      Temps:          0       1       0
  1191 ;;      Totals:         0       1       0
  1192 ;;Total ram usage:        1 bytes
  1193 ;; Hardware stack levels used:    1
  1194 ;; Hardware stack levels required when called:    5
  1195 ;; This function calls:
  1196 ;;		_Nordic_LinkPresent
  1197 ;;		_delay_ms
  1198 ;; This function is called by:
  1199 ;;		_ProcessStateMachine
  1200 ;; This function uses a non-reentrant model
  1201 ;;
  1202                           psect	text765
  1203                           	file	"C:\Projects\Nordic\dual wireless mic ref design\clean source code\TX\statemachine
                                 .c"
  1204                           	line	203
  1205                           	global	__size_of_ProcessLink
  1206  002A                     	__size_of_ProcessLink	equ	__end_of_ProcessLink-_ProcessLink
  1207                           	
  1208  054E                     _ProcessLink:	
  1209                           	opt	stack 1
  1210                           ; Regs used in _ProcessLink: [wreg+status,2+status,0+pclath+cstack]
  1211                           	line	204
  1212                           	
  1213  054E                     l6621:	
  1214                           ;statemachine.c: 204: if ( linkcount == 0)
  1215  054E  1283               	bcf	status, 5	;RP0=0, select bank0
  1216  054F  08BC               	movf	(_linkcount),f
  1217  0550  1D03               	skipz
  1218  0551  2D53               	goto	u3641
  1219  0552  2D54               	goto	u3640
  1220  0553                     u3641:
  1221  0553  2D6F               	goto	l6635
  1222  0554                     u3640:
  1223                           	line	206
  1224                           	
  1225  0554                     l6623:	
  1226                           ;statemachine.c: 205: {
  1227                           ;statemachine.c: 206: linkcount=100;
  1228  0554  3064               	movlw	(064h)
  1229  0555  00AA               	movwf	(??_ProcessLink+0)+0
  1230  0556  082A               	movf	(??_ProcessLink+0)+0,w
  1231  0557  00BC               	movwf	(_linkcount)
  1232                           	line	207
  1233                           	
  1234  0558                     l6625:	
  1235                           ;statemachine.c: 207: if ( Nordic_LinkPresent())
  1236  0558  25F8               	fcall	_Nordic_LinkPresent
  1237  0559  3A00               	xorlw	0
  1238  055A  1903               	skipnz
  1239  055B  2D5D               	goto	u3651
  1240  055C  2D5E               	goto	u3650
  1241  055D                     u3651:
  1242  055D  2D64               	goto	l2906
  1243  055E                     u3650:
  1244                           	line	209
  1245                           	
  1246  055E                     l6627:	
  1247                           ;statemachine.c: 208: {
  1248                           ;statemachine.c: 209: link=1;
  1249  055E  01F8               	clrf	(_link)
  1250  055F  1403               	bsf	status,0
  1251  0560  0DF8               	rlf	(_link),f
  1252                           	line	210
  1253                           	
  1254  0561                     l6629:	
  1255                           ;statemachine.c: 210: RA0=1;
  1256  0561  1283               	bcf	status, 5	;RP0=0, select bank0
  1257  0562  1405               	bsf	(40/8),(40)&7
  1258                           	line	211
  1259                           ;statemachine.c: 211: }
  1260  0563  2D73               	goto	l6637
  1261                           	line	212
  1262                           	
  1263  0564                     l2906:	
  1264                           	line	214
  1265                           ;statemachine.c: 212: else
  1266                           ;statemachine.c: 213: {
  1267                           ;statemachine.c: 214: link=0;
  1268  0564  01F8               	clrf	(_link)
  1269                           	line	215
  1270                           ;statemachine.c: 215: RA0=1;
  1271  0565  1283               	bcf	status, 5	;RP0=0, select bank0
  1272  0566  1405               	bsf	(40/8),(40)&7
  1273                           	line	216
  1274                           	
  1275  0567                     l6631:	
  1276                           ;statemachine.c: 216: delay_ms(200);
  1277  0567  30C8               	movlw	(0C8h)
  1278  0568  24F4               	fcall	_delay_ms
  1279                           	line	217
  1280                           	
  1281  0569                     l6633:	
  1282                           ;statemachine.c: 217: RA0=0;
  1283  0569  1283               	bcf	status, 5	;RP0=0, select bank0
  1284  056A  1005               	bcf	(40/8),(40)&7
  1285                           	line	218
  1286                           ;statemachine.c: 218: delay_ms(200);
  1287  056B  30C8               	movlw	(0C8h)
  1288  056C  24F4               	fcall	_delay_ms
  1289  056D  2D73               	goto	l6637
  1290                           	line	219
  1291                           	
  1292  056E                     l2907:	
  1293                           	line	220
  1294                           ;statemachine.c: 219: }
  1295                           ;statemachine.c: 220: }
  1296  056E  2D73               	goto	l6637
  1297                           	line	221
  1298                           	
  1299  056F                     l2905:	
  1300                           	line	222
  1301                           	
  1302  056F                     l6635:	
  1303                           ;statemachine.c: 221: else
  1304                           ;statemachine.c: 222: linkcount--;
  1305  056F  3001               	movlw	low(01h)
  1306  0570  1283               	bcf	status, 5	;RP0=0, select bank0
  1307  0571  02BC               	subwf	(_linkcount),f
  1308  0572  2D73               	goto	l6637
  1309                           	
  1310  0573                     l2908:	
  1311                           	line	224
  1312                           	
  1313  0573                     l6637:	
  1314                           ;statemachine.c: 224: CurrentState=BUTTON_STATE;
  1315  0573  1283               	bcf	status, 5	;RP0=0, select bank0
  1316  0574  01BB               	clrf	(_CurrentState)
  1317  0575  1403               	bsf	status,0
  1318  0576  0DBB               	rlf	(_CurrentState),f
  1319                           	line	225
  1320                           	
  1321  0577                     l2909:	
  1322  0577  0008               	return
  1323                           	opt stack 0
  1324                           GLOBAL	__end_of_ProcessLink
  1325  0578                     	__end_of_ProcessLink:
  1326 ;; =============== function _ProcessLink ends ============
  1327                           
  1328                           	signat	_ProcessLink,88
  1329                           	global	_ProcessNordicBoot
  1330                           psect	text766,local,class=CODE,delta=2
  1331                           global __ptext766
  1332  0621                     __ptext766:
  1333                           
  1334 ;; *************** function _ProcessNordicBoot *****************
  1335 ;; Defined at:
  1336 ;;		line 194 in file "C:\Projects\Nordic\dual wireless mic ref design\clean source code\TX\statemachine.c"
  1337 ;; Parameters:    Size  Location     Type
  1338 ;;		None
  1339 ;; Auto vars:     Size  Location     Type
  1340 ;;		None
  1341 ;; Return value:  Size  Location     Type
  1342 ;;		None               void
  1343 ;; Registers used:
  1344 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1345 ;; Tracked objects:
  1346 ;;		On entry : 0/0
  1347 ;;		On exit  : 0/0
  1348 ;;		Unchanged: 0/0
  1349 ;; Data sizes:     COMMON   BANK0   BANK1
  1350 ;;      Params:         0       0       0
  1351 ;;      Locals:         0       0       0
  1352 ;;      Temps:          0       0       0
  1353 ;;      Totals:         0       0       0
  1354 ;;Total ram usage:        0 bytes
  1355 ;; Hardware stack levels used:    1
  1356 ;; Hardware stack levels required when called:    5
  1357 ;; This function calls:
  1358 ;;		_delay_ms
  1359 ;;		_Nordic_Wakeup
  1360 ;; This function is called by:
  1361 ;;		_ProcessStateMachine
  1362 ;; This function uses a non-reentrant model
  1363 ;;
  1364                           psect	text766
  1365                           	file	"C:\Projects\Nordic\dual wireless mic ref design\clean source code\TX\statemachine
                                 .c"
  1366                           	line	194
  1367                           	global	__size_of_ProcessNordicBoot
  1368  000C                     	__size_of_ProcessNordicBoot	equ	__end_of_ProcessNordicBoot-_ProcessNordicBoot
  1369                           	
  1370  0621                     _ProcessNordicBoot:	
  1371                           	opt	stack 1
  1372                           ; Regs used in _ProcessNordicBoot: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1373                           	line	195
  1374                           	
  1375  0621                     l6613:	
  1376                           ;statemachine.c: 195: RC5=0;
  1377  0621  1283               	bcf	status, 5	;RP0=0, select bank0
  1378  0622  1287               	bcf	(61/8),(61)&7
  1379                           	line	196
  1380                           	
  1381  0623                     l6615:	
  1382                           ;statemachine.c: 196: delay_ms(255);
  1383  0623  30FF               	movlw	(0FFh)
  1384  0624  24F4               	fcall	_delay_ms
  1385                           	line	197
  1386                           ;statemachine.c: 197: delay_ms(255);
  1387  0625  30FF               	movlw	(0FFh)
  1388  0626  24F4               	fcall	_delay_ms
  1389                           	line	198
  1390                           ;statemachine.c: 198: delay_ms(255);
  1391  0627  30FF               	movlw	(0FFh)
  1392  0628  24F4               	fcall	_delay_ms
  1393                           	line	199
  1394                           	
  1395  0629                     l6617:	
  1396                           ;statemachine.c: 199: Nordic_Wakeup();
  1397  0629  238D               	fcall	_Nordic_Wakeup
  1398                           	line	200
  1399                           	
  1400  062A                     l6619:	
  1401                           ;statemachine.c: 200: CurrentState=LINK_CHECK;
  1402  062A  1283               	bcf	status, 5	;RP0=0, select bank0
  1403  062B  01BB               	clrf	(_CurrentState)
  1404                           	line	201
  1405                           	
  1406  062C                     l2902:	
  1407  062C  0008               	return
  1408                           	opt stack 0
  1409                           GLOBAL	__end_of_ProcessNordicBoot
  1410  062D                     	__end_of_ProcessNordicBoot:
  1411 ;; =============== function _ProcessNordicBoot ends ============
  1412                           
  1413                           	signat	_ProcessNordicBoot,88
  1414                           	global	_ProcessAKMBoot
  1415                           psect	text767,local,class=CODE,delta=2
  1416                           global __ptext767
  1417  064A                     __ptext767:
  1418                           
  1419 ;; *************** function _ProcessAKMBoot *****************
  1420 ;; Defined at:
  1421 ;;		line 188 in file "C:\Projects\Nordic\dual wireless mic ref design\clean source code\TX\statemachine.c"
  1422 ;; Parameters:    Size  Location     Type
  1423 ;;		None
  1424 ;; Auto vars:     Size  Location     Type
  1425 ;;		None
  1426 ;; Return value:  Size  Location     Type
  1427 ;;		None               void
  1428 ;; Registers used:
  1429 ;;		wreg, status,2, status,0, pclath, cstack
  1430 ;; Tracked objects:
  1431 ;;		On entry : 0/0
  1432 ;;		On exit  : 0/0
  1433 ;;		Unchanged: 0/0
  1434 ;; Data sizes:     COMMON   BANK0   BANK1
  1435 ;;      Params:         0       0       0
  1436 ;;      Locals:         0       0       0
  1437 ;;      Temps:          0       1       0
  1438 ;;      Totals:         0       1       0
  1439 ;;Total ram usage:        1 bytes
  1440 ;; Hardware stack levels used:    1
  1441 ;; Hardware stack levels required when called:    5
  1442 ;; This function calls:
  1443 ;;		_AKM_Constructor
  1444 ;; This function is called by:
  1445 ;;		_ProcessStateMachine
  1446 ;; This function uses a non-reentrant model
  1447 ;;
  1448                           psect	text767
  1449                           	file	"C:\Projects\Nordic\dual wireless mic ref design\clean source code\TX\statemachine
                                 .c"
  1450                           	line	188
  1451                           	global	__size_of_ProcessAKMBoot
  1452  0007                     	__size_of_ProcessAKMBoot	equ	__end_of_ProcessAKMBoot-_ProcessAKMBoot
  1453                           	
  1454  064A                     _ProcessAKMBoot:	
  1455                           	opt	stack 1
  1456                           ; Regs used in _ProcessAKMBoot: [wreg+status,2+status,0+pclath+cstack]
  1457                           	line	189
  1458                           	
  1459  064A                     l6609:	
  1460                           ;statemachine.c: 189: AKM_Constructor();
  1461  064A  21CC               	fcall	_AKM_Constructor
  1462                           	line	190
  1463                           	
  1464  064B                     l6611:	
  1465                           ;statemachine.c: 190: CurrentState=LOAD_NORDIC;
  1466  064B  3002               	movlw	(02h)
  1467  064C  1283               	bcf	status, 5	;RP0=0, select bank0
  1468  064D  00A9               	movwf	(??_ProcessAKMBoot+0)+0
  1469  064E  0829               	movf	(??_ProcessAKMBoot+0)+0,w
  1470  064F  00BB               	movwf	(_CurrentState)
  1471                           	line	191
  1472                           	
  1473  0650                     l2899:	
  1474  0650  0008               	return
  1475                           	opt stack 0
  1476                           GLOBAL	__end_of_ProcessAKMBoot
  1477  0651                     	__end_of_ProcessAKMBoot:
  1478 ;; =============== function _ProcessAKMBoot ends ============
  1479                           
  1480                           	signat	_ProcessAKMBoot,88
  1481                           	global	_ProcessPairing
  1482                           psect	text768,local,class=CODE,delta=2
  1483                           global __ptext768
  1484  00FB                     __ptext768:
  1485                           
  1486 ;; *************** function _ProcessPairing *****************
  1487 ;; Defined at:
  1488 ;;		line 124 in file "C:\Projects\Nordic\dual wireless mic ref design\clean source code\TX\statemachine.c"
  1489 ;; Parameters:    Size  Location     Type
  1490 ;;		None
  1491 ;; Auto vars:     Size  Location     Type
  1492 ;;		None
  1493 ;; Return value:  Size  Location     Type
  1494 ;;		None               void
  1495 ;; Registers used:
  1496 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1497 ;; Tracked objects:
  1498 ;;		On entry : 0/0
  1499 ;;		On exit  : 0/0
  1500 ;;		Unchanged: 0/0
  1501 ;; Data sizes:     COMMON   BANK0   BANK1
  1502 ;;      Params:         0       0       0
  1503 ;;      Locals:         0       0       0
  1504 ;;      Temps:          0       1       0
  1505 ;;      Totals:         0       1       0
  1506 ;;Total ram usage:        1 bytes
  1507 ;; Hardware stack levels used:    1
  1508 ;; Hardware stack levels required when called:    5
  1509 ;; This function calls:
  1510 ;;		_SPI_Send
  1511 ;;		_delay_ms
  1512 ;;		_Nordic_LinkPresent
  1513 ;;		_Nordic_Read
  1514 ;; This function is called by:
  1515 ;;		_ProcessStateMachine
  1516 ;; This function uses a non-reentrant model
  1517 ;;
  1518                           psect	text768
  1519                           	file	"C:\Projects\Nordic\dual wireless mic ref design\clean source code\TX\statemachine
                                 .c"
  1520                           	line	124
  1521                           	global	__size_of_ProcessPairing
  1522  00D1                     	__size_of_ProcessPairing	equ	__end_of_ProcessPairing-_ProcessPairing
  1523                           	
  1524  00FB                     _ProcessPairing:	
  1525                           	opt	stack 1
  1526                           ; Regs used in _ProcessPairing: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1527                           	line	125
  1528                           	
  1529  00FB                     l6507:	
  1530                           ;statemachine.c: 125: CurrentState=BUTTON_STATE;
  1531  00FB  1283               	bcf	status, 5	;RP0=0, select bank0
  1532  00FC  01BB               	clrf	(_CurrentState)
  1533  00FD  1403               	bsf	status,0
  1534  00FE  0DBB               	rlf	(_CurrentState),f
  1535                           	line	127
  1536                           	
  1537  00FF                     l6509:	
  1538                           ;statemachine.c: 127: for (i=0;i<5;i++)
  1539  00FF  01B4               	clrf	(_i)
  1540                           	
  1541  0100                     l6511:	
  1542  0100  3005               	movlw	(05h)
  1543  0101  0234               	subwf	(_i),w
  1544  0102  1C03               	skipc
  1545  0103  2905               	goto	u3541
  1546  0104  2906               	goto	u3540
  1547  0105                     u3541:
  1548  0105  2908               	goto	l6515
  1549  0106                     u3540:
  1550  0106  291F               	goto	l6521
  1551                           	
  1552  0107                     l6513:	
  1553  0107  291F               	goto	l6521
  1554                           	line	128
  1555                           	
  1556  0108                     l2881:	
  1557                           	
  1558  0108                     l6515:	
  1559                           ;statemachine.c: 128: SPI_Send( 0x39+i,PairingAddress[i],NORDIC_TARGET);
  1560  0108  0834               	movf	(_i),w
  1561  0109  3E83               	addlw	low((_PairingAddress-__stringbase))
  1562  010A  0084               	movwf	fsr0
  1563  010B  2300               	fcall	stringdir
  1564  010C  00AA               	movwf	(??_ProcessPairing+0)+0
  1565  010D  082A               	movf	(??_ProcessPairing+0)+0,w
  1566  010E  00A3               	movwf	(?_SPI_Send)
  1567  010F  01A4               	clrf	0+(?_SPI_Send)+01h
  1568  0110  0834               	movf	(_i),w
  1569  0111  3E39               	addlw	039h
  1570  0112  2578               	fcall	_SPI_Send
  1571                           	line	127
  1572                           	
  1573  0113                     l6517:	
  1574  0113  3001               	movlw	(01h)
  1575  0114  1283               	bcf	status, 5	;RP0=0, select bank0
  1576  0115  00AA               	movwf	(??_ProcessPairing+0)+0
  1577  0116  082A               	movf	(??_ProcessPairing+0)+0,w
  1578  0117  07B4               	addwf	(_i),f
  1579                           	
  1580  0118                     l6519:	
  1581  0118  3005               	movlw	(05h)
  1582  0119  0234               	subwf	(_i),w
  1583  011A  1C03               	skipc
  1584  011B  291D               	goto	u3551
  1585  011C  291E               	goto	u3550
  1586  011D                     u3551:
  1587  011D  2908               	goto	l6515
  1588  011E                     u3550:
  1589  011E  291F               	goto	l6521
  1590                           	
  1591  011F                     l2882:	
  1592                           	line	130
  1593                           	
  1594  011F                     l6521:	
  1595                           ;statemachine.c: 130: SPI_Send( 0x36,0x10,NORDIC_TARGET);
  1596  011F  3010               	movlw	(010h)
  1597  0120  00AA               	movwf	(??_ProcessPairing+0)+0
  1598  0121  082A               	movf	(??_ProcessPairing+0)+0,w
  1599  0122  00A3               	movwf	(?_SPI_Send)
  1600  0123  01A4               	clrf	0+(?_SPI_Send)+01h
  1601  0124  3036               	movlw	(036h)
  1602  0125  2578               	fcall	_SPI_Send
  1603                           	line	132
  1604                           ;statemachine.c: 132: while (!Nordic_LinkPresent() && timeout<20 )
  1605  0126  2975               	goto	l6583
  1606                           	
  1607  0127                     l2884:	
  1608                           	line	134
  1609                           	
  1610  0127                     l6523:	
  1611                           ;statemachine.c: 133: {
  1612                           ;statemachine.c: 134: no_link_count++;
  1613  0127  3001               	movlw	(01h)
  1614  0128  1283               	bcf	status, 5	;RP0=0, select bank0
  1615  0129  00AA               	movwf	(??_ProcessPairing+0)+0
  1616  012A  082A               	movf	(??_ProcessPairing+0)+0,w
  1617  012B  07B5               	addwf	(_no_link_count),f
  1618                           	line	135
  1619                           ;statemachine.c: 135: timeout++;
  1620  012C  3001               	movlw	(01h)
  1621  012D  00AA               	movwf	(??_ProcessPairing+0)+0
  1622  012E  082A               	movf	(??_ProcessPairing+0)+0,w
  1623  012F  07B6               	addwf	(_timeout),f
  1624                           	line	136
  1625                           	
  1626  0130                     l6525:	
  1627                           ;statemachine.c: 136: if (no_link_count==10)
  1628  0130  0835               	movf	(_no_link_count),w
  1629  0131  3A0A               	xorlw	0Ah
  1630  0132  1D03               	skipz
  1631  0133  2935               	goto	u3561
  1632  0134  2936               	goto	u3560
  1633  0135                     u3561:
  1634  0135  2937               	goto	l2885
  1635  0136                     u3560:
  1636                           	line	139
  1637                           	
  1638  0136                     l6527:	
  1639                           ;statemachine.c: 137: {
  1640                           ;statemachine.c: 139: no_link_count=0;
  1641  0136  01B5               	clrf	(_no_link_count)
  1642                           	line	140
  1643                           	
  1644  0137                     l2885:	
  1645                           	line	142
  1646                           ;statemachine.c: 140: }
  1647                           ;statemachine.c: 142: if (RA3==0)
  1648  0137  1985               	btfsc	(43/8),(43)&7
  1649  0138  293A               	goto	u3571
  1650  0139  293B               	goto	u3570
  1651  013A                     u3571:
  1652  013A  2944               	goto	l6531
  1653  013B                     u3570:
  1654                           	line	144
  1655                           	
  1656  013B                     l6529:	
  1657                           ;statemachine.c: 143: {
  1658                           ;statemachine.c: 144: timeout=20;
  1659  013B  3014               	movlw	(014h)
  1660  013C  00AA               	movwf	(??_ProcessPairing+0)+0
  1661  013D  082A               	movf	(??_ProcessPairing+0)+0,w
  1662  013E  00B6               	movwf	(_timeout)
  1663                           	line	145
  1664                           ;statemachine.c: 145: CurrentState=ENTER_SLEEP;
  1665  013F  3004               	movlw	(04h)
  1666  0140  00AA               	movwf	(??_ProcessPairing+0)+0
  1667  0141  082A               	movf	(??_ProcessPairing+0)+0,w
  1668  0142  00BB               	movwf	(_CurrentState)
  1669  0143  2944               	goto	l6531
  1670                           	line	146
  1671                           	
  1672  0144                     l2886:	
  1673                           	line	147
  1674                           	
  1675  0144                     l6531:	
  1676                           ;statemachine.c: 146: }
  1677                           ;statemachine.c: 147: RA0=1;
  1678  0144  1405               	bsf	(40/8),(40)&7
  1679                           	line	148
  1680                           	
  1681  0145                     l6533:	
  1682                           ;statemachine.c: 148: delay_ms(50);
  1683  0145  3032               	movlw	(032h)
  1684  0146  24F4               	fcall	_delay_ms
  1685                           	line	149
  1686                           	
  1687  0147                     l6535:	
  1688                           ;statemachine.c: 149: RA0=0;
  1689  0147  1283               	bcf	status, 5	;RP0=0, select bank0
  1690  0148  1005               	bcf	(40/8),(40)&7
  1691                           	line	150
  1692                           	
  1693  0149                     l6537:	
  1694                           ;statemachine.c: 150: delay_ms(50);
  1695  0149  3032               	movlw	(032h)
  1696  014A  24F4               	fcall	_delay_ms
  1697                           	line	151
  1698                           	
  1699  014B                     l6539:	
  1700                           ;statemachine.c: 151: RA0=1;
  1701  014B  1283               	bcf	status, 5	;RP0=0, select bank0
  1702  014C  1405               	bsf	(40/8),(40)&7
  1703                           	line	152
  1704                           	
  1705  014D                     l6541:	
  1706                           ;statemachine.c: 152: delay_ms(50);
  1707  014D  3032               	movlw	(032h)
  1708  014E  24F4               	fcall	_delay_ms
  1709                           	line	153
  1710                           	
  1711  014F                     l6543:	
  1712                           ;statemachine.c: 153: RA0=0;
  1713  014F  1283               	bcf	status, 5	;RP0=0, select bank0
  1714  0150  1005               	bcf	(40/8),(40)&7
  1715                           	line	154
  1716                           	
  1717  0151                     l6545:	
  1718                           ;statemachine.c: 154: delay_ms(50);
  1719  0151  3032               	movlw	(032h)
  1720  0152  24F4               	fcall	_delay_ms
  1721                           	line	155
  1722                           	
  1723  0153                     l6547:	
  1724                           ;statemachine.c: 155: delay_ms(100);delay_ms(100);
  1725  0153  3064               	movlw	(064h)
  1726  0154  24F4               	fcall	_delay_ms
  1727                           	
  1728  0155                     l6549:	
  1729  0155  3064               	movlw	(064h)
  1730  0156  24F4               	fcall	_delay_ms
  1731                           	line	156
  1732                           	
  1733  0157                     l6551:	
  1734                           ;statemachine.c: 156: delay_ms(100);delay_ms(100);
  1735  0157  3064               	movlw	(064h)
  1736  0158  24F4               	fcall	_delay_ms
  1737                           	
  1738  0159                     l6553:	
  1739  0159  3064               	movlw	(064h)
  1740  015A  24F4               	fcall	_delay_ms
  1741                           	line	157
  1742                           	
  1743  015B                     l6555:	
  1744                           ;statemachine.c: 157: delay_ms(100);delay_ms(100);
  1745  015B  3064               	movlw	(064h)
  1746  015C  24F4               	fcall	_delay_ms
  1747                           	
  1748  015D                     l6557:	
  1749  015D  3064               	movlw	(064h)
  1750  015E  24F4               	fcall	_delay_ms
  1751                           	line	158
  1752                           	
  1753  015F                     l6559:	
  1754                           ;statemachine.c: 158: delay_ms(100);delay_ms(100);
  1755  015F  3064               	movlw	(064h)
  1756  0160  24F4               	fcall	_delay_ms
  1757                           	
  1758  0161                     l6561:	
  1759  0161  3064               	movlw	(064h)
  1760  0162  24F4               	fcall	_delay_ms
  1761                           	line	159
  1762                           	
  1763  0163                     l6563:	
  1764                           ;statemachine.c: 159: delay_ms(100);delay_ms(100);
  1765  0163  3064               	movlw	(064h)
  1766  0164  24F4               	fcall	_delay_ms
  1767                           	
  1768  0165                     l6565:	
  1769  0165  3064               	movlw	(064h)
  1770  0166  24F4               	fcall	_delay_ms
  1771                           	line	160
  1772                           	
  1773  0167                     l6567:	
  1774                           ;statemachine.c: 160: delay_ms(100);delay_ms(100);
  1775  0167  3064               	movlw	(064h)
  1776  0168  24F4               	fcall	_delay_ms
  1777                           	
  1778  0169                     l6569:	
  1779  0169  3064               	movlw	(064h)
  1780  016A  24F4               	fcall	_delay_ms
  1781                           	line	161
  1782                           	
  1783  016B                     l6571:	
  1784                           ;statemachine.c: 161: delay_ms(100);delay_ms(100);
  1785  016B  3064               	movlw	(064h)
  1786  016C  24F4               	fcall	_delay_ms
  1787                           	
  1788  016D                     l6573:	
  1789  016D  3064               	movlw	(064h)
  1790  016E  24F4               	fcall	_delay_ms
  1791                           	line	162
  1792                           	
  1793  016F                     l6575:	
  1794                           ;statemachine.c: 162: delay_ms(100);delay_ms(100);
  1795  016F  3064               	movlw	(064h)
  1796  0170  24F4               	fcall	_delay_ms
  1797                           	
  1798  0171                     l6577:	
  1799  0171  3064               	movlw	(064h)
  1800  0172  24F4               	fcall	_delay_ms
  1801                           	
  1802  0173                     l6579:	
  1803                           # 162 "C:\Projects\Nordic\dual wireless mic ref design\clean source code\TX\statemachine
                                 .c"
  1804  0173  0064                  CLRWDT ;#
  1805                           psect	text768
  1806                           	line	164
  1807                           	
  1808  0174                     l6581:	
  1809                           # 164 "C:\Projects\Nordic\dual wireless mic ref design\clean source code\TX\statemachine
                                 .c"
  1810                           # 163 ;#
  1811                           psect	text768
  1812  0174  2975               	goto	l6583
  1813                           	line	166
  1814                           	
  1815  0175                     l2883:	
  1816                           	line	132
  1817                           	
  1818  0175                     l6583:	
  1819  0175  25F8               	fcall	_Nordic_LinkPresent
  1820  0176  3800               	iorlw	0
  1821  0177  1D03               	skipz
  1822  0178  297A               	goto	u3581
  1823  0179  297B               	goto	u3580
  1824  017A                     u3581:
  1825  017A  2984               	goto	l6587
  1826  017B                     u3580:
  1827                           	
  1828  017B                     l6585:	
  1829  017B  3014               	movlw	(014h)
  1830  017C  1283               	bcf	status, 5	;RP0=0, select bank0
  1831  017D  0236               	subwf	(_timeout),w
  1832  017E  1C03               	skipc
  1833  017F  2981               	goto	u3591
  1834  0180  2982               	goto	u3590
  1835  0181                     u3591:
  1836  0181  2927               	goto	l6523
  1837  0182                     u3590:
  1838  0182  2984               	goto	l6587
  1839                           	
  1840  0183                     l2888:	
  1841  0183  2984               	goto	l6587
  1842                           	
  1843  0184                     l2889:	
  1844                           	line	169
  1845                           	
  1846  0184                     l6587:	
  1847                           ;statemachine.c: 166: }
  1848                           ;statemachine.c: 169: if (timeout<20)
  1849  0184  3014               	movlw	(014h)
  1850  0185  1283               	bcf	status, 5	;RP0=0, select bank0
  1851  0186  0236               	subwf	(_timeout),w
  1852  0187  1803               	skipnc
  1853  0188  298A               	goto	u3601
  1854  0189  298B               	goto	u3600
  1855  018A                     u3601:
  1856  018A  29CB               	goto	l2896
  1857  018B                     u3600:
  1858                           	line	171
  1859                           	
  1860  018B                     l6589:	
  1861                           ;statemachine.c: 170: {
  1862                           ;statemachine.c: 171: for (i=0;i<5;i++)
  1863  018B  01B4               	clrf	(_i)
  1864                           	
  1865  018C                     l6591:	
  1866  018C  3005               	movlw	(05h)
  1867  018D  0234               	subwf	(_i),w
  1868  018E  1C03               	skipc
  1869  018F  2991               	goto	u3611
  1870  0190  2992               	goto	u3610
  1871  0191                     u3611:
  1872  0191  2994               	goto	l6595
  1873  0192                     u3610:
  1874  0192  29AC               	goto	l6601
  1875                           	
  1876  0193                     l6593:	
  1877  0193  29AC               	goto	l6601
  1878                           	line	172
  1879                           	
  1880  0194                     l2891:	
  1881                           	
  1882  0194                     l6595:	
  1883                           ;statemachine.c: 172: SPI_Send( 0x39+i,NordicRegData[0x39+i],NORDIC_TARGET);
  1884  0194  0834               	movf	(_i),w
  1885  0195  3E39               	addlw	039h
  1886  0196  3E01               	addlw	low((_NordicRegData-__stringbase))
  1887  0197  0084               	movwf	fsr0
  1888  0198  2300               	fcall	stringdir
  1889  0199  00AA               	movwf	(??_ProcessPairing+0)+0
  1890  019A  082A               	movf	(??_ProcessPairing+0)+0,w
  1891  019B  00A3               	movwf	(?_SPI_Send)
  1892  019C  01A4               	clrf	0+(?_SPI_Send)+01h
  1893  019D  0834               	movf	(_i),w
  1894  019E  3E39               	addlw	039h
  1895  019F  2578               	fcall	_SPI_Send
  1896                           	line	171
  1897                           	
  1898  01A0                     l6597:	
  1899  01A0  3001               	movlw	(01h)
  1900  01A1  1283               	bcf	status, 5	;RP0=0, select bank0
  1901  01A2  00AA               	movwf	(??_ProcessPairing+0)+0
  1902  01A3  082A               	movf	(??_ProcessPairing+0)+0,w
  1903  01A4  07B4               	addwf	(_i),f
  1904                           	
  1905  01A5                     l6599:	
  1906  01A5  3005               	movlw	(05h)
  1907  01A6  0234               	subwf	(_i),w
  1908  01A7  1C03               	skipc
  1909  01A8  29AA               	goto	u3621
  1910  01A9  29AB               	goto	u3620
  1911  01AA                     u3621:
  1912  01AA  2994               	goto	l6595
  1913  01AB                     u3620:
  1914  01AB  29AC               	goto	l6601
  1915                           	
  1916  01AC                     l2892:	
  1917                           	line	174
  1918                           	
  1919  01AC                     l6601:	
  1920                           ;statemachine.c: 174: SPI_Send(0x3E, 0x01, NORDIC_TARGET);
  1921  01AC  01A3               	clrf	(?_SPI_Send)
  1922  01AD  1403               	bsf	status,0
  1923  01AE  0DA3               	rlf	(?_SPI_Send),f
  1924  01AF  01A4               	clrf	0+(?_SPI_Send)+01h
  1925  01B0  303E               	movlw	(03Eh)
  1926  01B1  2578               	fcall	_SPI_Send
  1927                           	line	176
  1928                           ;statemachine.c: 176: while (Nordic_Read(0x3E)==0x02)
  1929  01B2  29C2               	goto	l2893
  1930                           	
  1931  01B3                     l2894:	
  1932                           	line	178
  1933                           	
  1934  01B3                     l6603:	
  1935                           ;statemachine.c: 177: {
  1936                           ;statemachine.c: 178: SPI_Send(0x3E, 0x01, NORDIC_TARGET);
  1937  01B3  1283               	bcf	status, 5	;RP0=0, select bank0
  1938  01B4  01A3               	clrf	(?_SPI_Send)
  1939  01B5  1403               	bsf	status,0
  1940  01B6  0DA3               	rlf	(?_SPI_Send),f
  1941  01B7  01A4               	clrf	0+(?_SPI_Send)+01h
  1942  01B8  303E               	movlw	(03Eh)
  1943  01B9  2578               	fcall	_SPI_Send
  1944                           	line	179
  1945                           	
  1946  01BA                     l6605:	
  1947                           ;statemachine.c: 179: RA0=1;
  1948  01BA  1283               	bcf	status, 5	;RP0=0, select bank0
  1949  01BB  1405               	bsf	(40/8),(40)&7
  1950                           	line	180
  1951                           ;statemachine.c: 180: delay_ms(100);
  1952  01BC  3064               	movlw	(064h)
  1953  01BD  24F4               	fcall	_delay_ms
  1954                           	line	181
  1955                           	
  1956  01BE                     l6607:	
  1957                           ;statemachine.c: 181: RA0=0;
  1958  01BE  1283               	bcf	status, 5	;RP0=0, select bank0
  1959  01BF  1005               	bcf	(40/8),(40)&7
  1960                           	line	182
  1961                           ;statemachine.c: 182: delay_ms(100);
  1962  01C0  3064               	movlw	(064h)
  1963  01C1  24F4               	fcall	_delay_ms
  1964                           	line	183
  1965                           	
  1966  01C2                     l2893:	
  1967                           	line	176
  1968  01C2  303E               	movlw	(03Eh)
  1969  01C3  23F3               	fcall	_Nordic_Read
  1970  01C4  3A02               	xorlw	02h
  1971  01C5  1903               	skipnz
  1972  01C6  29C8               	goto	u3631
  1973  01C7  29C9               	goto	u3630
  1974  01C8                     u3631:
  1975  01C8  29B3               	goto	l6603
  1976  01C9                     u3630:
  1977  01C9  29CB               	goto	l2896
  1978                           	
  1979  01CA                     l2895:	
  1980  01CA  29CB               	goto	l2896
  1981                           	line	184
  1982                           	
  1983  01CB                     l2890:	
  1984                           	line	186
  1985                           	
  1986  01CB                     l2896:	
  1987  01CB  0008               	return
  1988                           	opt stack 0
  1989                           GLOBAL	__end_of_ProcessPairing
  1990  01CC                     	__end_of_ProcessPairing:
  1991 ;; =============== function _ProcessPairing ends ============
  1992                           
  1993                           	signat	_ProcessPairing,88
  1994                           	global	_ProcessEnterSleep
  1995                           psect	text769,local,class=CODE,delta=2
  1996                           global __ptext769
  1997  05BD                     __ptext769:
  1998                           
  1999 ;; *************** function _ProcessEnterSleep *****************
  2000 ;; Defined at:
  2001 ;;		line 44 in file "C:\Projects\Nordic\dual wireless mic ref design\clean source code\TX\statemachine.c"
  2002 ;; Parameters:    Size  Location     Type
  2003 ;;		None
  2004 ;; Auto vars:     Size  Location     Type
  2005 ;;		None
  2006 ;; Return value:  Size  Location     Type
  2007 ;;		None               void
  2008 ;; Registers used:
  2009 ;;		wreg, status,2, status,0, pclath, cstack
  2010 ;; Tracked objects:
  2011 ;;		On entry : 0/0
  2012 ;;		On exit  : 0/0
  2013 ;;		Unchanged: 0/0
  2014 ;; Data sizes:     COMMON   BANK0   BANK1
  2015 ;;      Params:         0       0       0
  2016 ;;      Locals:         0       0       0
  2017 ;;      Temps:          0       1       0
  2018 ;;      Totals:         0       1       0
  2019 ;;Total ram usage:        1 bytes
  2020 ;; Hardware stack levels used:    1
  2021 ;; Hardware stack levels required when called:    4
  2022 ;; This function calls:
  2023 ;;		_SPI_Send
  2024 ;;		_delay_ms
  2025 ;; This function is called by:
  2026 ;;		_ProcessStateMachine
  2027 ;; This function uses a non-reentrant model
  2028 ;;
  2029                           psect	text769
  2030                           	file	"C:\Projects\Nordic\dual wireless mic ref design\clean source code\TX\statemachine
                                 .c"
  2031                           	line	44
  2032                           	global	__size_of_ProcessEnterSleep
  2033  0018                     	__size_of_ProcessEnterSleep	equ	__end_of_ProcessEnterSleep-_ProcessEnterSleep
  2034                           	
  2035  05BD                     _ProcessEnterSleep:	
  2036                           	opt	stack 2
  2037                           ; Regs used in _ProcessEnterSleep: [wreg+status,2+status,0+pclath+cstack]
  2038                           	line	45
  2039                           	
  2040  05BD                     l6503:	
  2041                           ;statemachine.c: 45: RA0=0;
  2042  05BD  1283               	bcf	status, 5	;RP0=0, select bank0
  2043  05BE  1005               	bcf	(40/8),(40)&7
  2044                           	line	46
  2045                           ;statemachine.c: 46: SYSTEM_ON=0;
  2046  05BF  1079               	bcf	(_SYSTEM_ON/8),(_SYSTEM_ON)&7
  2047                           	line	47
  2048                           ;statemachine.c: 47: RA1=0;
  2049  05C0  1085               	bcf	(41/8),(41)&7
  2050                           	line	48
  2051                           ;statemachine.c: 48: link=0;
  2052  05C1  01F8               	clrf	(_link)
  2053                           	line	50
  2054                           	
  2055  05C2                     l6505:	
  2056                           ;statemachine.c: 50: SPI_Send( 0x5A,0x40,NORDIC_TARGET);
  2057  05C2  3040               	movlw	(040h)
  2058  05C3  00A6               	movwf	(??_ProcessEnterSleep+0)+0
  2059  05C4  0826               	movf	(??_ProcessEnterSleep+0)+0,w
  2060  05C5  00A3               	movwf	(?_SPI_Send)
  2061  05C6  01A4               	clrf	0+(?_SPI_Send)+01h
  2062  05C7  305A               	movlw	(05Ah)
  2063  05C8  2578               	fcall	_SPI_Send
  2064                           	line	51
  2065                           ;statemachine.c: 51: delay_ms(500);
  2066  05C9  30F4               	movlw	(0F4h)
  2067  05CA  24F4               	fcall	_delay_ms
  2068                           	line	52
  2069                           ;statemachine.c: 52: while (RA3)
  2070  05CB  2DCE               	goto	l2857
  2071                           	
  2072  05CC                     l2858:	
  2073                           	line	55
  2074                           # 55 "C:\Projects\Nordic\dual wireless mic ref design\clean source code\TX\statemachine.
                                 c"
  2075  05CC  0064                 CLRWDT ;#
  2076                           	line	56
  2077                           # 56 "C:\Projects\Nordic\dual wireless mic ref design\clean source code\TX\statemachine.
                                 c"
  2078  05CD  0063                SLEEP ;#
  2079                           	line	58
  2080                           # 58 "C:\Projects\Nordic\dual wireless mic ref design\clean source code\TX\statemachine.
                                 c"
  2081                           # 57 ;#
  2082                           psect	text769
  2083                           	line	60
  2084                           	
  2085  05CE                     l2857:	
  2086                           	line	52
  2087  05CE  1283               	bcf	status, 5	;RP0=0, select bank0
  2088  05CF  1985               	btfsc	(43/8),(43)&7
  2089  05D0  2DD2               	goto	u3531
  2090  05D1  2DD3               	goto	u3530
  2091  05D2                     u3531:
  2092  05D2  2DCC               	goto	l2858
  2093  05D3                     u3530:
  2094                           	
  2095  05D3                     l2859:	
  2096                           	line	61
  2097                           ;statemachine.c: 60: }
  2098                           ;statemachine.c: 61: CurrentState=LINK_CHECK;
  2099  05D3  01BB               	clrf	(_CurrentState)
  2100                           	line	62
  2101                           	
  2102  05D4                     l2860:	
  2103  05D4  0008               	return
  2104                           	opt stack 0
  2105                           GLOBAL	__end_of_ProcessEnterSleep
  2106  05D5                     	__end_of_ProcessEnterSleep:
  2107 ;; =============== function _ProcessEnterSleep ends ============
  2108                           
  2109                           	signat	_ProcessEnterSleep,88
  2110                           	global	_Nordic_Wakeup
  2111                           psect	text770,local,class=CODE,delta=2
  2112                           global __ptext770
  2113  038D                     __ptext770:
  2114                           
  2115 ;; *************** function _Nordic_Wakeup *****************
  2116 ;; Defined at:
  2117 ;;		line 29 in file "C:\Projects\Nordic\dual wireless mic ref design\clean source code\TX\nordicmanager.c"
  2118 ;; Parameters:    Size  Location     Type
  2119 ;;		None
  2120 ;; Auto vars:     Size  Location     Type
  2121 ;;  pointer         1   13[BANK0 ] unsigned char 
  2122 ;;  data8           1   12[BANK0 ] unsigned char 
  2123 ;;  address         1   11[BANK0 ] unsigned char 
  2124 ;;  raddress        1   10[BANK0 ] unsigned char 
  2125 ;;  dataR           1    9[BANK0 ] unsigned char 
  2126 ;;  t               1    0        unsigned char 
  2127 ;; Return value:  Size  Location     Type
  2128 ;;		None               void
  2129 ;; Registers used:
  2130 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2131 ;; Tracked objects:
  2132 ;;		On entry : 0/0
  2133 ;;		On exit  : 0/0
  2134 ;;		Unchanged: 0/0
  2135 ;; Data sizes:     COMMON   BANK0   BANK1
  2136 ;;      Params:         0       0       0
  2137 ;;      Locals:         0       5       0
  2138 ;;      Temps:          0       1       0
  2139 ;;      Totals:         0       6       0
  2140 ;;Total ram usage:        6 bytes
  2141 ;; Hardware stack levels used:    1
  2142 ;; Hardware stack levels required when called:    4
  2143 ;; This function calls:
  2144 ;;		_SPI_Send
  2145 ;;		_Nordic_Read
  2146 ;; This function is called by:
  2147 ;;		_ProcessNordicBoot
  2148 ;; This function uses a non-reentrant model
  2149 ;;
  2150                           psect	text770
  2151                           	file	"C:\Projects\Nordic\dual wireless mic ref design\clean source code\TX\nordicmanage
                                 r.c"
  2152                           	line	29
  2153                           	global	__size_of_Nordic_Wakeup
  2154  0066                     	__size_of_Nordic_Wakeup	equ	__end_of_Nordic_Wakeup-_Nordic_Wakeup
  2155                           	
  2156  038D                     _Nordic_Wakeup:	
  2157                           	opt	stack 1
  2158                           ; Regs used in _Nordic_Wakeup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2159                           	line	38
  2160                           	
  2161  038D                     l6477:	
  2162                           ;nordicmanager.c: 30: BYTE t;
  2163                           ;nordicmanager.c: 31: BYTE pointer;
  2164                           ;nordicmanager.c: 32: BYTE data8;
  2165                           ;nordicmanager.c: 33: BYTE address;
  2166                           ;nordicmanager.c: 34: BYTE dataR;
  2167                           ;nordicmanager.c: 35: BYTE raddress;
  2168                           ;nordicmanager.c: 38: (RC0=0);
  2169  038D  1283               	bcf	status, 5	;RP0=0, select bank0
  2170  038E  1007               	bcf	(56/8),(56)&7
  2171                           	line	39
  2172                           ;nordicmanager.c: 39: (RC1=0);
  2173  038F  1087               	bcf	(57/8),(57)&7
  2174                           	line	41
  2175                           # 41 "C:\Projects\Nordic\dual wireless mic ref design\clean source code\TX\nordicmanager
                                 .c"
  2176  0390  0000               nop ;#
  2177                           # 41 "C:\Projects\Nordic\dual wireless mic ref design\clean source code\TX\nordicmanager
                                 .c"
  2178  0391  0000               nop ;#
  2179                           # 41 "C:\Projects\Nordic\dual wireless mic ref design\clean source code\TX\nordicmanager
                                 .c"
  2180  0392  0000               nop ;#
  2181                           # 41 "C:\Projects\Nordic\dual wireless mic ref design\clean source code\TX\nordicmanager
                                 .c"
  2182  0393  0000               nop ;#
  2183                           # 41 "C:\Projects\Nordic\dual wireless mic ref design\clean source code\TX\nordicmanager
                                 .c"
  2184  0394  0000               nop ;#
  2185                           # 41 "C:\Projects\Nordic\dual wireless mic ref design\clean source code\TX\nordicmanager
                                 .c"
  2186  0395  0000               nop ;#
  2187                           psect	text770
  2188                           	line	42
  2189                           ;nordicmanager.c: 42: for(pointer =0; pointer<130; pointer++)
  2190  0396  1283               	bcf	status, 5	;RP0=0, select bank0
  2191  0397  01AD               	clrf	(Nordic_Wakeup@pointer)
  2192                           	
  2193  0398                     l6479:	
  2194  0398  3082               	movlw	(082h)
  2195  0399  022D               	subwf	(Nordic_Wakeup@pointer),w
  2196  039A  1C03               	skipc
  2197  039B  2B9D               	goto	u3471
  2198  039C  2B9E               	goto	u3470
  2199  039D                     u3471:
  2200  039D  2BA0               	goto	l1690
  2201  039E                     u3470:
  2202  039E  2BF2               	goto	l1696
  2203                           	
  2204  039F                     l6481:	
  2205  039F  2BF2               	goto	l1696
  2206                           	line	43
  2207                           	
  2208  03A0                     l1690:	
  2209                           	line	45
  2210                           # 45 "C:\Projects\Nordic\dual wireless mic ref design\clean source code\TX\nordicmanager
                                 .c"
  2211  03A0  0064                  CLRWDT ;#
  2212                           	line	47
  2213                           # 47 "C:\Projects\Nordic\dual wireless mic ref design\clean source code\TX\nordicmanager
                                 .c"
  2214                           # 46 ;#
  2215                           psect	text770
  2216                           	line	49
  2217                           	
  2218  03A1                     l6483:	
  2219                           ;nordicmanager.c: 49: address = pointer;
  2220  03A1  1283               	bcf	status, 5	;RP0=0, select bank0
  2221  03A2  082D               	movf	(Nordic_Wakeup@pointer),w
  2222  03A3  00A8               	movwf	(??_Nordic_Wakeup+0)+0
  2223  03A4  0828               	movf	(??_Nordic_Wakeup+0)+0,w
  2224  03A5  00AB               	movwf	(Nordic_Wakeup@address)
  2225                           	line	50
  2226                           ;nordicmanager.c: 50: if(pointer == 128)
  2227  03A6  082D               	movf	(Nordic_Wakeup@pointer),w
  2228  03A7  3A80               	xorlw	080h
  2229  03A8  1D03               	skipz
  2230  03A9  2BAB               	goto	u3481
  2231  03AA  2BAC               	goto	u3480
  2232  03AB                     u3481:
  2233  03AB  2BB0               	goto	l1692
  2234  03AC                     u3480:
  2235                           	line	51
  2236                           	
  2237  03AC                     l6485:	
  2238                           ;nordicmanager.c: 51: address = 0x4A;
  2239  03AC  304A               	movlw	(04Ah)
  2240  03AD  00A8               	movwf	(??_Nordic_Wakeup+0)+0
  2241  03AE  0828               	movf	(??_Nordic_Wakeup+0)+0,w
  2242  03AF  00AB               	movwf	(Nordic_Wakeup@address)
  2243                           	
  2244  03B0                     l1692:	
  2245                           	line	52
  2246                           ;nordicmanager.c: 52: if(pointer == 129)
  2247  03B0  082D               	movf	(Nordic_Wakeup@pointer),w
  2248  03B1  3A81               	xorlw	081h
  2249  03B2  1D03               	skipz
  2250  03B3  2BB5               	goto	u3491
  2251  03B4  2BB6               	goto	u3490
  2252  03B5                     u3491:
  2253  03B5  2BBA               	goto	l1693
  2254  03B6                     u3490:
  2255                           	line	53
  2256                           	
  2257  03B6                     l6487:	
  2258                           ;nordicmanager.c: 53: address = 0x5A;
  2259  03B6  305A               	movlw	(05Ah)
  2260  03B7  00A8               	movwf	(??_Nordic_Wakeup+0)+0
  2261  03B8  0828               	movf	(??_Nordic_Wakeup+0)+0,w
  2262  03B9  00AB               	movwf	(Nordic_Wakeup@address)
  2263                           	
  2264  03BA                     l1693:	
  2265                           	line	54
  2266                           ;nordicmanager.c: 54: raddress = address ;
  2267  03BA  082B               	movf	(Nordic_Wakeup@address),w
  2268  03BB  00A8               	movwf	(??_Nordic_Wakeup+0)+0
  2269  03BC  0828               	movf	(??_Nordic_Wakeup+0)+0,w
  2270  03BD  00AA               	movwf	(Nordic_Wakeup@raddress)
  2271                           	line	56
  2272                           	
  2273  03BE                     l6489:	
  2274                           ;nordicmanager.c: 56: data8 = NordicRegData[pointer] ;
  2275  03BE  082D               	movf	(Nordic_Wakeup@pointer),w
  2276  03BF  3E01               	addlw	low((_NordicRegData-__stringbase))
  2277  03C0  0084               	movwf	fsr0
  2278  03C1  2300               	fcall	stringdir
  2279  03C2  00A8               	movwf	(??_Nordic_Wakeup+0)+0
  2280  03C3  0828               	movf	(??_Nordic_Wakeup+0)+0,w
  2281  03C4  00AC               	movwf	(Nordic_Wakeup@data8)
  2282                           	line	57
  2283                           	
  2284  03C5                     l6491:	
  2285                           ;nordicmanager.c: 57: dataR=data8;
  2286  03C5  082C               	movf	(Nordic_Wakeup@data8),w
  2287  03C6  00A8               	movwf	(??_Nordic_Wakeup+0)+0
  2288  03C7  0828               	movf	(??_Nordic_Wakeup+0)+0,w
  2289  03C8  00A9               	movwf	(Nordic_Wakeup@dataR)
  2290                           	line	59
  2291                           	
  2292  03C9                     l6493:	
  2293                           ;nordicmanager.c: 59: if(data8 != 0x00 )
  2294  03C9  082C               	movf	(Nordic_Wakeup@data8),w
  2295  03CA  1D03               	skipz
  2296  03CB  2BCD               	goto	u3500
  2297  03CC  2BE7               	goto	l1694
  2298  03CD                     u3500:
  2299                           	line	61
  2300                           	
  2301  03CD                     l6495:	
  2302                           ;nordicmanager.c: 60: {
  2303                           ;nordicmanager.c: 61: SPI_Send( address,data8,NORDIC_TARGET);
  2304  03CD  082C               	movf	(Nordic_Wakeup@data8),w
  2305  03CE  00A8               	movwf	(??_Nordic_Wakeup+0)+0
  2306  03CF  0828               	movf	(??_Nordic_Wakeup+0)+0,w
  2307  03D0  00A3               	movwf	(?_SPI_Send)
  2308  03D1  01A4               	clrf	0+(?_SPI_Send)+01h
  2309  03D2  082B               	movf	(Nordic_Wakeup@address),w
  2310  03D3  2578               	fcall	_SPI_Send
  2311                           	line	62
  2312                           ;nordicmanager.c: 62: data8=Nordic_Read( raddress );
  2313  03D4  1283               	bcf	status, 5	;RP0=0, select bank0
  2314  03D5  082A               	movf	(Nordic_Wakeup@raddress),w
  2315  03D6  23F3               	fcall	_Nordic_Read
  2316  03D7  1283               	bcf	status, 5	;RP0=0, select bank0
  2317  03D8  00A8               	movwf	(??_Nordic_Wakeup+0)+0
  2318  03D9  0828               	movf	(??_Nordic_Wakeup+0)+0,w
  2319  03DA  00AC               	movwf	(Nordic_Wakeup@data8)
  2320                           	line	64
  2321                           	
  2322  03DB                     l6497:	
  2323                           ;nordicmanager.c: 64: if(data8 != dataR)
  2324  03DB  082C               	movf	(Nordic_Wakeup@data8),w
  2325  03DC  0629               	xorwf	(Nordic_Wakeup@dataR),w
  2326  03DD  1903               	skipnz
  2327  03DE  2BE0               	goto	u3511
  2328  03DF  2BE1               	goto	u3510
  2329  03E0                     u3511:
  2330  03E0  2BE7               	goto	l1694
  2331  03E1                     u3510:
  2332                           	line	66
  2333                           	
  2334  03E1                     l6499:	
  2335                           ;nordicmanager.c: 65: {
  2336                           ;nordicmanager.c: 66: pointer = pointer -1;
  2337  03E1  082D               	movf	(Nordic_Wakeup@pointer),w
  2338  03E2  3EFF               	addlw	0FFh
  2339  03E3  00A8               	movwf	(??_Nordic_Wakeup+0)+0
  2340  03E4  0828               	movf	(??_Nordic_Wakeup+0)+0,w
  2341  03E5  00AD               	movwf	(Nordic_Wakeup@pointer)
  2342  03E6  2BE7               	goto	l1694
  2343                           	line	67
  2344                           	
  2345  03E7                     l1695:	
  2346                           	line	69
  2347                           	
  2348  03E7                     l1694:	
  2349                           	line	42
  2350  03E7  3001               	movlw	(01h)
  2351  03E8  00A8               	movwf	(??_Nordic_Wakeup+0)+0
  2352  03E9  0828               	movf	(??_Nordic_Wakeup+0)+0,w
  2353  03EA  07AD               	addwf	(Nordic_Wakeup@pointer),f
  2354                           	
  2355  03EB                     l6501:	
  2356  03EB  3082               	movlw	(082h)
  2357  03EC  022D               	subwf	(Nordic_Wakeup@pointer),w
  2358  03ED  1C03               	skipc
  2359  03EE  2BF0               	goto	u3521
  2360  03EF  2BF1               	goto	u3520
  2361  03F0                     u3521:
  2362  03F0  2BA0               	goto	l1690
  2363  03F1                     u3520:
  2364  03F1  2BF2               	goto	l1696
  2365                           	
  2366  03F2                     l1691:	
  2367                           	line	71
  2368                           	
  2369  03F2                     l1696:	
  2370  03F2  0008               	return
  2371                           	opt stack 0
  2372                           GLOBAL	__end_of_Nordic_Wakeup
  2373  03F3                     	__end_of_Nordic_Wakeup:
  2374 ;; =============== function _Nordic_Wakeup ends ============
  2375                           
  2376                           	signat	_Nordic_Wakeup,88
  2377                           	global	_Nordic_LinkPresent
  2378                           psect	text771,local,class=CODE,delta=2
  2379                           global __ptext771
  2380  05F8                     __ptext771:
  2381                           
  2382 ;; *************** function _Nordic_LinkPresent *****************
  2383 ;; Defined at:
  2384 ;;		line 19 in file "C:\Projects\Nordic\dual wireless mic ref design\clean source code\TX\nordicmanager.c"
  2385 ;; Parameters:    Size  Location     Type
  2386 ;;		None
  2387 ;; Auto vars:     Size  Location     Type
  2388 ;;  temp            1    9[BANK0 ] unsigned char 
  2389 ;; Return value:  Size  Location     Type
  2390 ;;                  1    wreg      unsigned char 
  2391 ;; Registers used:
  2392 ;;		wreg, status,2, status,0, pclath, cstack
  2393 ;; Tracked objects:
  2394 ;;		On entry : 0/0
  2395 ;;		On exit  : 0/0
  2396 ;;		Unchanged: 0/0
  2397 ;; Data sizes:     COMMON   BANK0   BANK1
  2398 ;;      Params:         0       0       0
  2399 ;;      Locals:         0       1       0
  2400 ;;      Temps:          0       1       0
  2401 ;;      Totals:         0       2       0
  2402 ;;Total ram usage:        2 bytes
  2403 ;; Hardware stack levels used:    1
  2404 ;; Hardware stack levels required when called:    4
  2405 ;; This function calls:
  2406 ;;		_Nordic_Read
  2407 ;; This function is called by:
  2408 ;;		_ProcessPairing
  2409 ;;		_ProcessLink
  2410 ;; This function uses a non-reentrant model
  2411 ;;
  2412                           psect	text771
  2413                           	file	"C:\Projects\Nordic\dual wireless mic ref design\clean source code\TX\nordicmanage
                                 r.c"
  2414                           	line	19
  2415                           	global	__size_of_Nordic_LinkPresent
  2416  000E                     	__size_of_Nordic_LinkPresent	equ	__end_of_Nordic_LinkPresent-_Nordic_LinkPresent
  2417                           	
  2418  05F8                     _Nordic_LinkPresent:	
  2419                           	opt	stack 1
  2420                           ; Regs used in _Nordic_LinkPresent: [wreg+status,2+status,0+pclath+cstack]
  2421                           	line	21
  2422                           	
  2423  05F8                     l6469:	
  2424                           ;nordicmanager.c: 20: BYTE temp;
  2425                           ;nordicmanager.c: 21: temp=Nordic_Read(0x83);
  2426  05F8  3083               	movlw	(083h)
  2427  05F9  23F3               	fcall	_Nordic_Read
  2428  05FA  1283               	bcf	status, 5	;RP0=0, select bank0
  2429  05FB  00A8               	movwf	(??_Nordic_LinkPresent+0)+0
  2430  05FC  0828               	movf	(??_Nordic_LinkPresent+0)+0,w
  2431  05FD  00A9               	movwf	(Nordic_LinkPresent@temp)
  2432                           	line	22
  2433                           	
  2434  05FE                     l6471:	
  2435                           ;nordicmanager.c: 22: temp=temp&0x01;
  2436  05FE  0829               	movf	(Nordic_LinkPresent@temp),w
  2437  05FF  3901               	andlw	01h
  2438  0600  00A8               	movwf	(??_Nordic_LinkPresent+0)+0
  2439  0601  0828               	movf	(??_Nordic_LinkPresent+0)+0,w
  2440  0602  00A9               	movwf	(Nordic_LinkPresent@temp)
  2441                           	line	24
  2442                           	
  2443  0603                     l6473:	
  2444                           ;nordicmanager.c: 24: return temp;
  2445  0603  0829               	movf	(Nordic_LinkPresent@temp),w
  2446  0604  2E05               	goto	l1687
  2447                           	
  2448  0605                     l6475:	
  2449                           	line	25
  2450                           	
  2451  0605                     l1687:	
  2452  0605  0008               	return
  2453                           	opt stack 0
  2454                           GLOBAL	__end_of_Nordic_LinkPresent
  2455  0606                     	__end_of_Nordic_LinkPresent:
  2456 ;; =============== function _Nordic_LinkPresent ends ============
  2457                           
  2458                           	signat	_Nordic_LinkPresent,89
  2459                           	global	_AKM_Constructor
  2460                           psect	text772,local,class=CODE,delta=2
  2461                           global __ptext772
  2462  01CC                     __ptext772:
  2463                           
  2464 ;; *************** function _AKM_Constructor *****************
  2465 ;; Defined at:
  2466 ;;		line 20 in file "C:\Projects\Nordic\dual wireless mic ref design\clean source code\TX\AKMmanager.c"
  2467 ;; Parameters:    Size  Location     Type
  2468 ;;		None
  2469 ;; Auto vars:     Size  Location     Type
  2470 ;;  address         1    8[BANK0 ] unsigned char 
  2471 ;; Return value:  Size  Location     Type
  2472 ;;		None               void
  2473 ;; Registers used:
  2474 ;;		wreg, status,2, status,0, pclath, cstack
  2475 ;; Tracked objects:
  2476 ;;		On entry : 0/0
  2477 ;;		On exit  : 0/0
  2478 ;;		Unchanged: 0/0
  2479 ;; Data sizes:     COMMON   BANK0   BANK1
  2480 ;;      Params:         0       0       0
  2481 ;;      Locals:         0       1       0
  2482 ;;      Temps:          0       2       0
  2483 ;;      Totals:         0       3       0
  2484 ;;Total ram usage:        3 bytes
  2485 ;; Hardware stack levels used:    1
  2486 ;; Hardware stack levels required when called:    4
  2487 ;; This function calls:
  2488 ;;		_SPI_Send
  2489 ;; This function is called by:
  2490 ;;		_ProcessAKMBoot
  2491 ;; This function uses a non-reentrant model
  2492 ;;
  2493                           psect	text772
  2494                           	file	"C:\Projects\Nordic\dual wireless mic ref design\clean source code\TX\AKMmanager.c
                                 "
  2495                           	line	20
  2496                           	global	__size_of_AKM_Constructor
  2497  00C4                     	__size_of_AKM_Constructor	equ	__end_of_AKM_Constructor-_AKM_Constructor
  2498                           	
  2499  01CC                     _AKM_Constructor:	
  2500                           	opt	stack 1
  2501                           ; Regs used in _AKM_Constructor: [wreg+status,2+status,0+pclath+cstack]
  2502                           	line	22
  2503                           	
  2504  01CC                     l6435:	
  2505                           ;AKMmanager.c: 21: BYTE address;
  2506                           ;AKMmanager.c: 22: RA1=1;
  2507  01CC  1283               	bcf	status, 5	;RP0=0, select bank0
  2508  01CD  1485               	bsf	(41/8),(41)&7
  2509                           	line	23
  2510                           	
  2511  01CE                     l6437:	
  2512                           ;AKMmanager.c: 23: address=(0x10+0xA0);
  2513  01CE  30B0               	movlw	(0B0h)
  2514  01CF  00A6               	movwf	(??_AKM_Constructor+0)+0
  2515  01D0  0826               	movf	(??_AKM_Constructor+0)+0,w
  2516  01D1  00A8               	movwf	(AKM_Constructor@address)
  2517                           	line	24
  2518                           	
  2519  01D2                     l6439:	
  2520                           ;AKMmanager.c: 24: SPI_Send(address,0x07,AKM_TARGET);
  2521  01D2  3007               	movlw	(07h)
  2522  01D3  00A6               	movwf	(??_AKM_Constructor+0)+0
  2523  01D4  0826               	movf	(??_AKM_Constructor+0)+0,w
  2524  01D5  00A3               	movwf	(?_SPI_Send)
  2525  01D6  01A4               	clrf	0+(?_SPI_Send)+01h
  2526  01D7  1403               	bsf	status,0
  2527  01D8  0DA4               	rlf	0+(?_SPI_Send)+01h,f
  2528  01D9  0828               	movf	(AKM_Constructor@address),w
  2529  01DA  2578               	fcall	_SPI_Send
  2530                           	line	25
  2531                           	
  2532  01DB                     l6441:	
  2533                           ;AKMmanager.c: 25: SPI_Send(++address,0x26,AKM_TARGET);
  2534  01DB  3026               	movlw	(026h)
  2535  01DC  1283               	bcf	status, 5	;RP0=0, select bank0
  2536  01DD  00A6               	movwf	(??_AKM_Constructor+0)+0
  2537  01DE  0826               	movf	(??_AKM_Constructor+0)+0,w
  2538  01DF  00A3               	movwf	(?_SPI_Send)
  2539  01E0  01A4               	clrf	0+(?_SPI_Send)+01h
  2540  01E1  1403               	bsf	status,0
  2541  01E2  0DA4               	rlf	0+(?_SPI_Send)+01h,f
  2542  01E3  3001               	movlw	(01h)
  2543  01E4  00A7               	movwf	(??_AKM_Constructor+1)+0
  2544  01E5  0827               	movf	(??_AKM_Constructor+1)+0,w
  2545  01E6  07A8               	addwf	(AKM_Constructor@address),f
  2546  01E7  0828               	movf	((AKM_Constructor@address)),w
  2547  01E8  2578               	fcall	_SPI_Send
  2548                           	line	26
  2549                           	
  2550  01E9                     l6443:	
  2551                           ;AKMmanager.c: 26: SPI_Send(++address,0x14,AKM_TARGET);
  2552  01E9  3014               	movlw	(014h)
  2553  01EA  1283               	bcf	status, 5	;RP0=0, select bank0
  2554  01EB  00A6               	movwf	(??_AKM_Constructor+0)+0
  2555  01EC  0826               	movf	(??_AKM_Constructor+0)+0,w
  2556  01ED  00A3               	movwf	(?_SPI_Send)
  2557  01EE  01A4               	clrf	0+(?_SPI_Send)+01h
  2558  01EF  1403               	bsf	status,0
  2559  01F0  0DA4               	rlf	0+(?_SPI_Send)+01h,f
  2560  01F1  3001               	movlw	(01h)
  2561  01F2  00A7               	movwf	(??_AKM_Constructor+1)+0
  2562  01F3  0827               	movf	(??_AKM_Constructor+1)+0,w
  2563  01F4  07A8               	addwf	(AKM_Constructor@address),f
  2564  01F5  0828               	movf	((AKM_Constructor@address)),w
  2565  01F6  2578               	fcall	_SPI_Send
  2566                           	line	27
  2567                           	
  2568  01F7                     l6445:	
  2569                           ;AKMmanager.c: 27: SPI_Send(++address,0x01,AKM_TARGET);
  2570  01F7  1283               	bcf	status, 5	;RP0=0, select bank0
  2571  01F8  01A3               	clrf	(?_SPI_Send)
  2572  01F9  1403               	bsf	status,0
  2573  01FA  0DA3               	rlf	(?_SPI_Send),f
  2574  01FB  01A4               	clrf	0+(?_SPI_Send)+01h
  2575  01FC  1403               	bsf	status,0
  2576  01FD  0DA4               	rlf	0+(?_SPI_Send)+01h,f
  2577  01FE  3001               	movlw	(01h)
  2578  01FF  00A6               	movwf	(??_AKM_Constructor+0)+0
  2579  0200  0826               	movf	(??_AKM_Constructor+0)+0,w
  2580  0201  07A8               	addwf	(AKM_Constructor@address),f
  2581  0202  0828               	movf	((AKM_Constructor@address)),w
  2582  0203  2578               	fcall	_SPI_Send
  2583                           	line	28
  2584                           	
  2585  0204                     l6447:	
  2586                           ;AKMmanager.c: 28: SPI_Send(++address,0x23,AKM_TARGET);
  2587  0204  3023               	movlw	(023h)
  2588  0205  1283               	bcf	status, 5	;RP0=0, select bank0
  2589  0206  00A6               	movwf	(??_AKM_Constructor+0)+0
  2590  0207  0826               	movf	(??_AKM_Constructor+0)+0,w
  2591  0208  00A3               	movwf	(?_SPI_Send)
  2592  0209  01A4               	clrf	0+(?_SPI_Send)+01h
  2593  020A  1403               	bsf	status,0
  2594  020B  0DA4               	rlf	0+(?_SPI_Send)+01h,f
  2595  020C  3001               	movlw	(01h)
  2596  020D  00A7               	movwf	(??_AKM_Constructor+1)+0
  2597  020E  0827               	movf	(??_AKM_Constructor+1)+0,w
  2598  020F  07A8               	addwf	(AKM_Constructor@address),f
  2599  0210  0828               	movf	((AKM_Constructor@address)),w
  2600  0211  2578               	fcall	_SPI_Send
  2601                           	line	29
  2602                           	
  2603  0212                     l6449:	
  2604                           ;AKMmanager.c: 29: SPI_Send(++address,0x90,AKM_TARGET);
  2605  0212  3090               	movlw	(090h)
  2606  0213  1283               	bcf	status, 5	;RP0=0, select bank0
  2607  0214  00A6               	movwf	(??_AKM_Constructor+0)+0
  2608  0215  0826               	movf	(??_AKM_Constructor+0)+0,w
  2609  0216  00A3               	movwf	(?_SPI_Send)
  2610  0217  01A4               	clrf	0+(?_SPI_Send)+01h
  2611  0218  1403               	bsf	status,0
  2612  0219  0DA4               	rlf	0+(?_SPI_Send)+01h,f
  2613  021A  3001               	movlw	(01h)
  2614  021B  00A7               	movwf	(??_AKM_Constructor+1)+0
  2615  021C  0827               	movf	(??_AKM_Constructor+1)+0,w
  2616  021D  07A8               	addwf	(AKM_Constructor@address),f
  2617  021E  0828               	movf	((AKM_Constructor@address)),w
  2618  021F  2578               	fcall	_SPI_Send
  2619                           	line	30
  2620                           	
  2621  0220                     l6451:	
  2622                           ;AKMmanager.c: 30: SPI_Send(++address,0x00,AKM_TARGET);
  2623  0220  1283               	bcf	status, 5	;RP0=0, select bank0
  2624  0221  01A3               	clrf	(?_SPI_Send)
  2625  0222  01A4               	clrf	0+(?_SPI_Send)+01h
  2626  0223  1403               	bsf	status,0
  2627  0224  0DA4               	rlf	0+(?_SPI_Send)+01h,f
  2628  0225  3001               	movlw	(01h)
  2629  0226  00A6               	movwf	(??_AKM_Constructor+0)+0
  2630  0227  0826               	movf	(??_AKM_Constructor+0)+0,w
  2631  0228  07A8               	addwf	(AKM_Constructor@address),f
  2632  0229  0828               	movf	((AKM_Constructor@address)),w
  2633  022A  2578               	fcall	_SPI_Send
  2634                           	line	31
  2635                           	
  2636  022B                     l6453:	
  2637                           ;AKMmanager.c: 31: SPI_Send(++address,0x00,AKM_TARGET);
  2638  022B  1283               	bcf	status, 5	;RP0=0, select bank0
  2639  022C  01A3               	clrf	(?_SPI_Send)
  2640  022D  01A4               	clrf	0+(?_SPI_Send)+01h
  2641  022E  1403               	bsf	status,0
  2642  022F  0DA4               	rlf	0+(?_SPI_Send)+01h,f
  2643  0230  3001               	movlw	(01h)
  2644  0231  00A6               	movwf	(??_AKM_Constructor+0)+0
  2645  0232  0826               	movf	(??_AKM_Constructor+0)+0,w
  2646  0233  07A8               	addwf	(AKM_Constructor@address),f
  2647  0234  0828               	movf	((AKM_Constructor@address)),w
  2648  0235  2578               	fcall	_SPI_Send
  2649                           	line	32
  2650                           	
  2651  0236                     l6455:	
  2652                           ;AKMmanager.c: 32: SPI_Send(++address,0x91,AKM_TARGET);
  2653  0236  3091               	movlw	(091h)
  2654  0237  1283               	bcf	status, 5	;RP0=0, select bank0
  2655  0238  00A6               	movwf	(??_AKM_Constructor+0)+0
  2656  0239  0826               	movf	(??_AKM_Constructor+0)+0,w
  2657  023A  00A3               	movwf	(?_SPI_Send)
  2658  023B  01A4               	clrf	0+(?_SPI_Send)+01h
  2659  023C  1403               	bsf	status,0
  2660  023D  0DA4               	rlf	0+(?_SPI_Send)+01h,f
  2661  023E  3001               	movlw	(01h)
  2662  023F  00A7               	movwf	(??_AKM_Constructor+1)+0
  2663  0240  0827               	movf	(??_AKM_Constructor+1)+0,w
  2664  0241  07A8               	addwf	(AKM_Constructor@address),f
  2665  0242  0828               	movf	((AKM_Constructor@address)),w
  2666  0243  2578               	fcall	_SPI_Send
  2667                           	line	33
  2668                           	
  2669  0244                     l6457:	
  2670                           ;AKMmanager.c: 33: SPI_Send(++address,0x00,AKM_TARGET);
  2671  0244  1283               	bcf	status, 5	;RP0=0, select bank0
  2672  0245  01A3               	clrf	(?_SPI_Send)
  2673  0246  01A4               	clrf	0+(?_SPI_Send)+01h
  2674  0247  1403               	bsf	status,0
  2675  0248  0DA4               	rlf	0+(?_SPI_Send)+01h,f
  2676  0249  3001               	movlw	(01h)
  2677  024A  00A6               	movwf	(??_AKM_Constructor+0)+0
  2678  024B  0826               	movf	(??_AKM_Constructor+0)+0,w
  2679  024C  07A8               	addwf	(AKM_Constructor@address),f
  2680  024D  0828               	movf	((AKM_Constructor@address)),w
  2681  024E  2578               	fcall	_SPI_Send
  2682                           	line	34
  2683                           	
  2684  024F                     l6459:	
  2685                           ;AKMmanager.c: 34: SPI_Send(++address,0x00,AKM_TARGET);
  2686  024F  1283               	bcf	status, 5	;RP0=0, select bank0
  2687  0250  01A3               	clrf	(?_SPI_Send)
  2688  0251  01A4               	clrf	0+(?_SPI_Send)+01h
  2689  0252  1403               	bsf	status,0
  2690  0253  0DA4               	rlf	0+(?_SPI_Send)+01h,f
  2691  0254  3001               	movlw	(01h)
  2692  0255  00A6               	movwf	(??_AKM_Constructor+0)+0
  2693  0256  0826               	movf	(??_AKM_Constructor+0)+0,w
  2694  0257  07A8               	addwf	(AKM_Constructor@address),f
  2695  0258  0828               	movf	((AKM_Constructor@address)),w
  2696  0259  2578               	fcall	_SPI_Send
  2697                           	line	35
  2698                           	
  2699  025A                     l6461:	
  2700                           ;AKMmanager.c: 35: SPI_Send(++address,0xE1,AKM_TARGET);
  2701  025A  30E1               	movlw	(0E1h)
  2702  025B  1283               	bcf	status, 5	;RP0=0, select bank0
  2703  025C  00A6               	movwf	(??_AKM_Constructor+0)+0
  2704  025D  0826               	movf	(??_AKM_Constructor+0)+0,w
  2705  025E  00A3               	movwf	(?_SPI_Send)
  2706  025F  01A4               	clrf	0+(?_SPI_Send)+01h
  2707  0260  1403               	bsf	status,0
  2708  0261  0DA4               	rlf	0+(?_SPI_Send)+01h,f
  2709  0262  3001               	movlw	(01h)
  2710  0263  00A7               	movwf	(??_AKM_Constructor+1)+0
  2711  0264  0827               	movf	(??_AKM_Constructor+1)+0,w
  2712  0265  07A8               	addwf	(AKM_Constructor@address),f
  2713  0266  0828               	movf	((AKM_Constructor@address)),w
  2714  0267  2578               	fcall	_SPI_Send
  2715                           	line	36
  2716                           	
  2717  0268                     l6463:	
  2718                           ;AKMmanager.c: 36: SPI_Send(++address,0x00,AKM_TARGET);
  2719  0268  1283               	bcf	status, 5	;RP0=0, select bank0
  2720  0269  01A3               	clrf	(?_SPI_Send)
  2721  026A  01A4               	clrf	0+(?_SPI_Send)+01h
  2722  026B  1403               	bsf	status,0
  2723  026C  0DA4               	rlf	0+(?_SPI_Send)+01h,f
  2724  026D  3001               	movlw	(01h)
  2725  026E  00A6               	movwf	(??_AKM_Constructor+0)+0
  2726  026F  0826               	movf	(??_AKM_Constructor+0)+0,w
  2727  0270  07A8               	addwf	(AKM_Constructor@address),f
  2728  0271  0828               	movf	((AKM_Constructor@address)),w
  2729  0272  2578               	fcall	_SPI_Send
  2730                           	line	37
  2731                           	
  2732  0273                     l6465:	
  2733                           ;AKMmanager.c: 37: SPI_Send(++address,0x50,AKM_TARGET);
  2734  0273  3050               	movlw	(050h)
  2735  0274  1283               	bcf	status, 5	;RP0=0, select bank0
  2736  0275  00A6               	movwf	(??_AKM_Constructor+0)+0
  2737  0276  0826               	movf	(??_AKM_Constructor+0)+0,w
  2738  0277  00A3               	movwf	(?_SPI_Send)
  2739  0278  01A4               	clrf	0+(?_SPI_Send)+01h
  2740  0279  1403               	bsf	status,0
  2741  027A  0DA4               	rlf	0+(?_SPI_Send)+01h,f
  2742  027B  3001               	movlw	(01h)
  2743  027C  00A7               	movwf	(??_AKM_Constructor+1)+0
  2744  027D  0827               	movf	(??_AKM_Constructor+1)+0,w
  2745  027E  07A8               	addwf	(AKM_Constructor@address),f
  2746  027F  0828               	movf	((AKM_Constructor@address)),w
  2747  0280  2578               	fcall	_SPI_Send
  2748                           	line	38
  2749                           	
  2750  0281                     l6467:	
  2751                           ;AKMmanager.c: 38: SPI_Send(++address,0x02,AKM_TARGET);
  2752  0281  3002               	movlw	(02h)
  2753  0282  1283               	bcf	status, 5	;RP0=0, select bank0
  2754  0283  00A6               	movwf	(??_AKM_Constructor+0)+0
  2755  0284  0826               	movf	(??_AKM_Constructor+0)+0,w
  2756  0285  00A3               	movwf	(?_SPI_Send)
  2757  0286  01A4               	clrf	0+(?_SPI_Send)+01h
  2758  0287  1403               	bsf	status,0
  2759  0288  0DA4               	rlf	0+(?_SPI_Send)+01h,f
  2760  0289  3001               	movlw	(01h)
  2761  028A  00A7               	movwf	(??_AKM_Constructor+1)+0
  2762  028B  0827               	movf	(??_AKM_Constructor+1)+0,w
  2763  028C  07A8               	addwf	(AKM_Constructor@address),f
  2764  028D  0828               	movf	((AKM_Constructor@address)),w
  2765  028E  2578               	fcall	_SPI_Send
  2766                           	line	39
  2767                           	
  2768  028F                     l551:	
  2769  028F  0008               	return
  2770                           	opt stack 0
  2771                           GLOBAL	__end_of_AKM_Constructor
  2772  0290                     	__end_of_AKM_Constructor:
  2773 ;; =============== function _AKM_Constructor ends ============
  2774                           
  2775                           	signat	_AKM_Constructor,88
  2776                           	global	_ProcessButton
  2777                           psect	text773,local,class=CODE,delta=2
  2778                           global __ptext773
  2779  0010                     __ptext773:
  2780                           
  2781 ;; *************** function _ProcessButton *****************
  2782 ;; Defined at:
  2783 ;;		line 65 in file "C:\Projects\Nordic\dual wireless mic ref design\clean source code\TX\statemachine.c"
  2784 ;; Parameters:    Size  Location     Type
  2785 ;;		None
  2786 ;; Auto vars:     Size  Location     Type
  2787 ;;		None
  2788 ;; Return value:  Size  Location     Type
  2789 ;;		None               void
  2790 ;; Registers used:
  2791 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2792 ;; Tracked objects:
  2793 ;;		On entry : 0/0
  2794 ;;		On exit  : 0/0
  2795 ;;		Unchanged: 0/0
  2796 ;; Data sizes:     COMMON   BANK0   BANK1
  2797 ;;      Params:         0       0       0
  2798 ;;      Locals:         0       0       0
  2799 ;;      Temps:          1       0       0
  2800 ;;      Totals:         1       0       0
  2801 ;;Total ram usage:        1 bytes
  2802 ;; Hardware stack levels used:    1
  2803 ;; Hardware stack levels required when called:    3
  2804 ;; This function calls:
  2805 ;;		_delay_ms
  2806 ;; This function is called by:
  2807 ;;		_ProcessStateMachine
  2808 ;; This function uses a non-reentrant model
  2809 ;;
  2810                           psect	text773
  2811                           	file	"C:\Projects\Nordic\dual wireless mic ref design\clean source code\TX\statemachine
                                 .c"
  2812                           	line	65
  2813                           	global	__size_of_ProcessButton
  2814  00EB                     	__size_of_ProcessButton	equ	__end_of_ProcessButton-_ProcessButton
  2815                           	
  2816  0010                     _ProcessButton:	
  2817                           	opt	stack 3
  2818                           ; Regs used in _ProcessButton: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2819                           	line	66
  2820                           	
  2821  0010                     l6385:	
  2822                           ;statemachine.c: 66: if (SYSTEM_ON==1)CurrentState=LINK_CHECK;
  2823  0010  1C79               	btfss	(_SYSTEM_ON/8),(_SYSTEM_ON)&7
  2824  0011  2813               	goto	u3341
  2825  0012  2814               	goto	u3340
  2826  0013                     u3341:
  2827  0013  2816               	goto	l2863
  2828  0014                     u3340:
  2829                           	
  2830  0014                     l6387:	
  2831  0014  1283               	bcf	status, 5	;RP0=0, select bank0
  2832  0015  01BB               	clrf	(_CurrentState)
  2833                           	
  2834  0016                     l2863:	
  2835                           	line	68
  2836                           ;statemachine.c: 68: if(RA3 == 0)
  2837  0016  1283               	bcf	status, 5	;RP0=0, select bank0
  2838  0017  1985               	btfsc	(43/8),(43)&7
  2839  0018  281A               	goto	u3351
  2840  0019  281B               	goto	u3350
  2841  001A                     u3351:
  2842  001A  28B0               	goto	l6423
  2843  001B                     u3350:
  2844                           	line	70
  2845                           	
  2846  001B                     l6389:	
  2847                           ;statemachine.c: 69: {
  2848                           ;statemachine.c: 70: PSwitchCount++;
  2849  001B  3001               	movlw	01h
  2850  001C  07AE               	addwf	(_PSwitchCount),f
  2851  001D  3000               	movlw	0
  2852  001E  1803               	skipnc
  2853  001F  3001               movlw 1
  2854  0020  07AF               	addwf	(_PSwitchCount+1),f
  2855  0021  3000               	movlw	0
  2856  0022  1803               	skipnc
  2857  0023  3001               movlw 1
  2858  0024  07B0               	addwf	(_PSwitchCount+2),f
  2859  0025  3000               	movlw	0
  2860  0026  1803               	skipnc
  2861  0027  3001               movlw 1
  2862  0028  07B1               	addwf	(_PSwitchCount+3),f
  2863                           	line	71
  2864                           	
  2865  0029                     l6391:	
  2866                           ;statemachine.c: 71: if (PSwitchCount>600)PSwitchCount=300;
  2867  0029  0831               	movf	(_PSwitchCount+3),w
  2868  002A  3A80               	xorlw	80h
  2869  002B  00FF               	movwf	btemp+1
  2870  002C  3000               	movlw	0
  2871  002D  3A80               	xorlw	80h
  2872  002E  027F               	subwf	btemp+1,w
  2873                           	
  2874  002F  1D03               	skipz
  2875  0030  283B               	goto	u3363
  2876  0031  3000               	movlw	0
  2877  0032  0230               	subwf	(_PSwitchCount+2),w
  2878  0033  1D03               	skipz
  2879  0034  283B               	goto	u3363
  2880  0035  3002               	movlw	02h
  2881  0036  022F               	subwf	(_PSwitchCount+1),w
  2882  0037  1D03               	skipz
  2883  0038  283B               	goto	u3363
  2884  0039  3059               	movlw	059h
  2885  003A  022E               	subwf	(_PSwitchCount),w
  2886  003B                     u3363:
  2887  003B  1C03               	skipc
  2888  003C  283E               	goto	u3361
  2889  003D  283F               	goto	u3360
  2890  003E                     u3361:
  2891  003E  2848               	goto	l6395
  2892  003F                     u3360:
  2893                           	
  2894  003F                     l6393:	
  2895  003F  3000               	movlw	0
  2896  0040  00B1               	movwf	(_PSwitchCount+3)
  2897  0041  3000               	movlw	0
  2898  0042  00B0               	movwf	(_PSwitchCount+2)
  2899  0043  3001               	movlw	01h
  2900  0044  00AF               	movwf	(_PSwitchCount+1)
  2901  0045  302C               	movlw	02Ch
  2902  0046  00AE               	movwf	(_PSwitchCount)
  2903                           
  2904  0047  2848               	goto	l6395
  2905                           	
  2906  0048                     l2865:	
  2907                           	line	72
  2908                           	
  2909  0048                     l6395:	
  2910                           ;statemachine.c: 72: if (PSwitchCount>55)
  2911  0048  0831               	movf	(_PSwitchCount+3),w
  2912  0049  3A80               	xorlw	80h
  2913  004A  00FF               	movwf	btemp+1
  2914  004B  3000               	movlw	0
  2915  004C  3A80               	xorlw	80h
  2916  004D  027F               	subwf	btemp+1,w
  2917                           	
  2918  004E  1D03               	skipz
  2919  004F  285A               	goto	u3373
  2920  0050  3000               	movlw	0
  2921  0051  0230               	subwf	(_PSwitchCount+2),w
  2922  0052  1D03               	skipz
  2923  0053  285A               	goto	u3373
  2924  0054  3000               	movlw	0
  2925  0055  022F               	subwf	(_PSwitchCount+1),w
  2926  0056  1D03               	skipz
  2927  0057  285A               	goto	u3373
  2928  0058  3038               	movlw	038h
  2929  0059  022E               	subwf	(_PSwitchCount),w
  2930  005A                     u3373:
  2931  005A  1C03               	skipc
  2932  005B  285D               	goto	u3371
  2933  005C  285E               	goto	u3370
  2934  005D                     u3371:
  2935  005D  2868               	goto	l6399
  2936  005E                     u3370:
  2937                           	line	73
  2938                           	
  2939  005E                     l6397:	
  2940                           ;statemachine.c: 73: RA0=!link;
  2941  005E  08F8               	movf	(_link)
  2942  005F  1903               	skipnz
  2943  0060  2862               	goto	u3381
  2944  0061  2865               	goto	u3380
  2945                           	
  2946  0062                     u3381:
  2947  0062  1283               	bcf	status, 5	;RP0=0, select bank0
  2948  0063  1405               	bsf	(40/8),(40)&7
  2949  0064  2867               	goto	u3394
  2950  0065                     u3380:
  2951  0065  1283               	bcf	status, 5	;RP0=0, select bank0
  2952  0066  1005               	bcf	(40/8),(40)&7
  2953  0067                     u3394:
  2954  0067  2868               	goto	l6399
  2955                           	
  2956  0068                     l2866:	
  2957                           	line	75
  2958                           	
  2959  0068                     l6399:	
  2960                           ;statemachine.c: 75: if (PSwitchCount > 250)
  2961  0068  0831               	movf	(_PSwitchCount+3),w
  2962  0069  3A80               	xorlw	80h
  2963  006A  00FF               	movwf	btemp+1
  2964  006B  3000               	movlw	0
  2965  006C  3A80               	xorlw	80h
  2966  006D  027F               	subwf	btemp+1,w
  2967                           	
  2968  006E  1D03               	skipz
  2969  006F  287A               	goto	u3403
  2970  0070  3000               	movlw	0
  2971  0071  0230               	subwf	(_PSwitchCount+2),w
  2972  0072  1D03               	skipz
  2973  0073  287A               	goto	u3403
  2974  0074  3000               	movlw	0
  2975  0075  022F               	subwf	(_PSwitchCount+1),w
  2976  0076  1D03               	skipz
  2977  0077  287A               	goto	u3403
  2978  0078  30FB               	movlw	0FBh
  2979  0079  022E               	subwf	(_PSwitchCount),w
  2980  007A                     u3403:
  2981  007A  1C03               	skipc
  2982  007B  287D               	goto	u3401
  2983  007C  287E               	goto	u3400
  2984  007D                     u3401:
  2985  007D  28FA               	goto	l2878
  2986  007E                     u3400:
  2987                           	line	77
  2988                           	
  2989  007E                     l6401:	
  2990                           ;statemachine.c: 76: {
  2991                           ;statemachine.c: 77: if (SYSTEM_ON==0)
  2992  007E  1879               	btfsc	(_SYSTEM_ON/8),(_SYSTEM_ON)&7
  2993  007F  2881               	goto	u3411
  2994  0080  2882               	goto	u3410
  2995  0081                     u3411:
  2996  0081  289B               	goto	l6419
  2997  0082                     u3410:
  2998                           	line	79
  2999                           	
  3000  0082                     l6403:	
  3001                           ;statemachine.c: 78: {
  3002                           ;statemachine.c: 79: RA0=1;
  3003  0082  1405               	bsf	(40/8),(40)&7
  3004                           	line	80
  3005                           ;statemachine.c: 80: SYSTEM_ON=1;
  3006  0083  1479               	bsf	(_SYSTEM_ON/8),(_SYSTEM_ON)&7
  3007                           	line	81
  3008                           	
  3009  0084                     l6405:	
  3010                           ;statemachine.c: 81: CurrentState=LOAD_AKM;
  3011  0084  3003               	movlw	(03h)
  3012  0085  00F5               	movwf	(??_ProcessButton+0)+0
  3013  0086  0875               	movf	(??_ProcessButton+0)+0,w
  3014  0087  00BB               	movwf	(_CurrentState)
  3015                           	line	82
  3016                           ;statemachine.c: 82: }
  3017  0088  28FA               	goto	l2878
  3018                           	line	83
  3019                           	
  3020  0089                     l2868:	
  3021                           	line	86
  3022                           ;statemachine.c: 83: else
  3023                           ;statemachine.c: 84: {
  3024                           ;statemachine.c: 86: while(RA3 == 0)
  3025  0089  289B               	goto	l6419
  3026                           	
  3027  008A                     l2871:	
  3028                           	line	88
  3029                           ;statemachine.c: 87: {
  3030                           ;statemachine.c: 88: RA0=1;
  3031  008A  1405               	bsf	(40/8),(40)&7
  3032                           	line	89
  3033                           	
  3034  008B                     l6407:	
  3035                           ;statemachine.c: 89: delay_ms(60);
  3036  008B  303C               	movlw	(03Ch)
  3037  008C  24F4               	fcall	_delay_ms
  3038                           	line	90
  3039                           	
  3040  008D                     l6409:	
  3041                           ;statemachine.c: 90: RA0=0;
  3042  008D  1283               	bcf	status, 5	;RP0=0, select bank0
  3043  008E  1005               	bcf	(40/8),(40)&7
  3044                           	line	91
  3045                           ;statemachine.c: 91: delay_ms(60);
  3046  008F  303C               	movlw	(03Ch)
  3047  0090  24F4               	fcall	_delay_ms
  3048                           	line	92
  3049                           	
  3050  0091                     l6411:	
  3051                           ;statemachine.c: 92: RA0=1;
  3052  0091  1283               	bcf	status, 5	;RP0=0, select bank0
  3053  0092  1405               	bsf	(40/8),(40)&7
  3054                           	line	93
  3055                           ;statemachine.c: 93: delay_ms(60);
  3056  0093  303C               	movlw	(03Ch)
  3057  0094  24F4               	fcall	_delay_ms
  3058                           	line	94
  3059                           	
  3060  0095                     l6413:	
  3061                           ;statemachine.c: 94: RA0=0;
  3062  0095  1283               	bcf	status, 5	;RP0=0, select bank0
  3063  0096  1005               	bcf	(40/8),(40)&7
  3064                           	line	95
  3065                           ;statemachine.c: 95: delay_ms(60);
  3066  0097  303C               	movlw	(03Ch)
  3067  0098  24F4               	fcall	_delay_ms
  3068                           	
  3069  0099                     l6415:	
  3070                           # 95 "C:\Projects\Nordic\dual wireless mic ref design\clean source code\TX\statemachine.
                                 c"
  3071  0099  0064                     CLRWDT ;#
  3072                           psect	text773
  3073                           	line	97
  3074                           	
  3075  009A                     l6417:	
  3076                           # 97 "C:\Projects\Nordic\dual wireless mic ref design\clean source code\TX\statemachine.
                                 c"
  3077                           # 96 ;#
  3078                           psect	text773
  3079  009A  289B               	goto	l6419
  3080                           	line	99
  3081                           	
  3082  009B                     l2870:	
  3083                           	line	86
  3084                           	
  3085  009B                     l6419:	
  3086  009B  1283               	bcf	status, 5	;RP0=0, select bank0
  3087  009C  1D85               	btfss	(43/8),(43)&7
  3088  009D  289F               	goto	u3421
  3089  009E  28A0               	goto	u3420
  3090  009F                     u3421:
  3091  009F  288A               	goto	l2871
  3092  00A0                     u3420:
  3093  00A0  28A1               	goto	l6421
  3094                           	
  3095  00A1                     l2872:	
  3096                           	line	100
  3097                           	
  3098  00A1                     l6421:	
  3099                           ;statemachine.c: 99: }
  3100                           ;statemachine.c: 100: CurrentState=PAIRING;
  3101  00A1  3006               	movlw	(06h)
  3102  00A2  00F5               	movwf	(??_ProcessButton+0)+0
  3103  00A3  0875               	movf	(??_ProcessButton+0)+0,w
  3104  00A4  00BB               	movwf	(_CurrentState)
  3105                           	line	101
  3106                           ;statemachine.c: 101: PSwitchCount=0;
  3107  00A5  3000               	movlw	0
  3108  00A6  00B1               	movwf	(_PSwitchCount+3)
  3109  00A7  3000               	movlw	0
  3110  00A8  00B0               	movwf	(_PSwitchCount+2)
  3111  00A9  3000               	movlw	0
  3112  00AA  00AF               	movwf	(_PSwitchCount+1)
  3113  00AB  3000               	movlw	0
  3114  00AC  00AE               	movwf	(_PSwitchCount)
  3115                           
  3116  00AD  28FA               	goto	l2878
  3117                           	line	102
  3118                           	
  3119  00AE                     l2869:	
  3120  00AE  28FA               	goto	l2878
  3121                           	line	103
  3122                           	
  3123  00AF                     l2867:	
  3124                           	line	104
  3125                           ;statemachine.c: 102: }
  3126                           ;statemachine.c: 103: }
  3127                           ;statemachine.c: 104: }
  3128  00AF  28FA               	goto	l2878
  3129                           	line	105
  3130                           	
  3131  00B0                     l2864:	
  3132                           	line	107
  3133                           	
  3134  00B0                     l6423:	
  3135                           ;statemachine.c: 105: else
  3136                           ;statemachine.c: 106: {
  3137                           ;statemachine.c: 107: if(PSwitchCount > 70 && PSwitchCount < 300)
  3138  00B0  0831               	movf	(_PSwitchCount+3),w
  3139  00B1  3A80               	xorlw	80h
  3140  00B2  00FF               	movwf	btemp+1
  3141  00B3  3000               	movlw	0
  3142  00B4  3A80               	xorlw	80h
  3143  00B5  027F               	subwf	btemp+1,w
  3144                           	
  3145  00B6  1D03               	skipz
  3146  00B7  28C2               	goto	u3433
  3147  00B8  3000               	movlw	0
  3148  00B9  0230               	subwf	(_PSwitchCount+2),w
  3149  00BA  1D03               	skipz
  3150  00BB  28C2               	goto	u3433
  3151  00BC  3000               	movlw	0
  3152  00BD  022F               	subwf	(_PSwitchCount+1),w
  3153  00BE  1D03               	skipz
  3154  00BF  28C2               	goto	u3433
  3155  00C0  3047               	movlw	047h
  3156  00C1  022E               	subwf	(_PSwitchCount),w
  3157  00C2                     u3433:
  3158  00C2  1C03               	skipc
  3159  00C3  28C5               	goto	u3431
  3160  00C4  28C6               	goto	u3430
  3161  00C5                     u3431:
  3162  00C5  28F1               	goto	l2874
  3163  00C6                     u3430:
  3164                           	
  3165  00C6                     l6425:	
  3166  00C6  0831               	movf	(_PSwitchCount+3),w
  3167  00C7  3A80               	xorlw	80h
  3168  00C8  00FF               	movwf	btemp+1
  3169  00C9  3000               	movlw	0
  3170  00CA  3A80               	xorlw	80h
  3171  00CB  027F               	subwf	btemp+1,w
  3172                           	
  3173  00CC  1D03               	skipz
  3174  00CD  28D8               	goto	u3443
  3175  00CE  3000               	movlw	0
  3176  00CF  0230               	subwf	(_PSwitchCount+2),w
  3177  00D0  1D03               	skipz
  3178  00D1  28D8               	goto	u3443
  3179  00D2  3001               	movlw	01h
  3180  00D3  022F               	subwf	(_PSwitchCount+1),w
  3181  00D4  1D03               	skipz
  3182  00D5  28D8               	goto	u3443
  3183  00D6  302C               	movlw	02Ch
  3184  00D7  022E               	subwf	(_PSwitchCount),w
  3185  00D8                     u3443:
  3186  00D8  1803               	skipnc
  3187  00D9  28DB               	goto	u3441
  3188  00DA  28DC               	goto	u3440
  3189  00DB                     u3441:
  3190  00DB  28F1               	goto	l2874
  3191  00DC                     u3440:
  3192                           	line	109
  3193                           	
  3194  00DC                     l6427:	
  3195                           ;statemachine.c: 108: {
  3196                           ;statemachine.c: 109: if (SYSTEM_ON==0)
  3197  00DC  1879               	btfsc	(_SYSTEM_ON/8),(_SYSTEM_ON)&7
  3198  00DD  28DF               	goto	u3451
  3199  00DE  28E0               	goto	u3450
  3200  00DF                     u3451:
  3201  00DF  28E7               	goto	l2875
  3202  00E0                     u3450:
  3203                           	line	111
  3204                           	
  3205  00E0                     l6429:	
  3206                           ;statemachine.c: 110: {
  3207                           ;statemachine.c: 111: RA0=1;
  3208  00E0  1405               	bsf	(40/8),(40)&7
  3209                           	line	112
  3210                           ;statemachine.c: 112: SYSTEM_ON=1;
  3211  00E1  1479               	bsf	(_SYSTEM_ON/8),(_SYSTEM_ON)&7
  3212                           	line	113
  3213                           	
  3214  00E2                     l6431:	
  3215                           ;statemachine.c: 113: CurrentState=LOAD_AKM;
  3216  00E2  3003               	movlw	(03h)
  3217  00E3  00F5               	movwf	(??_ProcessButton+0)+0
  3218  00E4  0875               	movf	(??_ProcessButton+0)+0,w
  3219  00E5  00BB               	movwf	(_CurrentState)
  3220                           	line	114
  3221                           ;statemachine.c: 114: }
  3222  00E6  28F1               	goto	l2874
  3223                           	line	115
  3224                           	
  3225  00E7                     l2875:	
  3226                           ;statemachine.c: 115: else if (SYSTEM_ON==1)
  3227  00E7  1C79               	btfss	(_SYSTEM_ON/8),(_SYSTEM_ON)&7
  3228  00E8  28EA               	goto	u3461
  3229  00E9  28EB               	goto	u3460
  3230  00EA                     u3461:
  3231  00EA  28F1               	goto	l2874
  3232  00EB                     u3460:
  3233                           	line	116
  3234                           	
  3235  00EB                     l6433:	
  3236                           ;statemachine.c: 116: CurrentState=ENTER_SLEEP;
  3237  00EB  3004               	movlw	(04h)
  3238  00EC  00F5               	movwf	(??_ProcessButton+0)+0
  3239  00ED  0875               	movf	(??_ProcessButton+0)+0,w
  3240  00EE  00BB               	movwf	(_CurrentState)
  3241  00EF  28F1               	goto	l2874
  3242                           	
  3243  00F0                     l2877:	
  3244  00F0  28F1               	goto	l2874
  3245                           	line	117
  3246                           	
  3247  00F1                     l2876:	
  3248                           	
  3249  00F1                     l2874:	
  3250                           	line	118
  3251                           ;statemachine.c: 117: }
  3252                           ;statemachine.c: 118: PSwitchCount=0;
  3253  00F1  3000               	movlw	0
  3254  00F2  00B1               	movwf	(_PSwitchCount+3)
  3255  00F3  3000               	movlw	0
  3256  00F4  00B0               	movwf	(_PSwitchCount+2)
  3257  00F5  3000               	movlw	0
  3258  00F6  00AF               	movwf	(_PSwitchCount+1)
  3259  00F7  3000               	movlw	0
  3260  00F8  00AE               	movwf	(_PSwitchCount)
  3261                           
  3262  00F9  28FA               	goto	l2878
  3263                           	line	119
  3264                           	
  3265  00FA                     l2873:	
  3266                           	line	121
  3267                           	
  3268  00FA                     l2878:	
  3269  00FA  0008               	return
  3270                           	opt stack 0
  3271                           GLOBAL	__end_of_ProcessButton
  3272  00FB                     	__end_of_ProcessButton:
  3273 ;; =============== function _ProcessButton ends ============
  3274                           
  3275                           	signat	_ProcessButton,88
  3276                           	global	_Nordic_Read
  3277                           psect	text774,local,class=CODE,delta=2
  3278                           global __ptext774
  3279  03F3                     __ptext774:
  3280                           
  3281 ;; *************** function _Nordic_Read *****************
  3282 ;; Defined at:
  3283 ;;		line 68 in file "C:\Projects\Nordic\dual wireless mic ref design\clean source code\TX\Software_spi.c"
  3284 ;; Parameters:    Size  Location     Type
  3285 ;;  raddress2       1    wreg     unsigned char 
  3286 ;; Auto vars:     Size  Location     Type
  3287 ;;  raddress2       1    5[BANK0 ] unsigned char 
  3288 ;;  data8           1    7[BANK0 ] unsigned char 
  3289 ;;  t               1    6[BANK0 ] unsigned char 
  3290 ;; Return value:  Size  Location     Type
  3291 ;;                  1    wreg      unsigned char 
  3292 ;; Registers used:
  3293 ;;		wreg, status,2, status,0, pclath, cstack
  3294 ;; Tracked objects:
  3295 ;;		On entry : 0/0
  3296 ;;		On exit  : 0/0
  3297 ;;		Unchanged: 0/0
  3298 ;; Data sizes:     COMMON   BANK0   BANK1
  3299 ;;      Params:         0       0       0
  3300 ;;      Locals:         0       3       0
  3301 ;;      Temps:          0       2       0
  3302 ;;      Totals:         0       5       0
  3303 ;;Total ram usage:        5 bytes
  3304 ;; Hardware stack levels used:    1
  3305 ;; Hardware stack levels required when called:    3
  3306 ;; This function calls:
  3307 ;;		_delay_ms
  3308 ;;		_ClockEight
  3309 ;; This function is called by:
  3310 ;;		_Nordic_LinkPresent
  3311 ;;		_Nordic_Wakeup
  3312 ;;		_ProcessPairing
  3313 ;; This function uses a non-reentrant model
  3314 ;;
  3315                           psect	text774
  3316                           	file	"C:\Projects\Nordic\dual wireless mic ref design\clean source code\TX\Software_spi
                                 .c"
  3317                           	line	68
  3318                           	global	__size_of_Nordic_Read
  3319  005A                     	__size_of_Nordic_Read	equ	__end_of_Nordic_Read-_Nordic_Read
  3320                           	
  3321  03F3                     _Nordic_Read:	
  3322                           	opt	stack 2
  3323                           ; Regs used in _Nordic_Read: [wreg+status,2+status,0+pclath+cstack]
  3324                           ;Nordic_Read@raddress2 stored from wreg
  3325                           	line	70
  3326  03F3  1283               	bcf	status, 5	;RP0=0, select bank0
  3327  03F4  00A5               	movwf	(Nordic_Read@raddress2)
  3328                           	
  3329  03F5                     l6319:	
  3330                           ;Software_spi.c: 69: BYTE t; BYTE data8;
  3331                           ;Software_spi.c: 70: (RC0=0);
  3332  03F5  1007               	bcf	(56/8),(56)&7
  3333                           	line	71
  3334                           # 71 "C:\Projects\Nordic\dual wireless mic ref design\clean source code\TX\Software_spi.
                                 c"
  3335  03F6  0000               nop ;#
  3336                           # 71 "C:\Projects\Nordic\dual wireless mic ref design\clean source code\TX\Software_spi.
                                 c"
  3337  03F7  0000               nop ;#
  3338                           # 71 "C:\Projects\Nordic\dual wireless mic ref design\clean source code\TX\Software_spi.
                                 c"
  3339  03F8  0000               nop ;#
  3340                           # 71 "C:\Projects\Nordic\dual wireless mic ref design\clean source code\TX\Software_spi.
                                 c"
  3341  03F9  0000               nop ;#
  3342                           # 71 "C:\Projects\Nordic\dual wireless mic ref design\clean source code\TX\Software_spi.
                                 c"
  3343  03FA  0000               nop ;#
  3344                           # 71 "C:\Projects\Nordic\dual wireless mic ref design\clean source code\TX\Software_spi.
                                 c"
  3345  03FB  0000               nop ;#
  3346                           psect	text774
  3347                           	line	72
  3348                           	
  3349  03FC                     l6321:	
  3350                           ;Software_spi.c: 72: raddress2 = raddress2 | 0x80;
  3351  03FC  1283               	bcf	status, 5	;RP0=0, select bank0
  3352  03FD  0825               	movf	(Nordic_Read@raddress2),w
  3353  03FE  3880               	iorlw	080h
  3354  03FF  00A3               	movwf	(??_Nordic_Read+0)+0
  3355  0400  0823               	movf	(??_Nordic_Read+0)+0,w
  3356  0401  00A5               	movwf	(Nordic_Read@raddress2)
  3357                           	line	73
  3358                           	
  3359  0402                     l6323:	
  3360                           ;Software_spi.c: 73: delay_ms(1);
  3361  0402  3001               	movlw	(01h)
  3362  0403  24F4               	fcall	_delay_ms
  3363                           	line	74
  3364                           	
  3365  0404                     l6325:	
  3366                           ;Software_spi.c: 74: (RC3=0);
  3367  0404  1283               	bcf	status, 5	;RP0=0, select bank0
  3368  0405  1187               	bcf	(59/8),(59)&7
  3369                           	line	75
  3370                           	
  3371  0406                     l6327:	
  3372                           ;Software_spi.c: 75: delay_ms(1);
  3373  0406  3001               	movlw	(01h)
  3374  0407  24F4               	fcall	_delay_ms
  3375                           	line	76
  3376                           	
  3377  0408                     l6329:	
  3378                           ;Software_spi.c: 76: ClockEight(raddress2);
  3379  0408  1283               	bcf	status, 5	;RP0=0, select bank0
  3380  0409  0825               	movf	(Nordic_Read@raddress2),w
  3381  040A  244D               	fcall	_ClockEight
  3382                           	line	78
  3383                           	
  3384  040B                     l6331:	
  3385                           ;Software_spi.c: 78: delay_ms(1);
  3386  040B  3001               	movlw	(01h)
  3387  040C  24F4               	fcall	_delay_ms
  3388                           	line	79
  3389                           	
  3390  040D                     l6333:	
  3391                           ;Software_spi.c: 79: data8 = 0;
  3392  040D  1283               	bcf	status, 5	;RP0=0, select bank0
  3393  040E  01A7               	clrf	(Nordic_Read@data8)
  3394                           	line	80
  3395                           	
  3396  040F                     l6335:	
  3397                           ;Software_spi.c: 80: for(t=0;t<8;t++)
  3398  040F  01A6               	clrf	(Nordic_Read@t)
  3399                           	
  3400  0410                     l6337:	
  3401  0410  3008               	movlw	(08h)
  3402  0411  0226               	subwf	(Nordic_Read@t),w
  3403  0412  1C03               	skipc
  3404  0413  2C15               	goto	u3311
  3405  0414  2C16               	goto	u3310
  3406  0415                     u3311:
  3407  0415  2C18               	goto	l6341
  3408  0416                     u3310:
  3409  0416  2C43               	goto	l6377
  3410                           	
  3411  0417                     l6339:	
  3412  0417  2C43               	goto	l6377
  3413                           	line	81
  3414                           	
  3415  0418                     l2261:	
  3416                           	line	82
  3417                           	
  3418  0418                     l6341:	
  3419                           ;Software_spi.c: 81: {
  3420                           ;Software_spi.c: 82: data8 = data8<<1;
  3421  0418  0827               	movf	(Nordic_Read@data8),w
  3422  0419  00A3               	movwf	(??_Nordic_Read+0)+0
  3423  041A  0723               	addwf	(??_Nordic_Read+0)+0,w
  3424  041B  00A4               	movwf	(??_Nordic_Read+1)+0
  3425  041C  0824               	movf	(??_Nordic_Read+1)+0,w
  3426  041D  00A7               	movwf	(Nordic_Read@data8)
  3427                           	line	83
  3428                           	
  3429  041E                     l6343:	
  3430                           # 83 "C:\Projects\Nordic\dual wireless mic ref design\clean source code\TX\Software_spi.
                                 c"
  3431  041E  0000               nop ;#
  3432                           psect	text774
  3433                           	
  3434  041F                     l6345:	
  3435                           # 83 "C:\Projects\Nordic\dual wireless mic ref design\clean source code\TX\Software_spi.
                                 c"
  3436  041F  0000               nop ;#
  3437                           psect	text774
  3438                           	
  3439  0420                     l6347:	
  3440                           # 83 "C:\Projects\Nordic\dual wireless mic ref design\clean source code\TX\Software_spi.
                                 c"
  3441  0420  0000               nop ;#
  3442                           psect	text774
  3443                           	
  3444  0421                     l6349:	
  3445                           # 83 "C:\Projects\Nordic\dual wireless mic ref design\clean source code\TX\Software_spi.
                                 c"
  3446  0421  0000               nop ;#
  3447                           psect	text774
  3448                           	
  3449  0422                     l6351:	
  3450                           # 83 "C:\Projects\Nordic\dual wireless mic ref design\clean source code\TX\Software_spi.
                                 c"
  3451  0422  0000               nop ;#
  3452                           psect	text774
  3453                           	
  3454  0423                     l6353:	
  3455                           # 83 "C:\Projects\Nordic\dual wireless mic ref design\clean source code\TX\Software_spi.
                                 c"
  3456  0423  0000               nop ;#
  3457                           psect	text774
  3458                           	line	84
  3459                           	
  3460  0424                     l6355:	
  3461                           ;Software_spi.c: 84: (RC0=1);
  3462  0424  1283               	bcf	status, 5	;RP0=0, select bank0
  3463  0425  1407               	bsf	(56/8),(56)&7
  3464                           	line	85
  3465                           	
  3466  0426                     l6357:	
  3467                           # 85 "C:\Projects\Nordic\dual wireless mic ref design\clean source code\TX\Software_spi.
                                 c"
  3468  0426  0000               nop ;#
  3469                           psect	text774
  3470                           	
  3471  0427                     l6359:	
  3472                           # 85 "C:\Projects\Nordic\dual wireless mic ref design\clean source code\TX\Software_spi.
                                 c"
  3473  0427  0000               nop ;#
  3474                           psect	text774
  3475                           	
  3476  0428                     l6361:	
  3477                           # 85 "C:\Projects\Nordic\dual wireless mic ref design\clean source code\TX\Software_spi.
                                 c"
  3478  0428  0000               nop ;#
  3479                           psect	text774
  3480                           	
  3481  0429                     l6363:	
  3482                           # 85 "C:\Projects\Nordic\dual wireless mic ref design\clean source code\TX\Software_spi.
                                 c"
  3483  0429  0000               nop ;#
  3484                           psect	text774
  3485                           	
  3486  042A                     l6365:	
  3487                           # 85 "C:\Projects\Nordic\dual wireless mic ref design\clean source code\TX\Software_spi.
                                 c"
  3488  042A  0000               nop ;#
  3489                           psect	text774
  3490                           	
  3491  042B                     l6367:	
  3492                           # 85 "C:\Projects\Nordic\dual wireless mic ref design\clean source code\TX\Software_spi.
                                 c"
  3493  042B  0000               nop ;#
  3494                           psect	text774
  3495                           	line	86
  3496                           	
  3497  042C                     l6369:	
  3498                           ;Software_spi.c: 86: if(( RC2==1 ))
  3499  042C  1283               	bcf	status, 5	;RP0=0, select bank0
  3500  042D  1D07               	btfss	(58/8),(58)&7
  3501  042E  2C30               	goto	u3321
  3502  042F  2C31               	goto	u3320
  3503  0430                     u3321:
  3504  0430  2C37               	goto	l6373
  3505  0431                     u3320:
  3506                           	line	87
  3507                           	
  3508  0431                     l6371:	
  3509                           ;Software_spi.c: 87: data8=data8+1;
  3510  0431  0827               	movf	(Nordic_Read@data8),w
  3511  0432  3E01               	addlw	01h
  3512  0433  00A3               	movwf	(??_Nordic_Read+0)+0
  3513  0434  0823               	movf	(??_Nordic_Read+0)+0,w
  3514  0435  00A7               	movwf	(Nordic_Read@data8)
  3515  0436  2C37               	goto	l6373
  3516                           	
  3517  0437                     l2263:	
  3518                           	line	88
  3519                           	
  3520  0437                     l6373:	
  3521                           ;Software_spi.c: 88: (RC0=0);
  3522  0437  1007               	bcf	(56/8),(56)&7
  3523                           	line	80
  3524  0438  3001               	movlw	(01h)
  3525  0439  00A3               	movwf	(??_Nordic_Read+0)+0
  3526  043A  0823               	movf	(??_Nordic_Read+0)+0,w
  3527  043B  07A6               	addwf	(Nordic_Read@t),f
  3528                           	
  3529  043C                     l6375:	
  3530  043C  3008               	movlw	(08h)
  3531  043D  0226               	subwf	(Nordic_Read@t),w
  3532  043E  1C03               	skipc
  3533  043F  2C41               	goto	u3331
  3534  0440  2C42               	goto	u3330
  3535  0441                     u3331:
  3536  0441  2C18               	goto	l6341
  3537  0442                     u3330:
  3538  0442  2C43               	goto	l6377
  3539                           	
  3540  0443                     l2262:	
  3541                           	line	90
  3542                           	
  3543  0443                     l6377:	
  3544                           ;Software_spi.c: 89: }
  3545                           ;Software_spi.c: 90: delay_ms(1);
  3546  0443  3001               	movlw	(01h)
  3547  0444  24F4               	fcall	_delay_ms
  3548                           	line	91
  3549                           	
  3550  0445                     l6379:	
  3551                           ;Software_spi.c: 91: (RC3=1);
  3552  0445  1283               	bcf	status, 5	;RP0=0, select bank0
  3553  0446  1587               	bsf	(59/8),(59)&7
  3554                           	line	92
  3555                           ;Software_spi.c: 92: delay_ms(1);
  3556  0447  3001               	movlw	(01h)
  3557  0448  24F4               	fcall	_delay_ms
  3558                           	line	94
  3559                           	
  3560  0449                     l6381:	
  3561                           ;Software_spi.c: 94: return(data8);
  3562  0449  1283               	bcf	status, 5	;RP0=0, select bank0
  3563  044A  0827               	movf	(Nordic_Read@data8),w
  3564  044B  2C4C               	goto	l2264
  3565                           	
  3566  044C                     l6383:	
  3567                           	line	95
  3568                           	
  3569  044C                     l2264:	
  3570  044C  0008               	return
  3571                           	opt stack 0
  3572                           GLOBAL	__end_of_Nordic_Read
  3573  044D                     	__end_of_Nordic_Read:
  3574 ;; =============== function _Nordic_Read ends ============
  3575                           
  3576                           	signat	_Nordic_Read,4217
  3577                           	global	_IntializeStateMachine
  3578                           psect	text775,local,class=CODE,delta=2
  3579                           global __ptext775
  3580  062D                     __ptext775:
  3581                           
  3582 ;; *************** function _IntializeStateMachine *****************
  3583 ;; Defined at:
  3584 ;;		line 38 in file "C:\Projects\Nordic\dual wireless mic ref design\clean source code\TX\statemachine.c"
  3585 ;; Parameters:    Size  Location     Type
  3586 ;;		None
  3587 ;; Auto vars:     Size  Location     Type
  3588 ;;		None
  3589 ;; Return value:  Size  Location     Type
  3590 ;;		None               void
  3591 ;; Registers used:
  3592 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3593 ;; Tracked objects:
  3594 ;;		On entry : 0/0
  3595 ;;		On exit  : 0/0
  3596 ;;		Unchanged: 0/0
  3597 ;; Data sizes:     COMMON   BANK0   BANK1
  3598 ;;      Params:         0       0       0
  3599 ;;      Locals:         0       0       0
  3600 ;;      Temps:          0       0       0
  3601 ;;      Totals:         0       0       0
  3602 ;;Total ram usage:        0 bytes
  3603 ;; Hardware stack levels used:    1
  3604 ;; Hardware stack levels required when called:    3
  3605 ;; This function calls:
  3606 ;;		__Timer_Start
  3607 ;; This function is called by:
  3608 ;;		_main
  3609 ;; This function uses a non-reentrant model
  3610 ;;
  3611                           psect	text775
  3612                           	file	"C:\Projects\Nordic\dual wireless mic ref design\clean source code\TX\statemachine
                                 .c"
  3613                           	line	38
  3614                           	global	__size_of_IntializeStateMachine
  3615  000B                     	__size_of_IntializeStateMachine	equ	__end_of_IntializeStateMachine-_IntializeStateMachi
                                 ne
  3616                           	
  3617  062D                     _IntializeStateMachine:	
  3618                           	opt	stack 4
  3619                           ; Regs used in _IntializeStateMachine: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3620                           	line	39
  3621                           	
  3622  062D                     l6315:	
  3623                           ;statemachine.c: 39: CurrentState=BUTTON_STATE;
  3624  062D  1283               	bcf	status, 5	;RP0=0, select bank0
  3625  062E  01BB               	clrf	(_CurrentState)
  3626  062F  1403               	bsf	status,0
  3627  0630  0DBB               	rlf	(_CurrentState),f
  3628                           	line	40
  3629                           	
  3630  0631                     l6317:	
  3631                           ;statemachine.c: 40: _Timer_Start(&(StateMachineTimer), (6));
  3632  0631  3006               	movlw	low(06h)
  3633  0632  00F4               	movwf	(?__Timer_Start)
  3634  0633  3000               	movlw	high(06h)
  3635  0634  00F5               	movwf	((?__Timer_Start))+1
  3636  0635  3037               	movlw	(_StateMachineTimer)&0ffh
  3637  0636  24C0               	fcall	__Timer_Start
  3638                           	line	41
  3639                           	
  3640  0637                     l2854:	
  3641  0637  0008               	return
  3642                           	opt stack 0
  3643                           GLOBAL	__end_of_IntializeStateMachine
  3644  0638                     	__end_of_IntializeStateMachine:
  3645 ;; =============== function _IntializeStateMachine ends ============
  3646                           
  3647                           	signat	_IntializeStateMachine,88
  3648                           	global	_SPI_Send
  3649                           psect	text776,local,class=CODE,delta=2
  3650                           global __ptext776
  3651  0578                     __ptext776:
  3652                           
  3653 ;; *************** function _SPI_Send *****************
  3654 ;; Defined at:
  3655 ;;		line 36 in file "C:\Projects\Nordic\dual wireless mic ref design\clean source code\TX\Software_spi.c"
  3656 ;; Parameters:    Size  Location     Type
  3657 ;;  address         1    wreg     unsigned char 
  3658 ;;  data8           1    3[BANK0 ] unsigned char 
  3659 ;;  Target          1    4[BANK0 ] unsigned char 
  3660 ;; Auto vars:     Size  Location     Type
  3661 ;;  address         1    5[BANK0 ] unsigned char 
  3662 ;; Return value:  Size  Location     Type
  3663 ;;		None               void
  3664 ;; Registers used:
  3665 ;;		wreg, status,2, status,0, pclath, cstack
  3666 ;; Tracked objects:
  3667 ;;		On entry : 0/0
  3668 ;;		On exit  : 0/0
  3669 ;;		Unchanged: 0/0
  3670 ;; Data sizes:     COMMON   BANK0   BANK1
  3671 ;;      Params:         0       2       0
  3672 ;;      Locals:         0       1       0
  3673 ;;      Temps:          0       0       0
  3674 ;;      Totals:         0       3       0
  3675 ;;Total ram usage:        3 bytes
  3676 ;; Hardware stack levels used:    1
  3677 ;; Hardware stack levels required when called:    3
  3678 ;; This function calls:
  3679 ;;		_delay_ms
  3680 ;;		_ClockEight
  3681 ;; This function is called by:
  3682 ;;		_AKM_Constructor
  3683 ;;		_Nordic_Wakeup
  3684 ;;		_ProcessEnterSleep
  3685 ;;		_ProcessPairing
  3686 ;; This function uses a non-reentrant model
  3687 ;;
  3688                           psect	text776
  3689                           	file	"C:\Projects\Nordic\dual wireless mic ref design\clean source code\TX\Software_spi
                                 .c"
  3690                           	line	36
  3691                           	global	__size_of_SPI_Send
  3692  0026                     	__size_of_SPI_Send	equ	__end_of_SPI_Send-_SPI_Send
  3693                           	
  3694  0578                     _SPI_Send:	
  3695                           	opt	stack 2
  3696                           ; Regs used in _SPI_Send: [wreg+status,2+status,0+pclath+cstack]
  3697                           ;SPI_Send@address stored from wreg
  3698                           	line	38
  3699  0578  1283               	bcf	status, 5	;RP0=0, select bank0
  3700  0579  00A5               	movwf	(SPI_Send@address)
  3701                           	
  3702  057A                     l6299:	
  3703                           ;Software_spi.c: 38: (RC0=0);
  3704  057A  1007               	bcf	(56/8),(56)&7
  3705                           	line	39
  3706                           	
  3707  057B                     l6301:	
  3708                           ;Software_spi.c: 39: delay_ms(1);
  3709  057B  3001               	movlw	(01h)
  3710  057C  24F4               	fcall	_delay_ms
  3711                           	line	40
  3712                           	
  3713  057D                     l6303:	
  3714                           ;Software_spi.c: 40: if ( Target )
  3715  057D  1283               	bcf	status, 5	;RP0=0, select bank0
  3716  057E  0824               	movf	(SPI_Send@Target),w
  3717  057F  1D03               	skipz
  3718  0580  2D82               	goto	u3290
  3719  0581  2D84               	goto	l2254
  3720  0582                     u3290:
  3721                           	line	42
  3722                           	
  3723  0582                     l6305:	
  3724                           ;Software_spi.c: 41: {
  3725                           ;Software_spi.c: 42: (RA2=0);
  3726  0582  1105               	bcf	(42/8),(42)&7
  3727                           	line	43
  3728                           ;Software_spi.c: 43: }
  3729  0583  2D86               	goto	l6307
  3730                           	line	44
  3731                           	
  3732  0584                     l2254:	
  3733                           	line	46
  3734                           ;Software_spi.c: 44: else
  3735                           ;Software_spi.c: 45: {
  3736                           ;Software_spi.c: 46: (RC3=0);
  3737  0584  1187               	bcf	(59/8),(59)&7
  3738  0585  2D86               	goto	l6307
  3739                           	line	47
  3740                           	
  3741  0586                     l2255:	
  3742                           	line	48
  3743                           	
  3744  0586                     l6307:	
  3745                           ;Software_spi.c: 47: }
  3746                           ;Software_spi.c: 48: delay_ms(1);
  3747  0586  3001               	movlw	(01h)
  3748  0587  24F4               	fcall	_delay_ms
  3749                           	line	49
  3750                           ;Software_spi.c: 49: ClockEight(address);
  3751  0588  1283               	bcf	status, 5	;RP0=0, select bank0
  3752  0589  0825               	movf	(SPI_Send@address),w
  3753  058A  244D               	fcall	_ClockEight
  3754                           	line	51
  3755                           ;Software_spi.c: 51: delay_ms(1);
  3756  058B  3001               	movlw	(01h)
  3757  058C  24F4               	fcall	_delay_ms
  3758                           	line	52
  3759                           ;Software_spi.c: 52: ClockEight(data8);
  3760  058D  1283               	bcf	status, 5	;RP0=0, select bank0
  3761  058E  0823               	movf	(SPI_Send@data8),w
  3762  058F  244D               	fcall	_ClockEight
  3763                           	line	55
  3764                           ;Software_spi.c: 55: delay_ms(1);
  3765  0590  3001               	movlw	(01h)
  3766  0591  24F4               	fcall	_delay_ms
  3767                           	line	56
  3768                           	
  3769  0592                     l6309:	
  3770                           ;Software_spi.c: 56: if ( Target )
  3771  0592  1283               	bcf	status, 5	;RP0=0, select bank0
  3772  0593  0824               	movf	(SPI_Send@Target),w
  3773  0594  1D03               	skipz
  3774  0595  2D97               	goto	u3300
  3775  0596  2D99               	goto	l2256
  3776  0597                     u3300:
  3777                           	line	58
  3778                           	
  3779  0597                     l6311:	
  3780                           ;Software_spi.c: 57: {
  3781                           ;Software_spi.c: 58: (RA2=1);
  3782  0597  1505               	bsf	(42/8),(42)&7
  3783                           	line	59
  3784                           ;Software_spi.c: 59: }
  3785  0598  2D9B               	goto	l6313
  3786                           	line	60
  3787                           	
  3788  0599                     l2256:	
  3789                           	line	62
  3790                           ;Software_spi.c: 60: else
  3791                           ;Software_spi.c: 61: {
  3792                           ;Software_spi.c: 62: (RC3=1);
  3793  0599  1587               	bsf	(59/8),(59)&7
  3794  059A  2D9B               	goto	l6313
  3795                           	line	63
  3796                           	
  3797  059B                     l2257:	
  3798                           	line	65
  3799                           	
  3800  059B                     l6313:	
  3801                           ;Software_spi.c: 63: }
  3802                           ;Software_spi.c: 65: delay_ms(1);
  3803  059B  3001               	movlw	(01h)
  3804  059C  24F4               	fcall	_delay_ms
  3805                           	line	66
  3806                           	
  3807  059D                     l2258:	
  3808  059D  0008               	return
  3809                           	opt stack 0
  3810                           GLOBAL	__end_of_SPI_Send
  3811  059E                     	__end_of_SPI_Send:
  3812 ;; =============== function _SPI_Send ends ============
  3813                           
  3814                           	signat	_SPI_Send,12408
  3815                           	global	__Timer_IsExpired
  3816                           psect	text777,local,class=CODE,delta=2
  3817                           global __ptext777
  3818  0488                     __ptext777:
  3819                           
  3820 ;; *************** function __Timer_IsExpired *****************
  3821 ;; Defined at:
  3822 ;;		line 82 in file "C:\Projects\Nordic\dual wireless mic ref design\clean source code\TX\timers.c"
  3823 ;; Parameters:    Size  Location     Type
  3824 ;;  theTimer        1    wreg     PTR struct .
  3825 ;;		 -> StateMachineTimer(4), 
  3826 ;; Auto vars:     Size  Location     Type
  3827 ;;  theTimer        1    0[BANK0 ] PTR struct .
  3828 ;;		 -> StateMachineTimer(4), 
  3829 ;;  length          2    1[BANK0 ] int 
  3830 ;; Return value:  Size  Location     Type
  3831 ;;                  1    wreg      unsigned char 
  3832 ;; Registers used:
  3833 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3834 ;; Tracked objects:
  3835 ;;		On entry : 0/0
  3836 ;;		On exit  : 0/0
  3837 ;;		Unchanged: 0/0
  3838 ;; Data sizes:     COMMON   BANK0   BANK1
  3839 ;;      Params:         0       0       0
  3840 ;;      Locals:         0       3       0
  3841 ;;      Temps:          2       0       0
  3842 ;;      Totals:         2       3       0
  3843 ;;Total ram usage:        5 bytes
  3844 ;; Hardware stack levels used:    1
  3845 ;; Hardware stack levels required when called:    2
  3846 ;; This function calls:
  3847 ;;		Nothing
  3848 ;; This function is called by:
  3849 ;;		_ProcessStateMachine
  3850 ;; This function uses a non-reentrant model
  3851 ;;
  3852                           psect	text777
  3853                           	file	"C:\Projects\Nordic\dual wireless mic ref design\clean source code\TX\timers.c"
  3854                           	line	82
  3855                           	global	__size_of__Timer_IsExpired
  3856  0038                     	__size_of__Timer_IsExpired	equ	__end_of__Timer_IsExpired-__Timer_IsExpired
  3857                           	
  3858  0488                     __Timer_IsExpired:	
  3859                           	opt	stack 4
  3860                           ; Regs used in __Timer_IsExpired: [wreg-fsr0h+status,2+status,0]
  3861                           ;__Timer_IsExpired@theTimer stored from wreg
  3862  0488  1283               	bcf	status, 5	;RP0=0, select bank0
  3863  0489  00A0               	movwf	(__Timer_IsExpired@theTimer)
  3864                           	line	83
  3865                           	
  3866  048A                     l6279:	
  3867                           ;timers.c: 83: int length = theTimer->length;
  3868  048A  0820               	movf	(__Timer_IsExpired@theTimer),w
  3869  048B  3E02               	addlw	02h
  3870  048C  0084               	movwf	fsr0
  3871  048D  1383               	bcf	status, 7	;select IRP bank0
  3872  048E  0800               	movf	indf,w
  3873  048F  00A1               	movwf	(__Timer_IsExpired@length)
  3874  0490  0A84               	incf	fsr0,f
  3875  0491  0800               	movf	indf,w
  3876  0492  00A2               	movwf	(__Timer_IsExpired@length+1)
  3877                           	line	85
  3878                           	
  3879  0493                     l6281:	
  3880                           ;timers.c: 85: if ( length != 0 )
  3881  0493  0822               	movf	(__Timer_IsExpired@length+1),w
  3882  0494  0421               	iorwf	(__Timer_IsExpired@length),w
  3883  0495  1903               	skipnz
  3884  0496  2C98               	goto	u3271
  3885  0497  2C99               	goto	u3270
  3886  0498                     u3271:
  3887  0498  2CBD               	goto	l6295
  3888  0499                     u3270:
  3889                           	line	87
  3890                           	
  3891  0499                     l6283:	
  3892                           ;timers.c: 86: {
  3893                           ;timers.c: 87: TMR1IE = 0;
  3894  0499  1683               	bsf	status, 5	;RP0=1, select bank1
  3895  049A  100C               	bcf	(1120/8)^080h,(1120)&7
  3896                           	line	88
  3897                           	
  3898  049B                     l6285:	
  3899                           ;timers.c: 88: now = Timer_SysTime;
  3900  049B  0877               	movf	(_Timer_SysTime+1),w
  3901  049C  1283               	bcf	status, 5	;RP0=0, select bank0
  3902  049D  01B3               	clrf	(_now+1)
  3903  049E  07B3               	addwf	(_now+1)
  3904  049F  0876               	movf	(_Timer_SysTime),w
  3905  04A0  01B2               	clrf	(_now)
  3906  04A1  07B2               	addwf	(_now)
  3907                           
  3908                           	line	89
  3909                           	
  3910  04A2                     l6287:	
  3911                           ;timers.c: 89: TMR1IE = 1;
  3912  04A2  1683               	bsf	status, 5	;RP0=1, select bank1
  3913  04A3  140C               	bsf	(1120/8)^080h,(1120)&7
  3914                           	line	91
  3915                           	
  3916  04A4                     l6289:	
  3917                           ;timers.c: 91: now -= theTimer->started;
  3918  04A4  1283               	bcf	status, 5	;RP0=0, select bank0
  3919  04A5  0820               	movf	(__Timer_IsExpired@theTimer),w
  3920  04A6  0084               	movwf	fsr0
  3921  04A7  0800               	movf	indf,w
  3922  04A8  00F4               	movwf	(??__Timer_IsExpired+0)+0+0
  3923  04A9  0A84               	incf	fsr0,f
  3924  04AA  0800               	movf	indf,w
  3925  04AB  00F5               	movwf	(??__Timer_IsExpired+0)+0+1
  3926  04AC  0874               	movf	0+(??__Timer_IsExpired+0)+0,w
  3927  04AD  02B2               	subwf	(_now),f
  3928  04AE  0875               	movf	1+(??__Timer_IsExpired+0)+0,w
  3929  04AF  1C03               	skipc
  3930  04B0  03B3               	decf	(_now+1),f
  3931  04B1  02B3               	subwf	(_now+1),f
  3932                           	line	92
  3933                           	
  3934  04B2                     l6291:	
  3935                           ;timers.c: 92: return (now >= length);
  3936  04B2  0822               	movf	(__Timer_IsExpired@length+1),w
  3937  04B3  0233               	subwf	(_now+1),w
  3938  04B4  1D03               	skipz
  3939  04B5  2CB8               	goto	u3285
  3940  04B6  0821               	movf	(__Timer_IsExpired@length),w
  3941  04B7  0232               	subwf	(_now),w
  3942  04B8                     u3285:
  3943  04B8  3000               	movlw	0
  3944  04B9  1803               	skipnc
  3945  04BA  3001               	movlw	1
  3946  04BB  2CBF               	goto	l3487
  3947                           	
  3948  04BC                     l6293:	
  3949  04BC  2CBF               	goto	l3487
  3950                           	line	93
  3951                           	
  3952  04BD                     l3486:	
  3953                           	line	95
  3954                           	
  3955  04BD                     l6295:	
  3956                           ;timers.c: 93: }
  3957                           ;timers.c: 95: return 0;
  3958  04BD  3000               	movlw	(0)
  3959  04BE  2CBF               	goto	l3487
  3960                           	
  3961  04BF                     l6297:	
  3962                           	line	96
  3963                           	
  3964  04BF                     l3487:	
  3965  04BF  0008               	return
  3966                           	opt stack 0
  3967                           GLOBAL	__end_of__Timer_IsExpired
  3968  04C0                     	__end_of__Timer_IsExpired:
  3969 ;; =============== function __Timer_IsExpired ends ============
  3970                           
  3971                           	signat	__Timer_IsExpired,4217
  3972                           	global	__Timer_Start
  3973                           psect	text778,local,class=CODE,delta=2
  3974                           global __ptext778
  3975  04C0                     __ptext778:
  3976                           
  3977 ;; *************** function __Timer_Start *****************
  3978 ;; Defined at:
  3979 ;;		line 60 in file "C:\Projects\Nordic\dual wireless mic ref design\clean source code\TX\timers.c"
  3980 ;; Parameters:    Size  Location     Type
  3981 ;;  theTimer        1    wreg     PTR struct .
  3982 ;;		 -> StateMachineTimer(4), 
  3983 ;;  length          2    4[COMMON] unsigned int 
  3984 ;; Auto vars:     Size  Location     Type
  3985 ;;  theTimer        1    0[BANK0 ] PTR struct .
  3986 ;;		 -> StateMachineTimer(4), 
  3987 ;; Return value:  Size  Location     Type
  3988 ;;		None               void
  3989 ;; Registers used:
  3990 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3991 ;; Tracked objects:
  3992 ;;		On entry : 0/0
  3993 ;;		On exit  : 0/0
  3994 ;;		Unchanged: 0/0
  3995 ;; Data sizes:     COMMON   BANK0   BANK1
  3996 ;;      Params:         2       0       0
  3997 ;;      Locals:         0       1       0
  3998 ;;      Temps:          0       0       0
  3999 ;;      Totals:         2       1       0
  4000 ;;Total ram usage:        3 bytes
  4001 ;; Hardware stack levels used:    1
  4002 ;; Hardware stack levels required when called:    2
  4003 ;; This function calls:
  4004 ;;		Nothing
  4005 ;; This function is called by:
  4006 ;;		_IntializeStateMachine
  4007 ;;		_ProcessStateMachine
  4008 ;; This function uses a non-reentrant model
  4009 ;;
  4010                           psect	text778
  4011                           	file	"C:\Projects\Nordic\dual wireless mic ref design\clean source code\TX\timers.c"
  4012                           	line	60
  4013                           	global	__size_of__Timer_Start
  4014  0034                     	__size_of__Timer_Start	equ	__end_of__Timer_Start-__Timer_Start
  4015                           	
  4016  04C0                     __Timer_Start:	
  4017                           	opt	stack 4
  4018                           ; Regs used in __Timer_Start: [wreg-fsr0h+status,2+status,0]
  4019                           ;__Timer_Start@theTimer stored from wreg
  4020  04C0  1283               	bcf	status, 5	;RP0=0, select bank0
  4021  04C1  00A0               	movwf	(__Timer_Start@theTimer)
  4022                           	line	61
  4023                           	
  4024  04C2                     l6263:	
  4025                           ;timers.c: 61: TMR1IE = 0;
  4026  04C2  1683               	bsf	status, 5	;RP0=1, select bank1
  4027  04C3  100C               	bcf	(1120/8)^080h,(1120)&7
  4028                           	line	62
  4029                           	
  4030  04C4                     l6265:	
  4031                           ;timers.c: 62: theTimer->started = Timer_SysTime;
  4032  04C4  1283               	bcf	status, 5	;RP0=0, select bank0
  4033  04C5  0820               	movf	(__Timer_Start@theTimer),w
  4034  04C6  0084               	movwf	fsr0
  4035  04C7  0876               	movf	(_Timer_SysTime),w
  4036  04C8  1383               	bcf	status, 7	;select IRP bank0
  4037  04C9  0080               	movwf	indf
  4038  04CA  0A84               	incf	fsr0,f
  4039  04CB  0877               	movf	(_Timer_SysTime+1),w
  4040  04CC  0080               	movwf	indf
  4041                           	line	63
  4042                           	
  4043  04CD                     l6267:	
  4044                           ;timers.c: 63: TMR1IE = 1;
  4045  04CD  1683               	bsf	status, 5	;RP0=1, select bank1
  4046  04CE  140C               	bsf	(1120/8)^080h,(1120)&7
  4047                           	line	65
  4048                           	
  4049  04CF                     l6269:	
  4050                           ;timers.c: 65: length++;
  4051  04CF  3001               	movlw	low(01h)
  4052  04D0  07F4               	addwf	(__Timer_Start@length),f
  4053  04D1  1803               	skipnc
  4054  04D2  0AF5               	incf	(__Timer_Start@length+1),f
  4055  04D3  3000               	movlw	high(01h)
  4056  04D4  07F5               	addwf	(__Timer_Start@length+1),f
  4057                           	line	66
  4058                           	
  4059  04D5                     l6271:	
  4060                           ;timers.c: 66: length /= 2;
  4061  04D5  3001               	movlw	01h
  4062                           	
  4063  04D6                     u3255:
  4064  04D6  1003               	clrc
  4065  04D7  0CF5               	rrf	(__Timer_Start@length+1),f
  4066  04D8  0CF4               	rrf	(__Timer_Start@length),f
  4067  04D9  3EFF               	addlw	-1
  4068  04DA  1D03               	skipz
  4069  04DB  2CD6               	goto	u3255
  4070                           	line	67
  4071                           	
  4072  04DC                     l6273:	
  4073                           ;timers.c: 67: if ( 1==length )
  4074  04DC  3001               	movlw	01h
  4075  04DD  0674               	xorwf	(__Timer_Start@length),w
  4076  04DE  0475               	iorwf	(__Timer_Start@length+1),w
  4077  04DF  1D03               	skipz
  4078  04E0  2CE2               	goto	u3261
  4079  04E1  2CE3               	goto	u3260
  4080  04E2                     u3261:
  4081  04E2  2CEA               	goto	l6277
  4082  04E3                     u3260:
  4083                           	line	69
  4084                           	
  4085  04E3                     l6275:	
  4086                           ;timers.c: 68: {
  4087                           ;timers.c: 69: length++;
  4088  04E3  3001               	movlw	low(01h)
  4089  04E4  07F4               	addwf	(__Timer_Start@length),f
  4090  04E5  1803               	skipnc
  4091  04E6  0AF5               	incf	(__Timer_Start@length+1),f
  4092  04E7  3000               	movlw	high(01h)
  4093  04E8  07F5               	addwf	(__Timer_Start@length+1),f
  4094  04E9  2CEA               	goto	l6277
  4095                           	line	70
  4096                           	
  4097  04EA                     l3482:	
  4098                           	line	71
  4099                           	
  4100  04EA                     l6277:	
  4101                           ;timers.c: 70: }
  4102                           ;timers.c: 71: theTimer->length = length;
  4103  04EA  1283               	bcf	status, 5	;RP0=0, select bank0
  4104  04EB  0820               	movf	(__Timer_Start@theTimer),w
  4105  04EC  3E02               	addlw	02h
  4106  04ED  0084               	movwf	fsr0
  4107  04EE  0874               	movf	(__Timer_Start@length),w
  4108  04EF  0080               	movwf	indf
  4109  04F0  0A84               	incf	fsr0,f
  4110  04F1  0875               	movf	(__Timer_Start@length+1),w
  4111  04F2  0080               	movwf	indf
  4112                           	line	72
  4113                           	
  4114  04F3                     l3483:	
  4115  04F3  0008               	return
  4116                           	opt stack 0
  4117                           GLOBAL	__end_of__Timer_Start
  4118  04F4                     	__end_of__Timer_Start:
  4119 ;; =============== function __Timer_Start ends ============
  4120                           
  4121                           	signat	__Timer_Start,8312
  4122                           	global	_ClockEight
  4123                           psect	text779,local,class=CODE,delta=2
  4124                           global __ptext779
  4125  044D                     __ptext779:
  4126                           
  4127 ;; *************** function _ClockEight *****************
  4128 ;; Defined at:
  4129 ;;		line 17 in file "C:\Projects\Nordic\dual wireless mic ref design\clean source code\TX\Software_spi.c"
  4130 ;; Parameters:    Size  Location     Type
  4131 ;;  data            1    wreg     unsigned char 
  4132 ;; Auto vars:     Size  Location     Type
  4133 ;;  data            1    0[BANK0 ] unsigned char 
  4134 ;;  t               1    1[BANK0 ] unsigned char 
  4135 ;; Return value:  Size  Location     Type
  4136 ;;		None               void
  4137 ;; Registers used:
  4138 ;;		wreg, status,2, status,0
  4139 ;; Tracked objects:
  4140 ;;		On entry : 0/0
  4141 ;;		On exit  : 0/0
  4142 ;;		Unchanged: 0/0
  4143 ;; Data sizes:     COMMON   BANK0   BANK1
  4144 ;;      Params:         0       0       0
  4145 ;;      Locals:         0       2       0
  4146 ;;      Temps:          2       0       0
  4147 ;;      Totals:         2       2       0
  4148 ;;Total ram usage:        4 bytes
  4149 ;; Hardware stack levels used:    1
  4150 ;; Hardware stack levels required when called:    2
  4151 ;; This function calls:
  4152 ;;		Nothing
  4153 ;; This function is called by:
  4154 ;;		_SPI_Send
  4155 ;;		_Nordic_Read
  4156 ;; This function uses a non-reentrant model
  4157 ;;
  4158                           psect	text779
  4159                           	file	"C:\Projects\Nordic\dual wireless mic ref design\clean source code\TX\Software_spi
                                 .c"
  4160                           	line	17
  4161                           	global	__size_of_ClockEight
  4162  003B                     	__size_of_ClockEight	equ	__end_of_ClockEight-_ClockEight
  4163                           	
  4164  044D                     _ClockEight:	
  4165                           	opt	stack 2
  4166                           ; Regs used in _ClockEight: [wreg+status,2+status,0]
  4167                           ;ClockEight@data stored from wreg
  4168                           	line	19
  4169  044D  1283               	bcf	status, 5	;RP0=0, select bank0
  4170  044E  00A0               	movwf	(ClockEight@data)
  4171                           	
  4172  044F                     l6251:	
  4173                           ;Software_spi.c: 18: BYTE t;
  4174                           ;Software_spi.c: 19: for(t=0;t<8;t++)
  4175  044F  01A1               	clrf	(ClockEight@t)
  4176                           	
  4177  0450                     l6253:	
  4178  0450  3008               	movlw	(08h)
  4179  0451  0221               	subwf	(ClockEight@t),w
  4180  0452  1C03               	skipc
  4181  0453  2C55               	goto	u3221
  4182  0454  2C56               	goto	u3220
  4183  0455                     u3221:
  4184  0455  2C58               	goto	l2247
  4185  0456                     u3220:
  4186  0456  2C87               	goto	l2251
  4187                           	
  4188  0457                     l6255:	
  4189  0457  2C87               	goto	l2251
  4190                           	line	20
  4191                           	
  4192  0458                     l2247:	
  4193                           	line	21
  4194                           ;Software_spi.c: 20: {
  4195                           ;Software_spi.c: 21: if(data & 0x80)
  4196  0458  1FA0               	btfss	(ClockEight@data),(7)&7
  4197  0459  2C5B               	goto	u3231
  4198  045A  2C5C               	goto	u3230
  4199  045B                     u3231:
  4200  045B  2C5E               	goto	l2249
  4201  045C                     u3230:
  4202                           	line	22
  4203                           	
  4204  045C                     l6257:	
  4205                           ;Software_spi.c: 22: (RC1=1);
  4206  045C  1487               	bsf	(57/8),(57)&7
  4207  045D  2C5F               	goto	l2250
  4208                           	line	23
  4209                           	
  4210  045E                     l2249:	
  4211                           	line	24
  4212                           ;Software_spi.c: 23: else
  4213                           ;Software_spi.c: 24: (RC1=0);
  4214  045E  1087               	bcf	(57/8),(57)&7
  4215                           	
  4216  045F                     l2250:	
  4217                           	line	25
  4218                           # 25 "C:\Projects\Nordic\dual wireless mic ref design\clean source code\TX\Software_spi.
                                 c"
  4219  045F  0000               nop ;#
  4220                           # 25 "C:\Projects\Nordic\dual wireless mic ref design\clean source code\TX\Software_spi.
                                 c"
  4221  0460  0000               nop ;#
  4222                           # 25 "C:\Projects\Nordic\dual wireless mic ref design\clean source code\TX\Software_spi.
                                 c"
  4223  0461  0000               nop ;#
  4224                           # 25 "C:\Projects\Nordic\dual wireless mic ref design\clean source code\TX\Software_spi.
                                 c"
  4225  0462  0000               nop ;#
  4226                           # 25 "C:\Projects\Nordic\dual wireless mic ref design\clean source code\TX\Software_spi.
                                 c"
  4227  0463  0000               nop ;#
  4228                           # 25 "C:\Projects\Nordic\dual wireless mic ref design\clean source code\TX\Software_spi.
                                 c"
  4229  0464  0000               nop ;#
  4230                           psect	text779
  4231                           	line	26
  4232                           ;Software_spi.c: 26: (RC0=1);
  4233  0465  1283               	bcf	status, 5	;RP0=0, select bank0
  4234  0466  1407               	bsf	(56/8),(56)&7
  4235                           	line	27
  4236                           # 27 "C:\Projects\Nordic\dual wireless mic ref design\clean source code\TX\Software_spi.
                                 c"
  4237  0467  0000               nop ;#
  4238                           # 27 "C:\Projects\Nordic\dual wireless mic ref design\clean source code\TX\Software_spi.
                                 c"
  4239  0468  0000               nop ;#
  4240                           # 27 "C:\Projects\Nordic\dual wireless mic ref design\clean source code\TX\Software_spi.
                                 c"
  4241  0469  0000               nop ;#
  4242                           # 27 "C:\Projects\Nordic\dual wireless mic ref design\clean source code\TX\Software_spi.
                                 c"
  4243  046A  0000               nop ;#
  4244                           # 27 "C:\Projects\Nordic\dual wireless mic ref design\clean source code\TX\Software_spi.
                                 c"
  4245  046B  0000               nop ;#
  4246                           # 27 "C:\Projects\Nordic\dual wireless mic ref design\clean source code\TX\Software_spi.
                                 c"
  4247  046C  0000               nop ;#
  4248                           psect	text779
  4249                           	line	28
  4250                           ;Software_spi.c: 28: (RC0=0);
  4251  046D  1283               	bcf	status, 5	;RP0=0, select bank0
  4252  046E  1007               	bcf	(56/8),(56)&7
  4253                           	line	29
  4254                           # 29 "C:\Projects\Nordic\dual wireless mic ref design\clean source code\TX\Software_spi.
                                 c"
  4255  046F  0000               nop ;#
  4256                           # 29 "C:\Projects\Nordic\dual wireless mic ref design\clean source code\TX\Software_spi.
                                 c"
  4257  0470  0000               nop ;#
  4258                           # 29 "C:\Projects\Nordic\dual wireless mic ref design\clean source code\TX\Software_spi.
                                 c"
  4259  0471  0000               nop ;#
  4260                           # 29 "C:\Projects\Nordic\dual wireless mic ref design\clean source code\TX\Software_spi.
                                 c"
  4261  0472  0000               nop ;#
  4262                           # 29 "C:\Projects\Nordic\dual wireless mic ref design\clean source code\TX\Software_spi.
                                 c"
  4263  0473  0000               nop ;#
  4264                           # 29 "C:\Projects\Nordic\dual wireless mic ref design\clean source code\TX\Software_spi.
                                 c"
  4265  0474  0000               nop ;#
  4266                           psect	text779
  4267                           	line	30
  4268                           	
  4269  0475                     l6259:	
  4270                           ;Software_spi.c: 30: data = data<<1;
  4271  0475  1283               	bcf	status, 5	;RP0=0, select bank0
  4272  0476  0820               	movf	(ClockEight@data),w
  4273  0477  00F4               	movwf	(??_ClockEight+0)+0
  4274  0478  0774               	addwf	(??_ClockEight+0)+0,w
  4275  0479  00F5               	movwf	(??_ClockEight+1)+0
  4276  047A  0875               	movf	(??_ClockEight+1)+0,w
  4277  047B  00A0               	movwf	(ClockEight@data)
  4278                           	line	19
  4279  047C  3001               	movlw	(01h)
  4280  047D  00F4               	movwf	(??_ClockEight+0)+0
  4281  047E  0874               	movf	(??_ClockEight+0)+0,w
  4282  047F  07A1               	addwf	(ClockEight@t),f
  4283                           	
  4284  0480                     l6261:	
  4285  0480  3008               	movlw	(08h)
  4286  0481  0221               	subwf	(ClockEight@t),w
  4287  0482  1C03               	skipc
  4288  0483  2C85               	goto	u3241
  4289  0484  2C86               	goto	u3240
  4290  0485                     u3241:
  4291  0485  2C58               	goto	l2247
  4292  0486                     u3240:
  4293  0486  2C87               	goto	l2251
  4294                           	
  4295  0487                     l2248:	
  4296                           	line	32
  4297                           	
  4298  0487                     l2251:	
  4299  0487  0008               	return
  4300                           	opt stack 0
  4301                           GLOBAL	__end_of_ClockEight
  4302  0488                     	__end_of_ClockEight:
  4303 ;; =============== function _ClockEight ends ============
  4304                           
  4305                           	signat	_ClockEight,4216
  4306                           	global	_Timer_Constructor
  4307                           psect	text780,local,class=CODE,delta=2
  4308                           global __ptext780
  4309  05E8                     __ptext780:
  4310                           
  4311 ;; *************** function _Timer_Constructor *****************
  4312 ;; Defined at:
  4313 ;;		line 38 in file "C:\Projects\Nordic\dual wireless mic ref design\clean source code\TX\timers.c"
  4314 ;; Parameters:    Size  Location     Type
  4315 ;;		None
  4316 ;; Auto vars:     Size  Location     Type
  4317 ;;		None
  4318 ;; Return value:  Size  Location     Type
  4319 ;;		None               void
  4320 ;; Registers used:
  4321 ;;		wreg, status,2
  4322 ;; Tracked objects:
  4323 ;;		On entry : 0/0
  4324 ;;		On exit  : 0/0
  4325 ;;		Unchanged: 0/0
  4326 ;; Data sizes:     COMMON   BANK0   BANK1
  4327 ;;      Params:         0       0       0
  4328 ;;      Locals:         0       0       0
  4329 ;;      Temps:          0       0       0
  4330 ;;      Totals:         0       0       0
  4331 ;;Total ram usage:        0 bytes
  4332 ;; Hardware stack levels used:    1
  4333 ;; Hardware stack levels required when called:    2
  4334 ;; This function calls:
  4335 ;;		Nothing
  4336 ;; This function is called by:
  4337 ;;		_main
  4338 ;; This function uses a non-reentrant model
  4339 ;;
  4340                           psect	text780
  4341                           	file	"C:\Projects\Nordic\dual wireless mic ref design\clean source code\TX\timers.c"
  4342                           	line	38
  4343                           	global	__size_of_Timer_Constructor
  4344  0010                     	__size_of_Timer_Constructor	equ	__end_of_Timer_Constructor-_Timer_Constructor
  4345                           	
  4346  05E8                     _Timer_Constructor:	
  4347                           	opt	stack 5
  4348                           ; Regs used in _Timer_Constructor: [wreg+status,2]
  4349                           	line	39
  4350                           	
  4351  05E8                     l4457:	
  4352                           ;timers.c: 39: Timer_SysTime = 0;
  4353  05E8  01F6               	clrf	(_Timer_SysTime)
  4354  05E9  01F7               	clrf	(_Timer_SysTime+1)
  4355                           	line	43
  4356                           ;timers.c: 43: TMR1L = 0;
  4357  05EA  1283               	bcf	status, 5	;RP0=0, select bank0
  4358  05EB  018E               	clrf	(14)	;volatile
  4359                           	line	44
  4360                           	
  4361  05EC                     l4459:	
  4362                           ;timers.c: 44: TMR1H = (((int)(-((((8000000.0)/4.0)/500.0)-20))) >> 8) & 0xff;
  4363  05EC  30F0               	movlw	(0F0h)
  4364  05ED  008F               	movwf	(15)	;volatile
  4365                           	line	45
  4366                           	
  4367  05EE                     l4461:	
  4368                           ;timers.c: 45: TMR1L = ((int)(-((((8000000.0)/4.0)/500.0)-20))) & 0xff;
  4369  05EE  3074               	movlw	(074h)
  4370  05EF  008E               	movwf	(14)	;volatile
  4371                           	line	46
  4372                           	
  4373  05F0                     l4463:	
  4374                           ;timers.c: 46: T1CON = 0x01;
  4375  05F0  3001               	movlw	(01h)
  4376  05F1  0090               	movwf	(16)	;volatile
  4377                           	line	47
  4378                           	
  4379  05F2                     l4465:	
  4380                           ;timers.c: 47: TMR1IE = 1;
  4381  05F2  1683               	bsf	status, 5	;RP0=1, select bank1
  4382  05F3  140C               	bsf	(1120/8)^080h,(1120)&7
  4383                           	line	48
  4384                           	
  4385  05F4                     l4467:	
  4386                           ;timers.c: 48: PEIE = 1;
  4387  05F4  170B               	bsf	(94/8),(94)&7
  4388                           	line	49
  4389                           	
  4390  05F5                     l4469:	
  4391                           ;timers.c: 49: TMR1IF = 0;
  4392  05F5  1283               	bcf	status, 5	;RP0=0, select bank0
  4393  05F6  100C               	bcf	(96/8),(96)&7
  4394                           	line	51
  4395                           	
  4396  05F7                     l3479:	
  4397  05F7  0008               	return
  4398                           	opt stack 0
  4399                           GLOBAL	__end_of_Timer_Constructor
  4400  05F8                     	__end_of_Timer_Constructor:
  4401 ;; =============== function _Timer_Constructor ends ============
  4402                           
  4403                           	signat	_Timer_Constructor,88
  4404                           	global	_SetupProcessor
  4405                           psect	text781,local,class=CODE,delta=2
  4406                           global __ptext781
  4407  059E                     __ptext781:
  4408                           
  4409 ;; *************** function _SetupProcessor *****************
  4410 ;; Defined at:
  4411 ;;		line 40 in file "C:\Projects\Nordic\dual wireless mic ref design\clean source code\TX\Main.c"
  4412 ;; Parameters:    Size  Location     Type
  4413 ;;		None
  4414 ;; Auto vars:     Size  Location     Type
  4415 ;;		None
  4416 ;; Return value:  Size  Location     Type
  4417 ;;		None               void
  4418 ;; Registers used:
  4419 ;;		wreg, status,2
  4420 ;; Tracked objects:
  4421 ;;		On entry : 0/0
  4422 ;;		On exit  : 0/0
  4423 ;;		Unchanged: 0/0
  4424 ;; Data sizes:     COMMON   BANK0   BANK1
  4425 ;;      Params:         0       0       0
  4426 ;;      Locals:         0       0       0
  4427 ;;      Temps:          0       0       0
  4428 ;;      Totals:         0       0       0
  4429 ;;Total ram usage:        0 bytes
  4430 ;; Hardware stack levels used:    1
  4431 ;; Hardware stack levels required when called:    2
  4432 ;; This function calls:
  4433 ;;		Nothing
  4434 ;; This function is called by:
  4435 ;;		_main
  4436 ;; This function uses a non-reentrant model
  4437 ;;
  4438                           psect	text781
  4439                           	file	"C:\Projects\Nordic\dual wireless mic ref design\clean source code\TX\Main.c"
  4440                           	line	40
  4441                           	global	__size_of_SetupProcessor
  4442  001F                     	__size_of_SetupProcessor	equ	__end_of_SetupProcessor-_SetupProcessor
  4443                           	
  4444  059E                     _SetupProcessor:	
  4445                           	opt	stack 5
  4446                           ; Regs used in _SetupProcessor: [wreg+status,2]
  4447                           	line	41
  4448                           	
  4449  059E                     l4429:	
  4450                           ;Main.c: 41: OSCCON = 0x71;
  4451  059E  3071               	movlw	(071h)
  4452  059F  1683               	bsf	status, 5	;RP0=1, select bank1
  4453  05A0  008F               	movwf	(143)^080h	;volatile
  4454                           	line	42
  4455                           	
  4456  05A1                     l4431:	
  4457                           ;Main.c: 42: ANSEL = 0;
  4458  05A1  0191               	clrf	(145)^080h	;volatile
  4459                           	line	43
  4460                           	
  4461  05A2                     l4433:	
  4462                           ;Main.c: 43: CMCON0=7;
  4463  05A2  3007               	movlw	(07h)
  4464  05A3  1283               	bcf	status, 5	;RP0=0, select bank0
  4465  05A4  0099               	movwf	(25)	;volatile
  4466                           	line	44
  4467                           ;Main.c: 44: CMCON1=0;
  4468  05A5  019A               	clrf	(26)	;volatile
  4469                           	line	45
  4470                           	
  4471  05A6                     l4435:	
  4472                           ;Main.c: 45: ADON=0;
  4473  05A6  101F               	bcf	(248/8),(248)&7
  4474                           	line	46
  4475                           	
  4476  05A7                     l4437:	
  4477                           ;Main.c: 46: PSA=0;
  4478  05A7  1683               	bsf	status, 5	;RP0=1, select bank1
  4479  05A8  1181               	bcf	(1035/8)^080h,(1035)&7
  4480                           	line	48
  4481                           	
  4482  05A9                     l4439:	
  4483                           ;Main.c: 48: T0IE=0;INTE=0;RAIE=0;PEIE=0;
  4484  05A9  128B               	bcf	(93/8),(93)&7
  4485                           	
  4486  05AA                     l4441:	
  4487  05AA  120B               	bcf	(92/8),(92)&7
  4488                           	
  4489  05AB                     l4443:	
  4490  05AB  118B               	bcf	(91/8),(91)&7
  4491                           	
  4492  05AC                     l4445:	
  4493  05AC  130B               	bcf	(94/8),(94)&7
  4494                           	line	49
  4495                           	
  4496  05AD                     l4447:	
  4497                           ;Main.c: 49: WDTCON=0x17;
  4498  05AD  3017               	movlw	(017h)
  4499  05AE  1283               	bcf	status, 5	;RP0=0, select bank0
  4500  05AF  0098               	movwf	(24)	;volatile
  4501                           	line	51
  4502                           	
  4503  05B0                     l4449:	
  4504                           ;Main.c: 51: TRISA=0x18;
  4505  05B0  3018               	movlw	(018h)
  4506  05B1  1683               	bsf	status, 5	;RP0=1, select bank1
  4507  05B2  0085               	movwf	(133)^080h	;volatile
  4508                           	line	52
  4509                           	
  4510  05B3                     l4451:	
  4511                           ;Main.c: 52: PORTA=0x04;
  4512  05B3  3004               	movlw	(04h)
  4513  05B4  1283               	bcf	status, 5	;RP0=0, select bank0
  4514  05B5  0085               	movwf	(5)	;volatile
  4515                           	line	54
  4516                           	
  4517  05B6                     l4453:	
  4518                           ;Main.c: 54: TRISC=0x04;
  4519  05B6  3004               	movlw	(04h)
  4520  05B7  1683               	bsf	status, 5	;RP0=1, select bank1
  4521  05B8  0087               	movwf	(135)^080h	;volatile
  4522                           	line	55
  4523                           	
  4524  05B9                     l4455:	
  4525                           ;Main.c: 55: PORTC=0x28;
  4526  05B9  3028               	movlw	(028h)
  4527  05BA  1283               	bcf	status, 5	;RP0=0, select bank0
  4528  05BB  0087               	movwf	(7)	;volatile
  4529                           	line	56
  4530                           	
  4531  05BC                     l1128:	
  4532  05BC  0008               	return
  4533                           	opt stack 0
  4534                           GLOBAL	__end_of_SetupProcessor
  4535  05BD                     	__end_of_SetupProcessor:
  4536 ;; =============== function _SetupProcessor ends ============
  4537                           
  4538                           	signat	_SetupProcessor,88
  4539                           	global	_delay_ms
  4540                           psect	text782,local,class=CODE,delta=2
  4541                           global __ptext782
  4542  04F4                     __ptext782:
  4543                           
  4544 ;; *************** function _delay_ms *****************
  4545 ;; Defined at:
  4546 ;;		line 17 in file "C:\Projects\Nordic\dual wireless mic ref design\clean source code\TX\delay.c"
  4547 ;; Parameters:    Size  Location     Type
  4548 ;;  time            1    wreg     unsigned char 
  4549 ;; Auto vars:     Size  Location     Type
  4550 ;;  time            1    0[BANK0 ] unsigned char 
  4551 ;;  temp2           1    2[BANK0 ] unsigned char 
  4552 ;;  temp            1    1[BANK0 ] unsigned char 
  4553 ;; Return value:  Size  Location     Type
  4554 ;;		None               void
  4555 ;; Registers used:
  4556 ;;		wreg, status,2, status,0
  4557 ;; Tracked objects:
  4558 ;;		On entry : 0/0
  4559 ;;		On exit  : 0/0
  4560 ;;		Unchanged: 0/0
  4561 ;; Data sizes:     COMMON   BANK0   BANK1
  4562 ;;      Params:         0       0       0
  4563 ;;      Locals:         0       3       0
  4564 ;;      Temps:          1       0       0
  4565 ;;      Totals:         1       3       0
  4566 ;;Total ram usage:        4 bytes
  4567 ;; Hardware stack levels used:    1
  4568 ;; Hardware stack levels required when called:    2
  4569 ;; This function calls:
  4570 ;;		Nothing
  4571 ;; This function is called by:
  4572 ;;		_SPI_Send
  4573 ;;		_Nordic_Read
  4574 ;;		_ProcessEnterSleep
  4575 ;;		_ProcessButton
  4576 ;;		_ProcessPairing
  4577 ;;		_ProcessNordicBoot
  4578 ;;		_ProcessLink
  4579 ;; This function uses a non-reentrant model
  4580 ;;
  4581                           psect	text782
  4582                           	file	"C:\Projects\Nordic\dual wireless mic ref design\clean source code\TX\delay.c"
  4583                           	line	17
  4584                           	global	__size_of_delay_ms
  4585  002F                     	__size_of_delay_ms	equ	__end_of_delay_ms-_delay_ms
  4586                           	
  4587  04F4                     _delay_ms:	
  4588                           	opt	stack 2
  4589                           ; Regs used in _delay_ms: [wreg+status,2+status,0]
  4590                           ;delay_ms@time stored from wreg
  4591  04F4  1283               	bcf	status, 5	;RP0=0, select bank0
  4592  04F5  00A0               	movwf	(delay_ms@time)
  4593                           	line	18
  4594                           	
  4595  04F6                     l6237:	
  4596                           ;delay.c: 18: BYTE temp=50;
  4597  04F6  3032               	movlw	(032h)
  4598  04F7  00F4               	movwf	(??_delay_ms+0)+0
  4599  04F8  0874               	movf	(??_delay_ms+0)+0,w
  4600  04F9  00A1               	movwf	(delay_ms@temp)
  4601                           	line	19
  4602                           ;delay.c: 19: BYTE temp2=16;
  4603  04FA  3010               	movlw	(010h)
  4604  04FB  00F4               	movwf	(??_delay_ms+0)+0
  4605  04FC  0874               	movf	(??_delay_ms+0)+0,w
  4606  04FD  00A2               	movwf	(delay_ms@temp2)
  4607                           	line	21
  4608                           ;delay.c: 21: while ( time )
  4609  04FE  2D1C               	goto	l554
  4610                           	
  4611  04FF                     l555:	
  4612                           	line	23
  4613                           ;delay.c: 22: {
  4614                           ;delay.c: 23: while (temp2 )
  4615  04FF  2D10               	goto	l556
  4616                           	
  4617  0500                     l557:	
  4618                           	line	25
  4619                           ;delay.c: 24: {
  4620                           ;delay.c: 25: while ( temp )
  4621  0500  2D04               	goto	l6241
  4622                           	
  4623  0501                     l559:	
  4624                           	line	27
  4625                           	
  4626  0501                     l6239:	
  4627                           ;delay.c: 26: {
  4628                           ;delay.c: 27: temp--;
  4629  0501  3001               	movlw	low(01h)
  4630  0502  02A1               	subwf	(delay_ms@temp),f
  4631  0503  2D04               	goto	l6241
  4632                           	line	28
  4633                           	
  4634  0504                     l558:	
  4635                           	line	25
  4636                           	
  4637  0504                     l6241:	
  4638  0504  08A1               	movf	(delay_ms@temp),f
  4639  0505  1D03               	skipz
  4640  0506  2D08               	goto	u3191
  4641  0507  2D09               	goto	u3190
  4642  0508                     u3191:
  4643  0508  2D01               	goto	l6239
  4644  0509                     u3190:
  4645  0509  2D0A               	goto	l6243
  4646                           	
  4647  050A                     l560:	
  4648                           	line	29
  4649                           	
  4650  050A                     l6243:	
  4651                           ;delay.c: 28: }
  4652                           ;delay.c: 29: temp2--;
  4653  050A  3001               	movlw	low(01h)
  4654  050B  02A2               	subwf	(delay_ms@temp2),f
  4655                           	line	30
  4656                           	
  4657  050C                     l6245:	
  4658                           ;delay.c: 30: temp=50;
  4659  050C  3032               	movlw	(032h)
  4660  050D  00F4               	movwf	(??_delay_ms+0)+0
  4661  050E  0874               	movf	(??_delay_ms+0)+0,w
  4662  050F  00A1               	movwf	(delay_ms@temp)
  4663                           	line	31
  4664                           	
  4665  0510                     l556:	
  4666                           	line	23
  4667  0510  08A2               	movf	(delay_ms@temp2),f
  4668  0511  1D03               	skipz
  4669  0512  2D14               	goto	u3201
  4670  0513  2D15               	goto	u3200
  4671  0514                     u3201:
  4672  0514  2D04               	goto	l6241
  4673  0515                     u3200:
  4674  0515  2D16               	goto	l6247
  4675                           	
  4676  0516                     l561:	
  4677                           	line	32
  4678                           	
  4679  0516                     l6247:	
  4680                           ;delay.c: 31: }
  4681                           ;delay.c: 32: temp2=8;
  4682  0516  3008               	movlw	(08h)
  4683  0517  00F4               	movwf	(??_delay_ms+0)+0
  4684  0518  0874               	movf	(??_delay_ms+0)+0,w
  4685  0519  00A2               	movwf	(delay_ms@temp2)
  4686                           	line	33
  4687                           	
  4688  051A                     l6249:	
  4689                           ;delay.c: 33: time--;
  4690  051A  3001               	movlw	low(01h)
  4691  051B  02A0               	subwf	(delay_ms@time),f
  4692                           	line	34
  4693                           	
  4694  051C                     l554:	
  4695                           	line	21
  4696  051C  08A0               	movf	(delay_ms@time),f
  4697  051D  1D03               	skipz
  4698  051E  2D20               	goto	u3211
  4699  051F  2D21               	goto	u3210
  4700  0520                     u3211:
  4701  0520  2D10               	goto	l556
  4702  0521                     u3210:
  4703  0521  2D22               	goto	l563
  4704                           	
  4705  0522                     l562:	
  4706                           	line	35
  4707                           	
  4708  0522                     l563:	
  4709  0522  0008               	return
  4710                           	opt stack 0
  4711                           GLOBAL	__end_of_delay_ms
  4712  0523                     	__end_of_delay_ms:
  4713 ;; =============== function _delay_ms ends ============
  4714                           
  4715                           	signat	_delay_ms,4216
  4716                           	global	_ISR
  4717                           psect	text783,local,class=CODE,delta=2
  4718                           global __ptext783
  4719  05D5                     __ptext783:
  4720                           
  4721 ;; *************** function _ISR *****************
  4722 ;; Defined at:
  4723 ;;		line 64 in file "C:\Projects\Nordic\dual wireless mic ref design\clean source code\TX\Main.c"
  4724 ;; Parameters:    Size  Location     Type
  4725 ;;		None
  4726 ;; Auto vars:     Size  Location     Type
  4727 ;;		None
  4728 ;; Return value:  Size  Location     Type
  4729 ;;		None               void
  4730 ;; Registers used:
  4731 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  4732 ;; Tracked objects:
  4733 ;;		On entry : 0/0
  4734 ;;		On exit  : 0/0
  4735 ;;		Unchanged: 0/0
  4736 ;; Data sizes:     COMMON   BANK0   BANK1
  4737 ;;      Params:         0       0       0
  4738 ;;      Locals:         0       0       0
  4739 ;;      Temps:          4       0       0
  4740 ;;      Totals:         4       0       0
  4741 ;;Total ram usage:        4 bytes
  4742 ;; Hardware stack levels used:    1
  4743 ;; Hardware stack levels required when called:    1
  4744 ;; This function calls:
  4745 ;;		_TimerSystem_TickIsr
  4746 ;; This function is called by:
  4747 ;;		Interrupt level 1
  4748 ;; This function uses a non-reentrant model
  4749 ;;
  4750                           psect	text783
  4751                           	file	"C:\Projects\Nordic\dual wireless mic ref design\clean source code\TX\Main.c"
  4752                           	line	64
  4753                           	global	__size_of_ISR
  4754  0013                     	__size_of_ISR	equ	__end_of_ISR-_ISR
  4755                           	
  4756  05D5                     _ISR:	
  4757                           	opt	stack 1
  4758                           ; Regs used in _ISR: [allreg]
  4759                           psect	intentry,class=CODE,delta=2
  4760                           global __pintentry
  4761  0004                     __pintentry:
  4762                           global interrupt_function
  4763  0004                     interrupt_function:
  4764                           	global saved_w
  4765  007E                     	saved_w	set	btemp+0
  4766  0004  00FE               	movwf	saved_w
  4767  0005  0E03               	swapf	status,w
  4768  0006  00F0               	movwf	(??_ISR+0)
  4769  0007  0804               	movf	fsr0,w
  4770  0008  00F1               	movwf	(??_ISR+1)
  4771  0009  080A               	movf	pclath,w
  4772  000A  00F2               	movwf	(??_ISR+2)
  4773  000B  1283               	bcf	status, 5	;RP0=0, select bank0
  4774  000C  087F               	movf	btemp+1,w
  4775  000D  00F3               	movwf	(??_ISR+3)
  4776  000E  2DD5               	ljmp	_ISR
  4777                           psect	text783
  4778                           	line	67
  4779                           	
  4780  05D5                     i1l4471:	
  4781                           ;Main.c: 67: if ( TMR1IF ) { TimerSystem_TickIsr(); return; }
  4782  05D5  1C0C               	btfss	(96/8),(96)&7
  4783  05D6  2DD8               	goto	u4_21
  4784  05D7  2DD9               	goto	u4_20
  4785  05D8                     u4_21:
  4786  05D8  2DDC               	goto	i1l1132
  4787  05D9                     u4_20:
  4788                           	
  4789  05D9                     i1l4473:	
  4790  05D9  2606               	fcall	_TimerSystem_TickIsr
  4791  05DA  2DDC               	goto	i1l1132
  4792                           	
  4793  05DB                     i1l4475:	
  4794  05DB  2DDC               	goto	i1l1132
  4795                           	
  4796  05DC                     i1l1131:	
  4797                           	line	68
  4798                           	
  4799  05DC                     i1l1132:	
  4800  05DC  0873               	movf	(??_ISR+3),w
  4801  05DD  1283               	bcf	status, 5	;RP0=0, select bank0
  4802  05DE  00FF               	movwf	btemp+1
  4803  05DF  0872               	movf	(??_ISR+2),w
  4804  05E0  008A               	movwf	pclath
  4805  05E1  0871               	movf	(??_ISR+1),w
  4806  05E2  0084               	movwf	fsr0
  4807  05E3  0E70               	swapf	(??_ISR+0)^0FFFFFF80h,w
  4808  05E4  0083               	movwf	status
  4809  05E5  0EFE               	swapf	saved_w,f
  4810  05E6  0E7E               	swapf	saved_w,w
  4811  05E7  0009               	retfie
  4812                           	opt stack 0
  4813                           GLOBAL	__end_of_ISR
  4814  05E8                     	__end_of_ISR:
  4815 ;; =============== function _ISR ends ============
  4816                           
  4817                           	signat	_ISR,88
  4818                           	global	_TimerSystem_TickIsr
  4819                           psect	text784,local,class=CODE,delta=2
  4820                           global __ptext784
  4821  0606                     __ptext784:
  4822                           
  4823 ;; *************** function _TimerSystem_TickIsr *****************
  4824 ;; Defined at:
  4825 ;;		line 138 in file "C:\Projects\Nordic\dual wireless mic ref design\clean source code\TX\timers.c"
  4826 ;; Parameters:    Size  Location     Type
  4827 ;;		None
  4828 ;; Auto vars:     Size  Location     Type
  4829 ;;		None
  4830 ;; Return value:  Size  Location     Type
  4831 ;;		None               void
  4832 ;; Registers used:
  4833 ;;		wreg, status,2
  4834 ;; Tracked objects:
  4835 ;;		On entry : 0/0
  4836 ;;		On exit  : 0/0
  4837 ;;		Unchanged: 0/0
  4838 ;; Data sizes:     COMMON   BANK0   BANK1
  4839 ;;      Params:         0       0       0
  4840 ;;      Locals:         0       0       0
  4841 ;;      Temps:          0       0       0
  4842 ;;      Totals:         0       0       0
  4843 ;;Total ram usage:        0 bytes
  4844 ;; Hardware stack levels used:    1
  4845 ;; This function calls:
  4846 ;;		Nothing
  4847 ;; This function is called by:
  4848 ;;		_ISR
  4849 ;; This function uses a non-reentrant model
  4850 ;;
  4851                           psect	text784
  4852                           	file	"C:\Projects\Nordic\dual wireless mic ref design\clean source code\TX\timers.c"
  4853                           	line	138
  4854                           	global	__size_of_TimerSystem_TickIsr
  4855  000E                     	__size_of_TimerSystem_TickIsr	equ	__end_of_TimerSystem_TickIsr-_TimerSystem_TickIsr
  4856                           	
  4857  0606                     _TimerSystem_TickIsr:	
  4858                           	opt	stack 1
  4859                           ; Regs used in _TimerSystem_TickIsr: [wreg+status,2]
  4860                           	line	139
  4861                           	
  4862  0606                     i1l4477:	
  4863                           ;timers.c: 139: TMR1L = 0;
  4864  0606  1283               	bcf	status, 5	;RP0=0, select bank0
  4865  0607  018E               	clrf	(14)	;volatile
  4866                           	line	140
  4867                           	
  4868  0608                     i1l4479:	
  4869                           ;timers.c: 140: TMR1H = (((int)(-((((8000000.0)/4.0)/500.0)-20))) >> 8) & 0xff;
  4870  0608  30F0               	movlw	(0F0h)
  4871  0609  008F               	movwf	(15)	;volatile
  4872                           	line	141
  4873                           	
  4874  060A                     i1l4481:	
  4875                           ;timers.c: 141: TMR1L = ((int)(-((((8000000.0)/4.0)/500.0)-20))) & 0xff;
  4876  060A  3074               	movlw	(074h)
  4877  060B  008E               	movwf	(14)	;volatile
  4878                           	line	142
  4879                           	
  4880  060C                     i1l4483:	
  4881                           ;timers.c: 142: TMR1IF = 0;
  4882  060C  100C               	bcf	(96/8),(96)&7
  4883                           	line	144
  4884                           	
  4885  060D                     i1l4485:	
  4886                           ;timers.c: 144: Timer_SysTime++;
  4887  060D  3001               	movlw	low(01h)
  4888  060E  07F6               	addwf	(_Timer_SysTime),f
  4889  060F  1803               	skipnc
  4890  0610  0AF7               	incf	(_Timer_SysTime+1),f
  4891  0611  3000               	movlw	high(01h)
  4892  0612  07F7               	addwf	(_Timer_SysTime+1),f
  4893                           	line	145
  4894                           	
  4895  0613                     i1l3490:	
  4896  0613  0008               	return
  4897                           	opt stack 0
  4898                           GLOBAL	__end_of_TimerSystem_TickIsr
  4899  0614                     	__end_of_TimerSystem_TickIsr:
  4900 ;; =============== function _TimerSystem_TickIsr ends ============
  4901                           
  4902                           	signat	_TimerSystem_TickIsr,88
  4903                           psect	text785,local,class=CODE,delta=2
  4904                           global __ptext785
  4905  0000                     __ptext785:
  4906                           	global	btemp
  4907  007E                     	btemp set 07Eh
  4908                           
  4909                           	DABS	1,126,2	;btemp
  4910                           	global	wtemp0
  4911  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.82 build 9453 
Symbol Table                                                                                   Mon Oct 10 13:09:33 2011

                             _i 0034                               pc 0002                              _RD 04E0  
                            _WR 04E1                              fsr 0004             ??_ProcessNordicBoot 0076  
                           l551 028F                             l560 050A                             l561 0516  
                           l562 0522                             l554 051C                             l563 0522  
                           l555 04FF                             l556 0510                             l557 0500  
                           l558 0504                             l559 0501                             _GIE 005F  
                           _RA0 0028                             _RA1 0029                             _RA2 002A  
                           _RA3 002B                             _RC0 0038                             _RC1 0039  
                           _RC2 003A                             _RC3 003B                             _RC5 003D  
                           _ISR 05D5                             _PSA 040B                             _now 0032  
                           fsr0 0004            ??_Nordic_LinkPresent 0028                             indf 0000  
                          S6695 0290                            ?_ISR 0070                            l1122 063C  
                          l1123 0640                            l1124 0641                            l1125 0641  
                          l1128 05BC                            l2250 045F                            l2251 0487  
                          l2261 0418                            l2254 0584                            l2262 0443  
                          l2247 0458                            l2255 0586                            l2263 0437  
                          l2248 0487                            l2256 0599                            l2264 044C  
                          l2249 045E                            l2257 059B                            l2258 059D  
                          l1690 03A0                            l1691 03F2                            l1692 03B0  
                          l1693 03BA                            l1694 03E7                            l2902 062C  
                          l4431 05A1                            l1687 0605                            l1695 03E7  
                          l1696 03F2                            l2912 054D                            l2920 053C  
                          l4441 05AA                            l4433 05A2                            l2905 056F  
                          l2913 0540                            l2921 053E                            l3482 04EA  
                          l2906 0564                            l2914 0532                            l2922 054D  
                          l4451 05B3                            l4443 05AB                            l4435 05A6  
                          l3483 04F3                            l2907 056E                            l2915 054C  
                          l2860 05D4                            l2908 0573                            l2916 0534  
                          l4453 05B6                            l4445 05AC                            l4437 05A7  
                          l4429 059E                            l4461 05EE                            l6301 057B  
                          l2909 0577                            l2917 0536                            l3486 04BD  
                          l2854 0637                            l2870 009B                            l2918 0538  
                          l4455 05B9                            l4447 05AD                            l4439 05A9  
                          l3479 05F7                            l4463 05F0                            l3487 04BF  
                          l6311 0597                            l6303 057D                            l2871 008A  
                          l2863 0016                            l2919 053A                            l2864 00B0  
                          l2872 00A1                            l6241 0504                            l4449 05B0  
                          l4465 05F2                            l4457 05E8                            l6313 059B  
                          l6305 0582                            l6321 03FC                            l2873 00FA  
                          l6401 007E                            l2865 0048                            l2857 05CE  
                          l2881 0108                            l2874 00F1                            l2866 0068  
                          l2858 05CC                            l2890 01CB                            l2882 011F  
                          l6243 050A                            l4467 05F4                            l4459 05EC  
                          l6251 044F                            l6307 0586                            l6315 062D  
                          l6331 040B                            l6323 0402                            l2875 00E7  
                          l2867 00AF                            l6411 0091                            l6403 0082  
                          l2859 05D3                            l2891 0194                            l2883 0175  
                          l2876 00F1                            l2868 0089                            l2892 01AC  
                          l2884 0127                            l6245 050C                            l6237 04F6  
                          l4469 05F5                            l6261 0480                            l6253 0450  
                          l6309 0592                            l6317 0631                            l6341 0418  
                          l6333 040D                            l6325 0404                            l2877 00F0  
                          l2869 00AE                            l6421 00A1                            l6413 0095  
                          l6405 0084                            l6501 03EB                            l2893 01C2  
                          l2885 0137                            l2878 00FA                            l2894 01B3  
                          l2886 0144                            l6247 0516                            l6239 0501  
                          l6255 0457                            l6271 04D5                            l6263 04C2  
                          l6351 0422                            l6343 041E                            l6335 040F  
                          l6327 0406                            l6319 03F5                            l6431 00E2  
                          l6415 0099                            l6407 008B                            l6423 00B0  
                          l6503 05BD                            l2895 01CA                            l6511 0100  
                          l2896 01CB                            l2888 0183                            l6249 051A  
                          l6257 045C                            l6273 04DC                            l6265 04C4  
                          l6281 0493                            l6361 0428                            l6353 0423  
                          l6345 041F                            l6337 0410                            l6329 0408  
                          l6433 00EB                            l6425 00C6                            l6417 009A  
                          l6409 008D                            l6441 01DB                            l6505 05C2  
                          l6601 01AC                            l2889 0184                            l6513 0107  
                          l6521 011F                            l6259 0475                            l6275 04E3  
                          l6267 04CD                            l6291 04B2                            l6283 0499  
                          l6371 0431                            l6363 0429                            l6355 0424  
                          l6347 0420                            l6339 0417                            l6427 00DC  
                          l6419 009B                            l6451 0220                            l6443 01E9  
                          l6435 01CC                            l6603 01B3                            l6531 0144  
                          l6523 0127                            l6515 0108                            l6507 00FB  
                          l2899 0650                            l6611 064B                            l6277 04EA  
                          l6269 04CF                            l6293 04BC                            l6285 049B  
                          l6381 0449                            l6373 0437                            l6365 042A  
                          l6357 0426                            l6349 0421                            l6429 00E0  
                          l6461 025A                            l6453 022B                            l6445 01F7  
                          l6437 01CE                            l6605 01BA                            l6541 014D  
                          l6533 0145                            l6525 0130                            l6517 0113  
                          l6509 00FF                            l6613 0621                            l6621 054E  
                          l6287 04A2                            l6295 04BD                            l6279 048A  
                          l6383 044C                            l6375 043C                            l6367 042B  
                          l6359 0427                            l6391 0029                            l6463 0268  
                          l6455 0236                            l6447 0204                            l6439 01D2  
                          l6471 05FE                            l6607 01BE                            l6551 0157  
                          l6543 014F                            l6535 0147                            l6527 0136  
                          l6519 0118                            l6615 0623                            l6631 0567  
                          l6623 0554                            l6297 04BF                            l6289 04A4  
                          l6369 042C                            l6377 0443                            l6393 003F  
                          l6385 0010                            l6465 0273                            l6457 0244  
                          l6449 0212                            l6473 0603                            l6481 039F  
                          l6561 0161                            l6553 0159                            l6545 0151  
                          l6537 0149                            l6529 013B                            l6609 064A  
                          l6617 0629                            l6633 0569                            l6625 0558  
                          l6641 0524                            l6299 057A                            l6379 0445  
                          l6395 0048                            l6387 0014                            l6467 0281  
                          l6459 024F                            l6475 0605                            l6491 03C5  
                          l6483 03A1                            l6571 016B                            l6563 0163  
                          l6555 015B                            l6547 0153                            l6539 014B  
                          l6619 062A                            l6627 055E                            l6635 056F  
                          l6651 0538                            l6643 052B                            l6397 005E  
                          l6389 001B                            l6469 05F8                            l6493 03C9  
                          l6485 03AC                            l6477 038D                            l6581 0174  
                          l6573 016D                            l6565 0165                            l6557 015D  
                          l6549 0155                            l6637 0573                            l6629 0561  
                          l6653 053A                            l6645 0532                            l6399 0068  
                          l6495 03CD                            l6487 03B6                            l6479 0398  
                          l6591 018C                            l6575 016F                            l6567 0167  
                          l6559 015F                            l6583 0175                            l6655 053C  
                          l6647 0534                            l6639 0523                            l6671 063D  
                          l6497 03DB                            l6489 03BE                            l6593 0193  
                          l6585 017B                            l6577 0171                            l6569 0169  
                          l6657 053F                            l6649 0536                            l6673 063E  
                          l6665 0638                            l6499 03E1                            l6595 0194  
                          l6587 0184                            l6579 0173                            l6659 0540  
                          l6667 063A                            l6597 01A0                            l6589 018B  
                          l6669 063C                            l6599 01A5                            _ADON 00F8  
                          _T0IE 005D                            u3200 0515                            u3201 0514  
                          u3210 0521                            u3211 0520                            u3220 0456  
                          u3300 0597                            u3221 0455                            u3230 045C  
                          u3310 0416                            u3231 045B                            u3311 0415  
                          u3240 0486                            u3320 0431                            u3400 007E  
                          u3241 0485                            u3321 0430                            u3401 007D  
                          u3330 0442                            u3410 0082                            u3331 0441  
                          u3411 0081                            u3403 007A                            u3260 04E3  
                          u3420 00A0                            u3340 0014                            u3500 03CD  
                          u3261 04E2                            u3421 009F                            u3341 0013  
                          u3190 0509                            u3270 0499                            u3430 00C6  
                          u3350 001B                            u3510 03E1                            u3191 0508  
                          u3255 04D6                            u3271 0498                            u3431 00C5  
                          u3351 001A                            u3511 03E0                            u3440 00DC  
                          u3360 003F                            u3520 03F1                            u3600 018B  
                          u3441 00DB                            u3433 00C2                            u3361 003E  
                          u3521 03F0                            u3601 018A                            u3290 0582  
                          u3450 00E0                            u3370 005E                            u3530 05D3  
                          u3610 0192                            u3451 00DF                            u3443 00D8  
                          u3371 005D                            u3363 003B                            u3531 05D2  
                          u3611 0191                            u3460 00EB                            u3380 0065  
                          u3620 01AB                            u3540 0106                            u3285 04B8  
                          u3461 00EA                            u3381 0062                            u3373 005A  
                          u3621 01AA                            u3541 0105                            u3470 039E  
                          u3630 01C9                            u3550 011E                            u3471 039D  
                          u3631 01C8                            u3551 011D                            u3480 03AC  
                          u3560 0136                            u3640 0554                            u3481 03AB  
                          u3561 0135                            u3641 0553                            u3394 0067  
                          u3490 03B6                            u3570 013B                            u3650 055E  
                          u3491 03B5                            u3571 013A                            u3651 055D  
                          _RAIE 005B                            _PEIE 005E                            u3580 017B  
                          u3660 052B                            u3581 017A                            u3661 052A  
                          _INTE 005C                            u3590 0182                            u3591 0181  
                          _WREN 04E2                            u4_20 05D9                            u4_21 05D8  
     __end_of_ProcessNordicBoot 062D                            _main 0638                            _link 0078  
                          btemp 007E                            start 000F           __end_of_Nordic_Wakeup 03F3  
    __size_of_Timer_Constructor 0010                           ??_ISR 0070                      _ClockEight 044D  
                         ?_main 0070                           _EEADR 009B                           _CARRY 0018  
                         _ANSEL 0091                           _T1CON 0010                           _TMR1H 000F  
                         _TMR1L 000E                           _PORTA 0005                           _PORTC 0007  
                         _TRISA 0085                           _TRISC 0087                __end_of_SPI_Send 059E  
        AKM_Constructor@address 0028                  __pbitbssCOMMON 03C8      __size_of_ProcessEnterSleep 0018  
                         pclath 000A                           status 0003                           wtemp0 007E  
           _ProcessStateMachine 0523               ?__Timer_IsExpired 0070                    __end_of_main 0642  
            ??__Timer_IsExpired 0074                          ??_main 0076            ?_ProcessStateMachine 0070  
               SPI_Send@address 0025                          _EEDATA 009A                          _EECON1 009C  
                        _EECON2 009D                          _CMCON0 0019                          _CMCON1 001A  
                        i1l1131 05DC                          i1l1132 05DC                   ??_Nordic_Read 0023  
                        i1l3490 0613                          i1l4471 05D5                          i1l4481 060A  
                        i1l4473 05D9                          i1l4483 060C                          i1l4475 05DB  
                        i1l4485 060D                          i1l4477 0606                          i1l4479 0608  
    __size_of_ProcessNordicBoot 000C                          _OSCCON 008F                          _TMR1IE 0460  
                        _TMR1IF 0060                          _WDTCON 0018                __end_of_delay_ms 0523  
                   ?_ClockEight 0070           ??_ProcessStateMachine 0076                          clrloop 0643  
         _IntializeStateMachine 062D            Nordic_Read@raddress2 0025                          saved_w 007E  
                 ??_ProcessLink 002A         __size_of_ProcessAKMBoot 0007             __end_of_Nordic_Read 044D  
                __pcstackCOMMON 0070                    __pidataBANK0 0651         __size_of_SetupProcessor 001F  
         __Timer_Start@theTimer 0020           __end_of_ProcessButton 00FB        __size_of_AKM_Constructor 00C4  
                     ?_SPI_Send 0023                   SPI_Send@data8 0023         __size_of_ProcessPairing 00D1  
           __size_of_ClockEight 003B                      __pbssBANK0 002E    __size_of_TimerSystem_TickIsr 000E  
           __end_of_ProcessLink 0578                      __pmaintext 0638                      __pintentry 0004  
        ?_IntializeStateMachine 0070                      ??_SPI_Send 0076            Nordic_Wakeup@address 002B  
   __size_of_Nordic_LinkPresent 000E                  _PairingAddress 0388                       ?_delay_ms 0070  
          Nordic_Wakeup@pointer 002D               _StateMachineTimer 0037                     _Nordic_Read 03F3  
                 ?__Timer_Start 0074                    __size_of_ISR 0013       __size_of__Timer_IsExpired 0038  
             ??_AKM_Constructor 0026                      ??_delay_ms 0074          __size_of_Nordic_Wakeup 0066  
                       _timeout 0036                     _ProcessLink 054E            end_of_initialization 061F  
                  _PSwitchCount 002E                  ??__Timer_Start 0076                  _ProcessAKMBoot 064A  
                _SetupProcessor 059E                    ??_ClockEight 0074                   _no_link_count 0035  
                _ProcessPairing 00FB          __end_of_ProcessAKMBoot 0651              __end_of_ClockEight 0488  
                     _SYSTEM_ON 03C8                   _NordicRegData 0306         __Timer_IsExpired@length 0021  
        __end_of_SetupProcessor 05BD                   _Nordic_Wakeup 038D     __end_of_ProcessStateMachine 054E  
                 delay_ms@temp2 0022             _TimerSystem_TickIsr 0606          __end_of_ProcessPairing 01CC  
             __size_of_SPI_Send 0026             start_initialization 0614                     __end_of_ISR 05E8  
           __Timer_Start@length 0074                    _CurrentState 003B                  SPI_Send@Target 0024  
               ?_ProcessAKMBoot 0070            ?_TimerSystem_TickIsr 0070                 ?_SetupProcessor 0070  
                ?_Nordic_Wakeup 0070         ??_IntializeStateMachine 0076                     __pdataBANK0 003C  
               ?_ProcessPairing 0070            __end_of__Timer_Start 04F4          Nordic_LinkPresent@temp 0029  
                   __pbssCOMMON 0076                __Timer_IsExpired 0488                   __pcstackBANK0 0020  
              Nordic_Read@data8 0027               __size_of_delay_ms 002F           ??_TimerSystem_TickIsr 0070  
        __size_of_ProcessButton 00EB                    ?_Nordic_Read 0070                       __pnvBANK0 003B  
                  Nordic_Read@t 0026                       __ptext770 038D                       __ptext771 05F8  
                     __ptext780 05E8                       __ptext772 01CC                       __ptext764 0523  
                     __ptext781 059E                       __ptext773 0010                       __ptext765 054E  
                     __ptext782 04F4                       __ptext774 03F3                       __ptext766 0621  
                     __ptext783 05D5                       __ptext775 062D                       __ptext767 064A  
                     __ptext784 0606                       __ptext776 0578                       __ptext768 00FB  
                     __ptext785 0000                       __ptext777 0488                       __ptext769 05BD  
                     __ptext778 04C0                       __ptext779 044D                 _AKM_Constructor 01CC  
                     __pstrings 0300                       __pswtext1 0290      __end_of_Nordic_LinkPresent 0606  
                 _Timer_SysTime 0076                    ?_ProcessLink 0070                       _linkcount 003C  
     __Timer_IsExpired@theTimer 0020               interrupt_function 0004                 ??_Nordic_Wakeup 0028  
         Nordic_Wakeup@raddress 002A                   _ProcessButton 0010                        _SPI_Send 0578  
                   __stringbase 0305                    delay_ms@temp 0021                    delay_ms@time 0020  
       __end_of_AKM_Constructor 0290           __size_of__Timer_Start 0034                  ?_ProcessButton 0070  
              ??_ProcessAKMBoot 0029                        _delay_ms 04F4              Nordic_Wakeup@data8 002C  
            Nordic_Wakeup@dataR 0029                ??_SetupProcessor 0074                   __size_of_main 000A  
                  __Timer_Start 04C0            __size_of_Nordic_Read 005A                        clear_ram 0642  
      __end_of__Timer_IsExpired 04C0                     ClockEight@t 0021                ??_ProcessPairing 002A  
             _Timer_Constructor 05E8  __size_of_IntializeStateMachine 000B   __end_of_IntializeStateMachine 0638  
            ?_Timer_Constructor 0070    __size_of_ProcessStateMachine 002B             ??_Timer_Constructor 0074  
                ClockEight@data 0020                        intlevel1 0000            __size_of_ProcessLink 002A  
             _ProcessEnterSleep 05BD                ?_AKM_Constructor 0070              ?_ProcessEnterSleep 0070  
                     stringcode 0300                 ??_ProcessButton 0075       __end_of_Timer_Constructor 05F8  
           ??_ProcessEnterSleep 0026                        stringdir 0300                        stringtab 0300  
   __end_of_TimerSystem_TickIsr 0614       __end_of_ProcessEnterSleep 05D5              _Nordic_LinkPresent 05F8  
             _ProcessNordicBoot 0621             ?_Nordic_LinkPresent 0070              ?_ProcessNordicBoot 0070  
